---
title: "Add rezero and resample the eyetracking data"
format: html
---

```{r}
library(tidyverse)
library(here)
library(assertthat)

source(here('helper','ensure_repo_structure.R'))
source(here('helper', 'resampling_helper.R'))
```

```{r}
load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_003))
```

Rezero times


```{r}
data_o <- data 

#filter data without associated events
data <- data %>%
  filter(!is.na(event_num))

#rezero time
data_rezeroed <- data %>%
  rezero_times() # right now, rezeroing on event_num (NOT trial_num)

# TODO: Check this table to see how big of an issue the timing offset is
overly_long_trials <- data_rezeroed %>% filter(t_zeroed > video_duration_ms)
overly_long_trials_summary <- overly_long_trials %>% group_by(participant_lab_id, trial_num) %>% summarise(diff=t_zeroed - video_duration_ms) %>% group_by(participant_lab_id, trial_num) %>% summarise(diff=max(diff))

#"normalize" time according to a point of disambiguation
data_normalized <- data_rezeroed %>%
  mutate(point_of_disambiguation = replace_na(point_of_disambiguation, 0)) %>% # TODO: check if this hits trial on accident
  normalize_times()

#Validate that time is provided in milliseconds
#assert_that(mean(diff(data_normalized$t_norm),na.rm=TRUE) > 1 & mean(diff(data_normalized$t_norm), na.rm=TRUE) < 100)
# TODO this still fails, have a closer look
  


```

Now save the resampled data locally.

```{r saving}
save(data_normalized, file = here(INTERMEDIATE_FOLDER, INTERMEDIATE_004))
```