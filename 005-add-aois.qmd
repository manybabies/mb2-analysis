---
title: "Add metadata and validate"
format: html
---

```{r}
load(here("processed_data", "004-resampled-data.Rds"))
```


```{r}

# add information about screen size and eyetracker coordinate origin
dataset_specs <- read.csv(here('metadata', 'dataset_sheet.csv')) %>%
  select(data_id, screen_dimensions, point_zero) %>%
  separate(data_id, c("lab_id", "age_cohort"), sep="_") %>% 
  separate(screen_dimensions, c("screen_width", "screen_height"), sep=" x ") %>% 
  mutate(screen_width = as.numeric(str_trim(screen_width)),
         screen_height = as.numeric(str_trim(screen_height)))

# TODO: One lab is missing the zero coordinate
allowed_origins <- c('upper left','lower left','center')
invalid_origins <- dataset_specs %>% filter(!(point_zero %in% allowed_origins))

data_resampled_specs <- data_resampled %>% 
  left_join(dataset_specs, by=join_by(lab_id, age_cohort)) %>% 
  filter(point_zero %in% allowed_origins)


# Flip Coordinate Origin
data_corrected_origin <- data_resampled_specs  %>% 
  
    mutate(
      y = case_when(
        point_zero == 'upper left' ~ screen_height - y, #TODO: at least some point zeros are "upper left"
        point_zero == 'center' ~ y + screen_height/2, # TODO: this assumes that up and right are "+" for the eyetracker - check this!
        T ~ x),
      x = case_when(
        point_zero == 'center' ~ x + screen_width/2, # TODO: this assumes that up and right are "+" for the eyetracker - check this!
        T ~ x),
    )

# trim xy that land outside of the screen
data_trimmed <- data_corrected_origin  %>% 
    mutate(x = ifelse(x >= 0 & x <= screen_width, x, NA),
           y = ifelse(y >= 0 & y <= screen_height, y, NA))

# add aois
source(here('helper', 'aoi_helper.R'))
data_with_aois <- data_trimmed %>%
  rename(target_side = target) %>% 
  create_aoi_timepoints()


# TODO: Visualize this data to double check

```

```{r visualize AOIs and data}
source(here('helper', 'aoi_helper.R'))

draw_aoi <- function(aoi_name, color){
  return(
    geom_rect(aes(xmin = aoi_region_sets[[1,paste(aoi_name,'_x_min',sep="")]],
                  xmax = aoi_region_sets[[1,paste(aoi_name,'_x_max',sep="")]],
                  ymin = aoi_region_sets[[1,paste(aoi_name,'_y_min',sep="")]],
                  ymax = aoi_region_sets[[1,paste(aoi_name,'_y_max',sep="")]], 
            fill = color, alpha = 0.7, color = color))
  )
}

temp <- filter(data_with_aois, lab_id=="careylabHarvard"&participant_id=="1810EmCh")

ggplot(temp,aes(x,y)) + 
  xlim(0, 1280) +
  ylim(0, 960) +
  draw_aoi("lbig", "blue") +
  draw_aoi("rbig", "blue") +
  draw_aoi("l", "red") +
  draw_aoi("r", "red") +
  draw_aoi("lb", "yellow") +
  draw_aoi("rb", "yellow") +
  draw_aoi("w", "white")+
  geom_point(alpha=0.5)

#ggplot(xy_timepoints, aes(x = x, y = y)) + 
#  geom_point(alpha = .05) + 
#  xlim(0, administrations$monitor_size_x[1]) + 
#  ylim(0, administrations$monitor_size_y[1]) 

```


```{r saving}
dir.create(here("processed_data"), showWarnings = FALSE)
save(data_with_aois, file = here("processed_data", "005-aoi-data.Rds"))
```