---
title: "AOI-based analysis"
format: html
---

```{r}
library(tidyverse)
library(here)
library(assertthat)
library(ggbeeswarm)
library(gghalves)
library(cowplot)
library(patchwork)
library(brms)
library(tidybayes)
library(knitr)

source(here('helper','ensure_repo_structure.R'))
plot_path <- here("plots")

load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_005))
```

# Preliminaries

Inspecting the structure of the unique trials in the data. Check to see if we have the expected number of familiarization (4 trials) and test trials (2, one ignorance, one knowledge).

```{r}
distinct_trials <- data_preprocessed %>%
  ungroup() %>%
  distinct(lab_id,participant_id,participant_trial_id,trial_file_name,media_name,condition)

trial_overview <- distinct_trials %>%
  filter(condition %in% c("familiarization","knowledge","ignorance")) %>%
  group_by(lab_id,participant_id,condition) %>%
  count()
#check distribution of trials
table(trial_overview$condition,trial_overview$n)

#look a little closer at the cases where we have fewer familiarization trials than expected
participants_w_missing_fam_trials <- trial_overview %>%
  filter(condition=="familiarization",n<4) %>%
  pull(participant_id)

distinct_trials %>%
  filter(participant_id %in% participants_w_missing_fam_trials) %>%
  View()
  
```

Splitting the data into familiarization data and test data.

```{r}
fam_data <- data_preprocessed %>%
  filter(condition %in% c("familiarization"))

test_data <- data_preprocessed %>%
  filter(condition %in% c("knowledge","ignorance"))
```

# AOI Proportion Looking

## Familiarization Data

### Summarizing Familiarization Data

```{r}
summarize_participant_familiarization <- fam_data %>%
  group_by(lab_id,age_cohort,condition,participant_id,participant_trial_id,trial_num,point_of_disambiguation,video_duration_ms) %>%
  filter(t_norm<=120 & t_norm>=-3880) %>%
  mutate(
    aoi_diff = c(0,diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min=min(t_norm),
    t_max=max(t_norm),
    sum_target_general = sum(aoi=="target_general",na.rm=T),
    sum_distractor_general = sum(aoi=="distractor_general",na.rm=T),
    prop_general = sum_target_general/(sum_target_general+sum_distractor_general),
    sum_target_exit = sum(aoi=="target_exit",na.rm=T),
    sum_distractor_exit = sum(aoi=="distractor_exit",na.rm=T),
    prop_exit = sum_target_exit/(sum_target_exit+sum_distractor_exit),
    N_general = sum_target_general+sum_distractor_general,
    N_exit = sum_target_exit+sum_distractor_exit
  ) %>%
  group_by(lab_id,age_cohort,condition,participant_id) %>%
  mutate(familiarization_trial_num = rank(trial_num, ties.method = "first")) #check this
```

Some quick checks on the resulting data

```{r}
#distribution of total looks
ggplot(summarize_participant_familiarization,aes(N_exit))+
  geom_histogram()+
  facet_wrap(~age_cohort)
```

### Overall Plots

```{r}
#plot average proportion looking
overall_p <- ggplot(filter(summarize_participant_familiarization,N_exit>=5), aes(x=as.factor(familiarization_trial_num), y=prop_exit,color=condition))+
  #geom_violin()+
  geom_boxplot()+
  #geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.5,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p
ggsave(here(plot_path,"overall_proportion_first_trial_target_exit_looking.png"),bg="white")

```

### Summary Statistics

```{r}
summarize_fam_aoi_overall <- summarize_participant_familiarization %>%
  group_by(age_cohort,lab_id,participant_id,condition) %>%
  summarize(
    n=n(),
    mean_subj_prop_exit=mean(prop_exit,na.rm=T)
  ) %>%
  group_by(age_cohort,condition) %>%
  summarize(
    participant_num=sum(!is.na( mean_subj_prop_exit)),
    mean_target_looking=mean( mean_subj_prop_exit,na.rm=T),
    sd_target_looking=sd( mean_subj_prop_exit,na.rm=T),
    t_test = list(broom::tidy(t.test(mean_subj_prop_exit, alternative = "two.sided", mu=0.5)))) %>%
  mutate(
    se_target_looking = sd_target_looking/sqrt(participant_num),
    lower_ci = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * se_target_looking,
    upper_ci = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * se_target_looking,
    p.value = purrr::map(t_test, ~select(.x, c('p.value', 'parameter','statistic')))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval=statistic,
    df=parameter
  )
  
summarize_fam_aoi_overall %>%
  knitr::kable()
```

By individual trial

```{r}
summarize_fam_aoi_by_trial <- summarize_participant_familiarization %>%
  group_by(age_cohort,condition,familiarization_trial_num) %>%
  summarize(
    participant_num=sum(!is.na(prop_exit)),
    mean_target_looking=mean(prop_exit,na.rm=T),
    sd_target_looking=sd(prop_exit,na.rm=T)
  ) %>%
  mutate(
    se_target_looking = sd_target_looking/sqrt(participant_num),
    lower_ci = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * se_target_looking,
    upper_ci = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * se_target_looking
    )

summarize_fam_aoi_by_trial %>%
  knitr::kable()
```

### Main Model

#### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(-0.5, 0.5)", lb=-0.5,ub=0.5,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

#shift trial number coding
#From the RR:
#Our key question ofinterest is whether overall anticipation is higher than chance levels on the familiarization trial immediately before the test trials, in service of evaluating the evidence that participants are attentive and making predictive looks immediately prior to test. To evaluate this question across the four models, we will code trial number so that the last trial before the test trials (trial 4) is set to the intercept
summarize_participant_familiarization <- summarize_participant_familiarization %>%
  mutate(familiarization_trial_num_4=familiarization_trial_num-4) %>%
  unite(participant_lab_id,lab_id,participant_id,remove=F) %>% # making sure that participant ids are not accidentally combined across labs
  mutate(prop_exit_adj = prop_exit-0.5) #adjusting for chance


bm_fam_aoi_toddlers <- brm(prop_exit_adj ~ 1+familiarization_trial_num_4+(1+familiarization_trial_num_4|lab_id)+(1+familiarization_trial_num_4|participant_lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_familiarization,age_cohort=="toddlers"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_fam_aoi_toddlers)
prior_summary(bm_fam_aoi_toddlers)
```

Summarize outcomes

Intercept

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_fam_aoi_toddlers %>%
  spread_draws(b_Intercept, sigma) %>%
  mean_hdi(.width = 0.95)
```

Trial Number

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_fam_aoi_toddlers %>%
  spread_draws(b_familiarization_trial_num_4, sigma) %>%
  mean_hdi(.width = 0.95)
```

Compute Bayes factor approach

```{r}
null_fam_aoi_toddlers <-  update(bm_fam_aoi_toddlers, formula = ~ .-1) # remove intercept
summary(null_fam_aoi_toddlers)
brms::bayes_factor(bm_fam_aoi_toddlers, null_fam_aoi_toddlers)
```

#### Adults

```{r}
bm_fam_aoi_adults <- brm(prop_exit_adj ~ 1+familiarization_trial_num_4+(1+familiarization_trial_num_4|lab_id)+(1+familiarization_trial_num_4|participant_lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_familiarization,age_cohort=="adults"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_fam_aoi_adults)
prior_summary(bm_fam_aoi_adults)
```

Summarize outcomes

Intercept

```{r}
#get main coefficient estimate and HDI
bm_fam_aoi_adults %>%
  spread_draws(b_Intercept, sigma) %>%
  mean_hdi(.width = 0.95)
```

Trial Number

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_fam_aoi_adults %>%
  spread_draws(b_familiarization_trial_num_4, sigma) %>%
  mean_hdi(.width = 0.95)
```

Compute Bayes factor approach

```{r}
null_fam_aoi_adults <-  update(bm_fam_aoi_adults, formula = ~ .-1) #remove intercept
summary(null_fam_aoi_adults)
brms::bayes_factor(bm_fam_aoi_adults, null_fam_aoi_adults)
```

## Test Data

### Summarizing Test Data (First Trial)

```{r}
#filter to first trials
test_data_first_trial <- test_data %>%
  #quick filter of the (extended duration) 2nd test trials
  filter(video_duration_ms<37000) 

#check to make sure we are filtering correctly 
# e.g., no participants contribute multiple first trials
test_data_first_trial_overview <- test_data_first_trial %>%
  ungroup() %>%
  distinct(lab_id,participant_id,participant_trial_id,trial_num) 

num_test_first_trials <- test_data_first_trial_overview %>%
  group_by(lab_id,participant_id) %>%
  count()
#make sure we only have one trial per participant
#the next two statements must both be true
assert_that(num_test_first_trials$n[1]==1) # first element equals one
assert_that(length(unique(num_test_first_trials$n))==1) # all elements are equal
```

```{r}
#now summarize all data
summarize_participant_test_first_trial <- test_data_first_trial %>%
  group_by(lab_id,age_cohort,participant_id,participant_trial_id,trial_file_name,
           bear_not_visible_ms,point_of_disambiguation,video_duration_ms,condition) %>%
  #filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  #check this!!!
  filter(t_norm<=120 & t_norm>=-3880) %>%
  mutate(
    aoi_diff = c(0,diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min=min(t_norm),
    t_max=max(t_norm),
    sum_target_general = sum(aoi=="target_general",na.rm=T),
    sum_distractor_general = sum(aoi=="distractor_general",na.rm=T),
    prop_general = sum_target_general/(sum_target_general+sum_distractor_general),
    sum_target_exit = sum(aoi=="target_exit",na.rm=T),
    sum_distractor_exit = sum(aoi=="distractor_exit",na.rm=T),
    prop_exit = sum_target_exit/(sum_target_exit+sum_distractor_exit),
    N_general = sum_target_general+sum_distractor_general,
    N_exit = sum_target_exit+sum_distractor_exit
  )

#add first look
# first_look=aoi[aoi_diff!=0][1]
#there's an issue with the definition of anticipatory window
#requiring a change in gaze within the anticipatory window means taking out cases where infants were "already" looking to the right place, which maybe doesn't quite make sense
```

```{r}
#distribution of total looks
ggplot(summarize_participant_test_first_trial,aes(N_exit))+
  geom_histogram()+
  facet_wrap(~age_cohort)
```

### Overall Plots

First look at the proportional looking measures, focusing on the target exit during the anticipatory window.

```{r}
#plot average proportion looking
overall_p <- ggplot(filter(summarize_participant_test_first_trial,N_exit>=5), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.5,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p
ggsave(here(plot_path,"overall_proportion_first_trial_target_exit_looking.png"),bg="white")
```

Splitting plot by lab and age cohort

```{r}
adults_prop <- ggplot(filter(summarize_participant_test_first_trial,N_exit>=5&age_cohort=="adults"), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"&age_cohort=="adults"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"&age_cohort=="adults"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"&age_cohort=="adults"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"&age_cohort=="adults"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.2,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort+lab_id)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
adults_prop
ggsave(here(plot_path,"adults_proportion_first_trial_target_exit_looking.png"),bg="white")

kids_prop <- ggplot(filter(summarize_participant_test_first_trial,N_exit>=5&age_cohort=="toddlers"), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"&age_cohort=="toddlers"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"&age_cohort=="toddlers"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="ignorance"&age_cohort=="toddlers"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,N_exit>=5&condition=="knowledge"&age_cohort=="toddlers"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.2,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort+lab_id)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
kids_prop
ggsave(here(plot_path,"kids_proportion_first_trial_target_exit_looking.png"),bg="white")
```

### Summary Statistics

```{r}
summarize_test_aoi <- summarize_participant_test_first_trial %>%
  group_by(age_cohort,condition) %>%
  summarize(
    participant_num=sum(!is.na(prop_exit)),
    mean_target_looking=mean(prop_exit,na.rm=T),
    sd_target_looking=sd(prop_exit,na.rm=T)
  )

summarize_test_aoi %>%
  knitr::kable()
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window.

#### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(0, 1)", lb=0,ub=1,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

bm_aoi_toddlers <- brm(prop_exit ~ 1+condition+(1+condition|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_first_trial,age_cohort=="toddlers"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_toddlers)
prior_summary(bm_aoi_toddlers)
```

Summarize outcomes

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_aoi_toddlers %>%
  spread_draws(b_conditionknowledge, sigma) %>%
  mean_hdi(.width = 0.95)
```

Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_toddlers <- hypothesis(bm_aoi_toddlers, "conditionknowledge = 0", class="b")
h_aoi_toddlers
plot(h_aoi_toddlers)
# evidence in favor of condition being different from zero
1/h_aoi_toddlers$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_toddlers <-  update(bm_aoi_toddlers, formula = ~ .-condition)
summary(null_aoi_toddlers)
brms::bayes_factor(bm_aoi_toddlers, null_aoi_toddlers)
```


#### Adults

```{r}
bm_aoi_adults <- brm(prop_exit ~ 1+condition+(1+condition|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_first_trial,age_cohort=="adults"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_adults)
```

```{r}
#get main coefficient estimate and HDI
bm_aoi_adults %>%
  spread_draws(b_conditionknowledge, sigma) %>%
  mean_hdi(.width = 0.95)
```

Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_adults <- hypothesis(bm_aoi_adults, "conditionknowledge = 0")
h_aoi_adults 
plot(h_aoi_adults)
# evidence in favor of condition being different from zero
1/h_aoi_adults$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_adults <-  update(bm_aoi_adults, formula = ~ .-condition)
summary(null_aoi_adults)
brms::bayes_factor(bm_aoi_adults, null_aoi_adults)
```

# Timecourse extension

```{r}
mss_timecourse_test_first_trial <- test_data %>%
  #quick filter of the (extended duration) 2nd test trials
  group_by(lab_id,age_cohort, participant_id, participant_trial_id, 
           trial_file_name,
           bear_not_visible_ms, point_of_disambiguation, 
           video_duration_ms, condition) %>%
  mutate(t_norm_downsampled = floor(t_norm / 250) * 250) |>
  #filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  #check this!!!
  filter(t_norm<=120 & t_norm>=-16880) %>%
  group_by(lab_id, age_cohort, participant_id, participant_trial_id, 
           trial_file_name, condition, t_norm_downsampled) |>
  summarize(on_target = mean(aoi == "target_exit", na.rm=TRUE),
            on_dist = mean(aoi == "distractor_exit", na.rm=TRUE)) 

ms_timecourse_test_first_trial <- mss_timecourse_test_first_trial |>
  group_by(lab_id, age_cohort, trial_file_name, condition, t_norm_downsampled) |>
  summarize(mean_target_general = mean(on_target, na.rm=TRUE),
            mean_distractor_general = mean(on_dist, na.rm=TRUE),
            sum_target_general = sum(on_target, na.rm=TRUE),
            sum_distractor_general = sum(on_dist, na.rm=TRUE),
            prop_general = sum_target_general / 
              (sum_target_general+sum_distractor_general))

```
Check time-course lengths across videos. 

```{r}
test_data |>
  group_by(trial_file_name) |>
  summarise(min_t = min(t_norm), 
            max_t = max(t_norm))
```



```{r}
ggplot(ms_timecourse_test_first_trial |>
         pivot_longer(mean_target_general:mean_distractor_general, 
                      names_to = "trial_type", values_to = "mean_looking"),       
         aes(x = t_norm_downsampled, y = mean_looking, col = trial_type)) + 
  geom_point(alpha = .1) +
  geom_smooth() + 
  facet_grid(trial_file_name~age_cohort)
```


## Timecourse with all trials

```{r}

mss_timecourse_test_first_trial <- test_data %>%
  #quick filter of the (extended duration) 2nd test trials
  filter(!str_detect(trial_file_name, "_INC")) |>
  mutate(first_trial = video_duration_ms<37000) %>%
  group_by(lab_id,age_cohort, participant_id, participant_trial_id, 
           trial_file_name, first_trial, 
           bear_not_visible_ms, point_of_disambiguation, 
           video_duration_ms, condition) %>%
  mutate(t_norm_downsampled = floor(t_norm / 500) * 500) |>
  #filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  #check this!!!
  filter(t_norm>=-16000, t_norm<=10000) %>%
  group_by(age_cohort, participant_id, participant_trial_id, 
           condition, first_trial, t_norm_downsampled) |>
  summarize(on_target = mean(aoi == "target_exit", na.rm=TRUE),
            on_dist = mean(aoi == "distractor_exit", na.rm=TRUE)) 

ms_timecourse_test_first_trial <- mss_timecourse_test_first_trial |>
  group_by(age_cohort, first_trial, condition, t_norm_downsampled) |>
  summarize(mean_target_general = mean(on_target, na.rm=TRUE),
            mean_distractor_general = mean(on_dist, na.rm=TRUE),
            sum_target_general = sum(on_target, na.rm=TRUE),
            sum_distractor_general = sum(on_dist, na.rm=TRUE),
            prop_general = sum_target_general / 
              (sum_target_general+sum_distractor_general))

```




```{r}
ggplot(ms_timecourse_test_first_trial |>
         pivot_longer(mean_target_general:mean_distractor_general, 
                      names_to = "trial_type", values_to = "mean_looking"),       
         aes(x = t_norm_downsampled, y = mean_looking, 
             col = trial_type, lty = first_trial)) + 
  # geom_point(alpha = .1) +
  geom_line() + 
  facet_grid(condition~age_cohort) + 
  geom_vline(xintercept = -3880, lty = 3, col = "black") + 
  geom_vline(xintercept = 120, lty = 3, col = "black") + 
  ggthemes::theme_few() + 
  theme(legend.position = "bottom")
```


# Fam trials



```{r}
mss_fam <- fam_data %>%
  group_by(lab_id,age_cohort, participant_id, participant_trial_id, 
           trial_file_name) %>%
  mutate(t_norm_downsampled = floor(t_norm / 500) * 500) |>
  #filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  #check this!!!
  filter(t_norm>=-16000, t_norm<=10000) %>%
  group_by(age_cohort, participant_id, participant_trial_id, 
           condition, t_norm_downsampled) |>
  summarize(on_target = mean(aoi == "target_exit", na.rm=TRUE),
            on_dist = mean(aoi == "distractor_exit", na.rm=TRUE)) 

mss_fam <- mss_fam |>
  group_by(age_cohort, condition, t_norm_downsampled) |>
  summarize(mean_target_general = mean(on_target, na.rm=TRUE),
            mean_distractor_general = mean(on_dist, na.rm=TRUE),
            sum_target_general = sum(on_target, na.rm=TRUE),
            sum_distractor_general = sum(on_dist, na.rm=TRUE),
            prop_general = sum_target_general / 
              (sum_target_general+sum_distractor_general))

```




```{r}
ggplot(mss_fam |>
         pivot_longer(mean_target_general:mean_distractor_general, 
                      names_to = "trial_type", values_to = "mean_looking"),       
         aes(x = t_norm_downsampled, y = mean_looking, col = trial_type)) + 
  # geom_point(alpha = .1) +
  geom_line() + 
  facet_grid(.~age_cohort) + 
  geom_vline(xintercept = -3880, lty = 3, col = "black") + 
  geom_vline(xintercept = 120, lty = 3, col = "black") + 
  ggthemes::theme_few() + 
  theme(legend.position = "bottom")
```