---
title: "MB2 exclusions"
format: html
---

Goal: implement exclusions, document numbers for exclusions in a separate CSV, and pass on a final dataset. 

```{r}
library(tidyverse)
library(here)
library(assertthat)
library(knitr)
library("papaja")

source(here('helper','ensure_repo_structure.R'))
source(here('helper','exclusion_helper.R'))

load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_005))
load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_002B))
```

This process will be much easier if we create a field `unique_participant_id`.

```{r} 
#this should be present once the pipeline is fully updated
data_preprocessed <- data_preprocessed |>
  unite(col = "unique_participant_id",
        lab_id, participant_id, 
        remove = FALSE, sep = "-")

combined_demo <- combined_demo %>% unite(col = "unique_participant_id",
        lab_id, participant_id,
        remove = FALSE, sep = "-")
```


First trim toddlers that are outside of age range. 

```{r}
# this needs to be filled in after we have age in the preprocessed file.
data_preprocessed <- data_preprocessed %>%
  left_join(combined_demo) #by=join_by(unique_participant_id, lab_id, participant_id, age_cohort))
```


# Individual Trial Exclusions

## Webcam specific: exclude after manual checking of dataquality

```{r}

mew <- bind_rows(lapply(
  list.files(
    here(DEMO_DATA_DIR, "webcam_exclusions"),
    pattern = "\\.csv$", full.names = TRUE
  ),
  function(file) {
    df <- read.csv(file)
    df$filename <- basename(file)
    return(df)
  }
))

fn_pattern <- "^(\\w+?)_(\\w+?)_(\\w+?)_(\\w+)\\.csv$"

# the poor man's pivot longer
manual_exclusions <- bind_rows(
  mew %>% select(1, 15, trial = 2, ok = 3),
  mew %>% select(1, 15, trial = 4, ok = 5),
  mew %>% select(1, 15, trial = 6, ok = 7),
  mew %>% select(1, 15, trial = 8, ok = 9),
  mew %>% select(1, 15, trial = 10, ok = 11),
  mew %>% select(1, 15, trial = 12, ok = 13),
) %>% mutate(man_exclude = tolower(ok) != "yes") %>%
  mutate(unique_participant_id =
           paste(
             sub(fn_pattern, "\\1", filename),
             id,
             sub(fn_pattern, "\\2", filename),
             sep="-"
             )) %>% 
  select(unique_participant_id, media_name = trial, man_exclude)

data_preprocessed <- data_preprocessed %>%
  left_join(manual_exclusions, by=c("media_name", "unique_participant_id"))

```

## Sufficient Looking Data per Trial

"We will exclude individual trials if more than 50% of the gaze data is missing (defined as off-screen or unavailable point of gaze during the whole trial, not just the anticipatory period)." (p. 33 Stage 1 Registered Report)

```{r}
# summarize by participant, trial and condition
summarized_valid_looks <- data_preprocessed %>%
  #define a valid point of gaze
  #we define a valid point of gaze as requiring both a valid x-coordinate and a valid y-coordinate
  mutate(
    valid_xy_look_type = case_when(
      !is.na(x_screen) & !is.na(y_screen) ~ "both x and y are valid",
      !is.na(x_screen) & is.na(y_screen) ~ "x is valid but not y",
      is.na(x_screen) & !is.na(y_screen) ~ "y is valid but not x",
      is.na(x_screen) & is.na(y_screen) ~ "neither x nor y are valid",
      TRUE ~ "check for error"
    )
  ) %>%
  mutate(
    valid_xy_look = ifelse(valid_xy_look_type == "both x and y are valid",1,0)
  ) %>%
  #only focus on familiarization and test trials
  filter(condition %in% c("familiarization", "ignorance", "knowledge")) %>%
  group_by(unique_participant_id,lab_id,age_cohort,condition,participant_id,participant_trial_id,trial_num) %>%
  summarize(
    total_frames=n(),
    total_valid_looks = sum(valid_xy_look),
    prop_valid_looks = total_valid_looks / total_frames
  )
```

Inspect the resulting valid looking data

```{r}
hist(summarized_valid_looks$prop_valid_looks)

ggplot(summarized_valid_looks, aes(prop_valid_looks,fill=age_cohort))+
  geom_histogram()+
  facet_wrap(~age_cohort+condition)
```

Exclude trials that do not meet the 50% valid looking criterion

```{r}
summarized_valid_looks <- summarized_valid_looks %>%
  mutate(
    valid_looking_trial = case_when(
      prop_valid_looks >= 0.5 ~ 1,
      TRUE ~ 0
    )) %>%
  mutate(
    trial_error = case_when(
      valid_looking_trial == 0 ~ "yes",
      TRUE ~ "no"
    ),
    trial_error_type = case_when(
      valid_looking_trial == 0 ~ "insufficient valid looking data",
      TRUE ~ NA
    )
  )

# inspect trial errors by age cohort and condition
summarized_valid_looks %>%
  group_by(age_cohort,condition,trial_num) %>%
  summarize(
    total_trials = n(),
    valid_trials = sum(valid_looking_trial),
    prop_valid_trials = valid_trials/total_trials
  )
```

Join back in the information about trial errors into the overall data

```{r}
data_preprocessed <- data_preprocessed %>%
  left_join(summarized_valid_looks)
```

# Trial-based Exclusions

## Sufficient Valid Familiarization Trials

> Of these, participants will be excluded sequentially if (5) their data is missing on more than one familiarization trial, or 

Summarize the number of valid familiarization trials by participant.

```{r}
summarized_valid_familiarization_trials <- data_preprocessed %>%
  filter(condition == "familiarization") %>%
  filter(trial_error == "no") %>%
  distinct(unique_participant_id,lab_id,age_cohort,participant_id,participant_trial_id,trial_num) %>%
  group_by(unique_participant_id,lab_id,age_cohort,participant_id) %>%
  summarize(
    total_valid_fam_trials = n()
  )

#inspect
ggplot(summarized_valid_familiarization_trials, aes(total_valid_fam_trials,fill=age_cohort))+
  geom_histogram()+
  facet_wrap(~age_cohort)

#participants are excluded if insufficient valid familiarization trials are available
summarized_valid_familiarization_trials <- summarized_valid_familiarization_trials %>%
  mutate(
    sufficient_fam_trials = ifelse(total_valid_fam_trials>=3,1,0)
  )

#join back in to main data
data_preprocessed <- data_preprocessed %>%
  left_join(summarized_valid_familiarization_trials)
```

## Valid First Test Trial

> (6) their data is missing on the first test trial. If multiple reasons for exclusion are applicable to a participant, the criteria will be assigned in the order above (for details on exclusions, see Supplemental Material).

Identify participants without the first test trial

```{r}
# identify valid and invalid first test trials
summarized_valid_first_test_trials <- data_preprocessed %>%
  filter(condition %in% c("ignorance","knowledge")) %>%
  # check this, need to make sure this is a robust way of identifying the first test trial
  filter(trial_num==5) %>%
  distinct(unique_participant_id,lab_id,age_cohort,condition,participant_id,participant_trial_id,trial_num,trial_error) %>%
  mutate(
    valid_first_test_trial = case_when(
      trial_error == "yes" ~ 0,
      trial_error == "no" ~ 1,
      TRUE ~ NA
    )
  ) %>%
  #remove columns that vary within participants, to make joining at the participant level possible
  select(-condition, -participant_trial_id,-trial_num)

#join back in to main data
data_preprocessed <- data_preprocessed %>%
  left_join(summarized_valid_first_test_trials)
```

## Overall Trial-based Exclusions

```{r}
participant_trial_errors <- data_preprocessed %>%
  mutate(
    trial_based_error = case_when(
      #step 5 (familiarization)
      sufficient_fam_trials == 0 ~ "yes",
      #step 6 (first test trial)
      valid_first_test_trial == 0 ~ "yes",
      TRUE ~ "no"
    ),
    trial_based_error_type = case_when(
      sufficient_fam_trials == 0 ~ "5",
      valid_first_test_trial == 0 ~ "6",
      TRUE ~ NA
    )
  )
  
```

## Overview

```{r}
overview_trial_based_errors <- participant_trial_errors %>%
  distinct(unique_participant_id,lab_id,age_cohort,participant_id,trial_based_error,trial_based_error_type) %>%
  group_by(age_cohort) %>%
  summarize(
    total_N = n(),
    trial_error_exclusions = sum(trial_based_error=="yes"),
    prop_excluded = trial_error_exclusions / total_N
  )

overview_trial_based_errors %>%
  knitr::kable()

```

> TO DO: spit out overview of trial-based exclusions and pass a dataset with trial-based exclusions incorporated on to the next processing step

# Lab and participant information
```{r}
#MSS: One key question to me is what is meant by N collected? Does this include every single adult/kid that was tested? Even pilots?

d_participants <- participant_trial_errors %>% distinct(unique_participant_id, trial_based_error, trial_based_error_type)
  
d_participants <- combined_demo %>%
  left_join(d_participants)

write_csv(d_participants,
          here(INTERMEDIATE_FOLDER, INTERMEDIATE_006a))

n_before_exclusion <- d_participants %>%
  summarise(n = length(unique(unique_participant_id)))

# check if this overlaps with eye-tracking data. If no eyetracking data available, check session info. If equipment error, participant should still be included in initial sample.

n_adults_included <- d_participants %>% filter(age_cohort=="adults") %>% summarise(n = length(unique(unique_participant_id)))
n_toddlers_included <- d_participants %>% filter(age_cohort=="toddlers") %>% summarise(n = length(unique(unique_participant_id)))

n_labs_adults <- d_participants %>% filter(age_cohort=="adults") %>% summarise(n = length(unique(lab_id)))

n_labs_toddlers <- d_participants %>% filter(age_cohort=="toddlers") %>% summarise(n = length(unique(lab_id)))

age_stat_adults <- data_preprocessed %>% 
  filter(age_cohort=="adults") %>% 
  group_by(lab_id, unique_participant_id) %>%
  summarise(age_years = (as.numeric(age_years))[1]) %>%
  ungroup %>%
  summarise(mean = mean(age_years, na.rm = TRUE), 
            min = min(age_years, na.rm = TRUE), 
            max = max(age_years, na.rm = TRUE),
            sd = sd(age_years, na.rm = TRUE))

age_stat_toddlers <- data_preprocessed %>% 
  filter(age_cohort=="toddlers") %>% 
  group_by(lab_id, unique_participant_id) %>%
  summarise(age_mo = age_mo[1]) %>%
  ungroup %>%
  summarise(mean = mean(age_mo), 
            min = min(age_mo), 
            max = max(age_mo),
            sd = sd(age_mo))
```

```{r}
#adults
lab_stats_adults <- data_preprocessed %>%
  filter(age_cohort=="adults") %>% 
  group_by(lab_id, unique_participant_id) %>%
  summarise(age_years = (as.numeric(age_years))[1], 
            method = method[1]) %>%
  group_by(lab_id) %>%
  summarise(Mean_Age = round(mean(age_years, na.rm = TRUE), 2),
            Method = paste(unique(method[!is.na(method)]), collapse = ", "))

n_adults_collected <- combined_demo %>% 
  filter(age_cohort=="adults") %>% 
  group_by(lab_id) %>% 
  summarise(N_collected = length(unique(unique_participant_id)))

lab_stats_adults_included <- data_preprocessed %>%  filter(age_cohort=="adults") %>%   mutate(trial_based_error = case_when(
      sufficient_fam_trials == 0 ~ "yes",
      valid_first_test_trial == 0 ~ "yes",
      TRUE ~ "no")) %>% 
  filter(trial_based_error=="no") 

lab_stats_adults_female <- lab_stats_adults_included %>% group_by (lab_id, participant_gender) %>%
  summarise(N_female = length(unique(unique_participant_id))) %>% filter(participant_gender=="woman") %>% select(-participant_gender)
  
lab_stats_adults_included <- lab_stats_adults_included %>% 
  group_by (lab_id) %>%
  summarise(N_included = length(unique(unique_participant_id)))

lab_stats_adults <- lab_stats_adults %>% left_join(lab_stats_adults_included) %>%      left_join(lab_stats_adults_female) %>% left_join(n_adults_collected) %>% 
  select(lab_id, N_collected, N_included, N_female, Mean_Age, Method) %>% 
  arrange(lab_id, Method)

papaja::apa_table(lab_stats_adults,
                  caption = "Lab and Participant information.",
                  format.args = list(digits = 0),
                  longtable = TRUE,font_size="footnotesize",
                  align=c("l","c","c","c","c","l"),
                  col.names = c("Lab","N collected","N included", "Sex (N   Female)","Mean Age (years)","Method"))
```

```{r}
#toddlers
lab_stats_toddlers <- data_preprocessed %>%
  filter(age_cohort=="toddlers") %>% 
  group_by(lab_id, unique_participant_id) %>%
  summarise(age_mo = (as.numeric(age_mo))[1], 
            method = method[1]) %>%
  group_by(lab_id) %>%
  summarise(Mean_Age = round(mean(age_mo, na.rm = TRUE), 2),
            Method = paste(unique(method[!is.na(method)]), collapse = ", "))

n_toddlers_collected <- combined_demo %>% 
  filter(age_cohort=="toddlers") %>% 
  group_by(lab_id) %>% 
  summarise(N_collected = length(unique(unique_participant_id)))

lab_stats_toddlers_included <- data_preprocessed %>%
  filter(age_cohort=="toddlers") %>% 
  mutate(trial_based_error = case_when(
      #step 5 (familiarization)
      sufficient_fam_trials == 0 ~ "yes",
      #step 6 (first test trial)
      valid_first_test_trial == 0 ~ "yes",
      TRUE ~ "no")) %>% 
  filter(trial_based_error=="no") 

lab_stats_toddlers_female <- lab_stats_toddlers_included %>%
  group_by (lab_id, participant_gender) %>%
  summarise(N_female = length(unique(unique_participant_id))) %>%
  filter(participant_gender=="girl") %>%
  select(-participant_gender)
  
lab_stats_toddlers_included <- lab_stats_toddlers_included %>% 
  group_by (lab_id) %>%
  summarise(N_included = length(unique(unique_participant_id)))

lab_stats_toddlers <- lab_stats_toddlers %>%
  left_join(lab_stats_toddlers_included) %>%
  left_join(lab_stats_toddlers_female) %>%
  left_join(n_toddlers_collected) %>% 
  select(lab_id, N_collected, N_included, N_female, Mean_Age, Method) %>% 
  arrange(lab_id, Method)

papaja::apa_table(lab_stats_toddlers,
                  caption = "Lab and Participant information.",
                  format.args = list(digits = 0),
                  longtable = TRUE,font_size="footnotesize",
                  align=c("l","c","c","c","c","l"),
                  col.names = c("Lab","N collected","N included", "Sex (N   Female)","Mean Age (months)","Method"))
```


Our final dataset will consist of `r n_before_exclusion` participants, with an overall exclusion rate of XYZ% (toddlers: XYZ%, adults: XYZ%). Tables 1 A. and B. show the distribution of included participants across labs, eye-tracking methods, and ages. A final sample of `r sum(lab_stats_toddlers_included$N_included)` toddlers (XX% female) that will have been tested in `r n_labs_toddlers` labs (mean lab sample size = `r mean(lab_stats_toddlers_included$N_included)`, SD =`r sd(lab_stats_toddlers_included$N_included)`, range: `r min(lab_stats_toddlers_included$N_included)` - `r max(lab_stats_toddlers_included$N_included)`) will be analyzed. The average age of toddlers in the final sample will be `r round(age_stat_toddlers$mean, 2)` months (SD: `r round(age_stat_toddlers$sd, 2)`, range: `r round(age_stat_toddlers$min, 2)` - `r round(age_stat_toddlers$max, 2)`). The final sample size of included adults will be N = `r n_adults_included` (XX% female), tested in `r sum(lab_stats_adults_included$N_included)` labs (mean lab sample size = `r mean(lab_stats_adults_included$N_included)`, SD = `r sd(lab_stats_adults_included$N_included)`, range: `r min(lab_stats_adults_included$N_included)` - `r max(lab_stats_adults_included$N_included)`). Their mean age will be `r round(age_stat_adults$mean, 2)` years (SD: `r round(age_stat_adults$sd, 2)`, range: `r round(age_stat_adults$min, 2)` - `r round(age_stat_adults$max, 2)`).

```{r saving}
save(data_preprocessed, file = here(INTERMEDIATE_FOLDER, INTERMEDIATE_006))
```