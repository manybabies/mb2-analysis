---
title: "Exploratory analyses"
format: html
---

```{r}
library(tidyverse)
library(here)
library(assertthat)
library(ggbeeswarm)
library(gghalves)
library(cowplot)
library(patchwork)
library(brms)
library(tidybayes)
library(knitr)
library(corrr)
library(ggpubr)

source(here('helper','ensure_repo_structure.R'))
plot_path <- here("plots")
paper_path <- here("paper")

load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_002B))
load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_006))
```
```{r}
# Load all summaries
# List all RDS files in the results folder
rds_files <- list.files(RESULTS_FOLDER, pattern = ".*summarize.*\\.rds$", full.names = TRUE)

# Load each RDS file as a separate variable in the global environment
for (file in rds_files) {
  rds_name <- tools::file_path_sans_ext(basename(file))
  assign(rds_name, readRDS(file))
}
```

Splitting the data into familiarization data and test data.

```{r}
fam_data <- data_preprocessed_post_exclusions %>%
  filter(condition %in% c("familiarization"))

test_data <- data_preprocessed_post_exclusions %>%
  filter(condition %in% c("knowledge","ignorance"))
```

<!-- Splitting the data into familiarization data and test data. -->

<!-- ```{r} -->
<!-- fam_data <- fam_data %>% -->
<!--   filter(method=="In-lab") -->

<!-- test_data <- test_data %>% -->
<!--    filter(method=="In-lab") -->
<!-- ``` -->

# AOI Proportion Looking

## Familiarization Data

### Summarizing Familiarization Data

```{r}
# Load all summaries
# List all RDS files in the results folder
rds_files <- list.files(RESULTS_FOLDER, pattern = ".*summarize.*\\.rds$", full.names = TRUE)

# Load each RDS file as a separate variable in the global environment
for (file in rds_files) {
  rds_name <- tools::file_path_sans_ext(basename(file))
  assign(rds_name, readRDS(file))
}

summarize_participant_familiarization <- fam_data %>%
  group_by(lab_id,age_cohort,condition,participant_lab_id,participant_id,participant_trial_id,trial_num,point_of_disambiguation,video_duration_ms) %>%
  filter(t_norm<=120 & t_norm>=-3880) %>%
  mutate(
    aoi_diff = c(0,diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min=min(t_norm),
    t_max=max(t_norm),
    sum_target_general = sum(aoi=="target_general",na.rm=T),
    sum_distractor_general = sum(aoi=="distractor_general",na.rm=T),
    prop_general = sum_target_general/(sum_target_general+sum_distractor_general),
    sum_target_exit = sum(aoi=="target_exit",na.rm=T),
    sum_distractor_exit = sum(aoi=="distractor_exit",na.rm=T),
    prop_exit = sum_target_exit/(sum_target_exit+sum_distractor_exit),
    N_general = sum_target_general+sum_distractor_general,
    N_exit = sum_target_exit+sum_distractor_exit
  ) %>%
  group_by(lab_id,age_cohort,condition,participant_id) %>%
  mutate(familiarization_trial_num = rank(trial_num, ties.method = "first")) #check this

summarize_participant_familiarization_overall <- summarize_participant_familiarization %>%
  group_by(lab_id,age_cohort,participant_lab_id,participant_id) %>%
  summarize(
    fam_trial_n = n(),
    fam_prop_exit=mean(prop_exit,na.rm=TRUE),
    fam_prop_general=mean(prop_general,na.rm=TRUE)
  )
```

## Test Data

### Summarizing Test Data (First Trial)

```{r}
#filter to first trials
test_data_first_trial <- test_data %>%
  #filter to first trial only
  filter(trial_num==5)

#check to make sure we are filtering correctly 
# e.g., no participants contribute multiple first trials
test_data_first_trial_overview <- test_data_first_trial %>%
  ungroup() %>%
  distinct(lab_id,participant_lab_id,participant_id,participant_trial_id,trial_num) 

num_test_first_trials <- test_data_first_trial_overview %>%
  group_by(lab_id,participant_lab_id,participant_id) %>%
  count()
#make sure we only have one trial per participant
#the next two statements must both be true
assert_that(num_test_first_trials$n[1]==1) # first element equals one
assert_that(length(unique(num_test_first_trials$n))==1) # all elements are equal
```

```{r}
#now summarize all data
summarize_participant_test_first_trial <- test_data_first_trial %>%
  group_by(lab_id,age_cohort,age_mo,age_years_n,participant_lab_id,participant_id,participant_trial_id,trial_file_name,
           bear_not_visible_ms,point_of_disambiguation,video_duration_ms,condition) %>%
  #filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  #check this!!!
  filter(t_norm<=120 & t_norm>=-3880) %>%
  mutate(
    aoi_diff = c(0,diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min=min(t_norm),
    t_max=max(t_norm),
    sum_target_general = sum(aoi=="target_general",na.rm=T),
    sum_distractor_general = sum(aoi=="distractor_general",na.rm=T),
    prop_general = sum_target_general/(sum_target_general+sum_distractor_general),
    sum_target_exit = sum(aoi=="target_exit",na.rm=T),
    sum_distractor_exit = sum(aoi=="distractor_exit",na.rm=T),
    prop_exit = sum_target_exit/(sum_target_exit+sum_distractor_exit),
    N_general = sum_target_general+sum_distractor_general,
    N_exit = sum_target_exit+sum_distractor_exit
  ) %>%
  ungroup() %>%
  #center age and condition
  mutate(
    age_mo_c = age_mo - mean(age_mo,na.rm=TRUE),
    condition_c = case_when(
      condition=="knowledge" ~ -0.5,
      condition=="ignorance" ~ 0.5
    )
  )

saveRDS(summarize_participant_test_first_trial, file = here(RESULTS_FOLDER,"summarize_participant_test_first_trial.rds"))
```

# First Look Analysis

 <!-- First saccades will be determined as the first change in gaze occurring within the anticipatory time window that is directed towards one of the AOIs. The first look is then the binary variable denoting the target of this first saccade (i.e., either the correct or incorrect AOI) and is defined as the first AOI where participants fixated at for at least 150 ms, as in Rayner et al. (2009). The rationale for this definition was that, if participants are looking at a location within the tunnel exit AOIs before the anticipation period, they might have been looking there for other reasons than action prediction. We therefore count only looks that start within the anticipation period because they more unambiguously reflect action predictions. This further prevents us from running into a situation where we would include a lot of fixations on regions other than the tunnel exit AOIs because participants are looking somewhere else before the anticipation period begins. -->

## Compute first looks

### Convert to run-length encoding format

```{r}
#convert to rle data
rle_fam_data <- fam_data %>%
  filter(t_norm<=120 & t_norm>=-3880) %>% # only pass data in anticipatory window
  group_by(age_cohort,age_mo,age_years_n,participant_lab_id,lab_id,participant_id,participant_trial_id, trial_num,condition) %>%
  reframe(lengths = rle(aoi)$lengths, 
            values = rle(aoi)$values)

rle_test_data <- test_data %>%
  filter(t_norm<=120 & t_norm>=-3880) %>% # only pass data in anticipatory window
  group_by(age_cohort,age_mo,age_years_n,participant_lab_id,lab_id,participant_id,participant_trial_id, trial_num,condition) %>%
  reframe(lengths = rle(aoi)$lengths, 
            values = rle(aoi)$values)
```


### Compute the first looks/ anticipatory looking

Function for computing first look and RT

Summarizing a few key decisions:
- We compute both a first look (first valid look to the target or distractor AOIs during the anticipatory window) and a first shift (consistent with the Registered Report: starting on the AOIs does not count, there must be evidence of a shift to the AOI during the anticipatory window)
- We ignore NAs altogether in defining shifts (this also means that if there are a lot of NAs at the beginning of the window and then the infants' first look is to the target/ distractor AOI, this is counted the same (i.e., ignored - we still need to see a shift to the AOI) as if the infant started on the target/distractor AOI.
- For RT computation, we compute all samples up to landing on the target/ distractor AOI look and multiply by the sampling rate.

```{r}
# takes rle_data dataframe (already rle'd)
get_first_look <- function (rle_data, SAMPLING_RATE = 40, MINIMUM_ANTICIPATORY_LOOK_MS = 150) {
  
  # end if no data
  if (is.null(rle_data$values) | is.null(rle_data$lengths) | sum(rle_data$values!="NA_NA") == 0) {
    return(tibble(
      first_look = NA,
      first_look_rt = NA,
      first_shift = NA,
      first_shift_rt = NA,
      shift_type = NA,
      shift_type_all = NA))
  }
  
  #minimum look duration
  #look must be a specific duration to count (e.g. 150 ms)
  min_look_length = ceiling(MINIMUM_ANTICIPATORY_LOOK_MS / (1000/SAMPLING_RATE))
  #any values we want to skip as a potential looking/ landing target
  values_to_skip = c("NA_NA")
  
  rle_data_idx <- rle_data |> 
    #create an overall index
    mutate(idx = seq_along(values)) |> 
    #create an index that skips specific values (NA_NA)
    mutate(
      include = !(values %in% values_to_skip),
      cumulative_index_skipping_nas = cumsum(include)
    ) |> 
    mutate(
      idx_skip_nas = if_else(include,cumulative_index_skipping_nas,NA)
    ) |> 
    select(-include,-cumulative_index_skipping_nas)
  
  #determine onsets
  onset_aoi <- filter(rle_data_idx,idx == 1)$values
  onset_aoi_skip_nas <- filter(rle_data_idx,idx_skip_nas == 1)$values # zero point AOI, excluding NAs
  
  #find the first valid look within the rle data
  first_look_rle <- rle_data_idx |> 
    #filter to valid looks to target or distractor
    filter(values %in% c("target_exit", "distractor_exit"),
           lengths >= min_look_length) |> 
    #get the first look
    slice(1)
  
  #finds the first valid "shift" within the rle data
  first_shift_landing_rle <- rle_data_idx |> 
    filter(idx_skip_nas != 1, # first shift landing is post the initial look location, not counting NAs
           values %in% c("target_exit", "distractor_exit"),
           lengths >= min_look_length) |> 
    slice(1)
  
  # end if no anticipatory look to the AOIs
  if (nrow(first_look_rle) == 0) {
    return(tibble(
      first_look = NA,
      first_look_rt = NA,
      first_shift = NA,
      first_shift_rt = NA,
      shift_type = "no anticipatory look",
      shift_type_all = NA))
  }
  
  #determine first look
  first_look <- first_look_rle$values
  
  # rt is the number of samples happening before arrival
  # (first sample of arrival)
  # times the length of a sample
  #need to keep NAs here for valid looking times
  #MZ: we used to add 1 here but I think that might be wrong? because the first sample is 0 ms, i.e. right at the start of the window
  first_look_rt <- ((rle_data_idx |> 
    filter(idx < first_look_rle$idx) |> 
    pull(lengths) |> sum())) * (1000/SAMPLING_RATE)
  
  # if there are valid shifts, add them
  if (nrow(first_shift_landing_rle) == 0) {
    first_shift_landing <- NA
    landing_time_rt <- NA
    shift_type <- NA
    shift_type_all <- NA
  } else {
    #consolidate shift location information
    first_shift_landing <- first_shift_landing_rle$values
    shift_type <- paste0(onset_aoi_skip_nas, "_TO_", first_shift_landing)
    shift_type_all <- rle_data_idx |> 
      filter(idx_skip_nas <= first_shift_landing_rle$idx_skip_nas) |> 
      pull(values) |> 
      paste(collapse = "_TO_")
    #compute RT
    landing_time_rt <- ((rle_data_idx |> 
                           filter(idx < first_shift_landing_rle$idx) |> 
                           pull(lengths) |> sum())) * (1000/SAMPLING_RATE)
  }
    
  return(tibble(
    first_look = first_look, #first valid look location, regardless of whether there was a shift to the location
    first_look_rt = first_look_rt, #reaction time for first valid look location, regardless of whether there was a shift to the location
    first_shift = first_shift_landing, #first shift to a valid look location
    first_shift_rt = landing_time_rt, #reaction time for first shift to a valid look location
    shift_type = shift_type, #shift in locations (START_LOCATION_TO_LANDING_LOCATION) for first shift to a valid look location
    shift_type_all = shift_type_all) # all shifts during the anticipatory window
    )
}
```

Now compute anticipatory looking/ first looks for every trial

```{r}
# compute RTs
d_anticipatory_fam <- rle_fam_data %>%
  group_by(age_cohort,age_mo,age_years_n,participant_lab_id,lab_id,participant_id,participant_trial_id, trial_num,condition) %>%
  nest() %>%
  mutate(data = lapply(data, get_first_look)) %>%
  unnest(cols = c(data))
d_anticipatory_test <- rle_test_data %>%
  group_by(age_cohort,age_mo,age_years_n,participant_lab_id,lab_id,participant_id,participant_trial_id, trial_num,condition) %>%
  nest() %>%
  mutate(data = lapply(data, get_first_look)) %>%
  unnest(cols = c(data))
```

### Test Data

```{r}
summarize_participant_test_first_look <- d_anticipatory_test %>%
  group_by(age_cohort,participant_lab_id,lab_id,participant_id,condition) %>%
  summarize(
    N = n(),
    prop_correct_first_look = mean(first_look =="target_exit"),
    average_rt = mean(first_look_rt),
    average_rt_correct = mean(first_look_rt[first_look =="target_exit"])
  ) 

#check N, SEs, CIs, might not be quite right yet
summarize_overall_test_first_look <- summarize_participant_test_first_look %>%
  group_by(age_cohort,condition) %>%
  summarize(
    N = sum(!is.na(prop_correct_first_look)),
    prop_target_first_look = mean(prop_correct_first_look,na.rm=T),
    sd_target_first_look=sd(prop_correct_first_look,na.rm=T),
    se_target_first_look = sd_target_first_look/sqrt(N),
    lower_ci = prop_target_first_look - qt(1 - (0.05 / 2), N - 1) * se_target_first_look ,
    upper_ci = prop_target_first_look + qt(1 - (0.05 / 2), N - 1) * se_target_first_look
  ) 

ggplot(filter(d_anticipatory_test,!is.na(first_look)),aes(condition,fill=first_look))+
  geom_bar(position="fill")+
  facet_wrap(~age_cohort)

ggplot(summarize_overall_test_first_look,aes(condition,prop_target_first_look,color=condition))+
  geom_errorbar(aes(ymin=lower_ci,ymax=upper_ci),width=0)+
  geom_point(size = 3) +
  geom_hline(yintercept=0.5,linetype="dashed")+
  facet_wrap(~age_cohort)+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  theme(legend.position="none")+
  ylim(0,1)+
  ylab("Proportion First Look to Target Exit")
```

#### First Trial Only

```{r}
summarize_participant_test_first_look_first_trial <- d_anticipatory_test %>%
  filter(trial_num==5) %>%
  group_by(age_cohort,participant_lab_id,lab_id,participant_id,condition) %>%
  summarize(
    N = n(),
    prop_correct_first_look = mean(first_look =="target_exit"),
    average_rt = mean(first_look_rt),
    average_rt_correct = mean(first_look_rt[first_look =="target_exit"])
  ) 

#check N, SEs, CIs, might not be quite right yet
summarize_overall_test_first_look_first_trial <- summarize_participant_test_first_look_first_trial %>%
  group_by(age_cohort,condition) %>%
  summarize(
    N = sum(!is.na(prop_correct_first_look)),
    prop_target_first_look = mean(prop_correct_first_look,na.rm=T),
    sd_target_first_look=sd(prop_correct_first_look,na.rm=T),
    se_target_first_look = sd_target_first_look/sqrt(N),
    lower_ci = prop_target_first_look - qt(1 - (0.05 / 2), N - 1) * se_target_first_look ,
    upper_ci = prop_target_first_look + qt(1 - (0.05 / 2), N - 1) * se_target_first_look
  ) 

ggplot(filter(d_anticipatory_test,!is.na(first_look)&trial_num==5),aes(condition,fill=first_look))+
  geom_bar(position="fill")+
  facet_wrap(~age_cohort)

overall_fl_test <- ggplot(summarize_overall_test_first_look_first_trial,aes(condition,prop_target_first_look,color=condition))+
  geom_errorbar(aes(ymin=lower_ci,ymax=upper_ci),width=0)+
  geom_point(size = 5) +
  geom_hline(yintercept=0.5,linetype="dashed")+
  facet_wrap(~age_cohort)+
  theme_cowplot()+
  theme(strip.background = element_blank(),
  strip.text.x = element_blank())+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  theme(legend.position="none")+
  ylim(0,1)+
  ylab("Proportion First Look to Target Exit\n(First Trial Only)")
overall_fl_test
ggsave(here(plot_path,"overall_test_trial_first_look_first_trial.png"),bg="white",width=9, height=6)
```
# Exploratory analyses

## 1. Spill-over:

Spill-over: we will analyze within-participants data from the second test trial that participants saw, using exploratory models to assess whether (1) findings are consistent when both trials are included (overall condition effect), (2) whether effects are magnified or diminished on the second trial (order main effect), and (3) whether there is evidence of “spillover” - dependency in anticipation on the second trial depending on what the first trial is (condition x order interaction effect).

## 1.a.Spill-over Analysis

### Overall Plots

First look at the proportional looking measures, focusing on the target exit during the anticipatory window.

```{r}
#plot average proportion looking
overall_p_test_both <- ggplot(summarize_participant_test_both_trials, aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_beeswarm(alpha=0.2,cex=0.5)+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,condition=="ignorance"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,condition=="knowledge"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,condition=="ignorance"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,condition=="knowledge"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  stat_summary(fun.data="mean_cl_boot",size=1.5,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort)+
  theme(legend.position="none")+
  #ggtitle("Test")+
  theme(plot.title = element_text(hjust= 0.5, face="bold"))+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, Both Trials)")
overall_p_test_both
ggsave(here(plot_path,"overall_proportion_both_trials_target_exit_looking.png"),bg="white",width=9,height=6)
```

Splitting plot by lab and age cohort

```{r}
adults_prop_both <- ggplot(filter(summarize_participant_test_both_trials,N_exit>=5&age_cohort=="adults"), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="ignorance"&age_cohort=="adults"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="knowledge"&age_cohort=="adults"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="ignorance"&age_cohort=="adults"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="knowledge"&age_cohort=="adults"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.2,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort+lab_id)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, Both Trials)")
adults_prop_both
ggsave(here(plot_path,"adults_proportion_both_trials_target_exit_looking.png"),bg="white", width = 16, height = 10)

kids_prop_both <- ggplot(filter(summarize_participant_test_both_trials,N_exit>=5&age_cohort=="toddlers"), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="ignorance"&age_cohort=="toddlers"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="knowledge"&age_cohort=="toddlers"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="ignorance"&age_cohort=="toddlers"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_both_trials,N_exit>=5&condition=="knowledge"&age_cohort=="toddlers"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_beeswarm(alpha=0.5)+
  stat_summary(fun.data="mean_cl_boot",size=1.2,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort+lab_id)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, Both Trials)")
kids_prop_both
ggsave(here(plot_path,"kids_proportion_both_trials_target_exit_looking.png"),bg="white", width = 16, height = 10)
```

Plot the effect by age

```{r}
kid_prop_by_age_both <- ggplot(filter(summarize_participant_test_both_trials,N_exit>=5&age_cohort=="toddlers"),aes(x=age_mo,y=prop_exit,color=condition))+
  geom_hline(yintercept=0.5, linetype="dashed")+
  geom_point(alpha=0.4)+
  geom_smooth(method="lm")+
  xlab("Age (in months)")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, Both Trials)")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")
kid_prop_by_age_both
ggsave(here(plot_path,"kids_proportion_both_trials_target_exit_looking_by_age.png"),bg="white", width = 9, height = 6)
```

### Summary Statistics

```{r}
summarize_test_aoi_both <- summarize_participant_test_both_trials %>%
  group_by(age_cohort,lab_id,participant_lab_id,participant_id,condition) %>%
  summarize(
    n=n(),
    mean_subj_prop_exit=mean(prop_exit,na.rm=T)
  ) %>%
  group_by(age_cohort,condition) %>%
  summarize(
    participant_num=sum(!is.na(mean_subj_prop_exit)),
    mean_target_looking=mean(mean_subj_prop_exit,na.rm=T),
    sd_target_looking=sd(mean_subj_prop_exit,na.rm=T),
     t_test = list(broom::tidy(t.test(mean_subj_prop_exit, alternative = "two.sided", mu=0.5)))) %>%
  mutate(
    #95% CIs
    lower_ci_target_looking = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    upper_ci_target_looking = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    #mean_target_looking_general = mean(prop_general, na.rm=T),
   # sd_target_looking_general=sd(prop_general,na.rm=T),
    lower_ci_target_looking_general = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    upper_ci_target_looking_general = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    p.value = purrr::map(t_test, ~select(.x, c('p.value', 'parameter','statistic')))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval=statistic,
    df=parameter
  )
  

summarize_test_aoi_both %>%
  knitr::kable()

saveRDS(summarize_test_aoi_both, file = here(RESULTS_FOLDER,"summarize_test_aoi_both.rds"))
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window.

#### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(0, 1)", lb=0,ub=1,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

bm_aoi_toddlers_both <- brm(prop_exit ~ 1+condition_c*age_mo_c+(1+condition_c*age_mo_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_both_trials,age_cohort=="toddlers"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_toddlers_both)
prior_summary(bm_aoi_toddlers_both)

saveRDS(bm_aoi_toddlers_both, file = here(RESULTS_FOLDER,"bm_aoi_toddlers_both.rds"))
```

Summarize outcomes

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_aoi_toddlers_both %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_both %>%
  spread_draws(b_age_mo_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_both %>%
  spread_draws(`b_condition_c:age_mo_c`, sigma) %>%
  mean_hdi(.width = 0.95)
```

Visualize model coefficients

```{r}
bm_aoi_toddlers_both %>%
  spread_draws(b_condition_c,b_age_mo_c,`b_condition_c:age_mo_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient,y=b)) +
  stat_halfeye()+
  geom_hline(yintercept=0,linetype="dashed")+
  theme_cowplot()+
  scale_x_discrete(limits=c("b_condition_c:age_mo_c","b_age_mo_c","b_condition_c"),labels=c("Condition x Age","Age","Condition"))+
  ylab("Model Coefficient Estimate")+
  xlab("Model Predictor")+
  coord_flip()
ggsave(here(plot_path,"test_toddlers_model_coefficients_both.png"),bg="white",width=9,height=6)
```


Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_toddlers_both <- hypothesis(bm_aoi_toddlers_both, "condition_c = 0", class="b")
h_aoi_toddlers_both
plot(h_aoi_toddlers_both)
# evidence in favor of condition being different from zero
1/h_aoi_toddlers_both$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_toddlers_both <-  update(bm_aoi_toddlers_both, formula = ~ .-condition_c)
summary(null_aoi_toddlers_both)
brms::bayes_factor(bm_aoi_toddlers_both, null_aoi_toddlers_both)
```


#### Adults

```{r}
bm_aoi_adults_both <- brm(prop_exit ~ 1+condition_c+(1+condition_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_both_trials,age_cohort=="adults"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_adults_both)

saveRDS(bm_aoi_adults_both, file = here(RESULTS_FOLDER,"bm_aoi_adults_both.rds"))
```

```{r}
#get main coefficient estimate and HDI
bm_aoi_adults_both %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)
```

Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_adults_both <- hypothesis(bm_aoi_adults_both, "condition_c = 0")
h_aoi_adults_both 
plot(h_aoi_adults_both)
# evidence in favor of condition being different from zero
1/h_aoi_adults_both$hypothesis$Evid.Ratio
```
Visualize model coefficients

```{r}
bm_aoi_adults_both %>%
  spread_draws(b_condition_c, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient,y=b)) +
  stat_halfeye()+
  geom_hline(yintercept=0,linetype="dashed")+
  theme_cowplot()+
  scale_x_discrete(limits=c("b_condition_c"),labels=c("Condition"))+
  ylab("Model Coefficient Estimate")+
  xlab("Model Predictor")+
  coord_flip()
ggsave(here(plot_path,"test_adults_model_coefficients_both.png"),bg="white",width=9,height=6)
```

Alternate Bayes factor approach

```{r}
null_aoi_adults_both <-  update(bm_aoi_adults_both, formula = ~ .-condition_c)
summary(null_aoi_adults_both)
brms::bayes_factor(bm_aoi_adults_both, null_aoi_adults_both)
```

## 1.b. whether effects are magnified or diminished on the second trial (order main effect), and (3) whether there is evidence of “spillover” - dependency in anticipation on the second trial depending on what the first trial is (condition x order interaction effect)

```{r}
# create order variable
summarize_participant_test_both_trials_order <- summarize_participant_test_both_trials %>% 
   mutate(order_c=case_when((trial_num==5 & condition=="knowledge") | (trial_num==6 & condition=="ignorance") ~ -0.5, (trial_num==5 & condition=="ignorance")| (trial_num==6 & condition=="knowledge") ~ 0.5))
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) and order on proportion target looking during the anticipatory window.

#### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(0, 1)", lb=0,ub=1,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

bm_aoi_toddlers_both_order <- brm(prop_exit ~ 1+condition_c*order_c+(1+condition_c*order_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_both_trials_order,age_cohort=="toddlers"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_toddlers_both_order)
prior_summary(bm_aoi_toddlers_both_order)

saveRDS(bm_aoi_toddlers_both_order, file = here(RESULTS_FOLDER,"bm_aoi_toddlers_both_order.rds"))
```

Summarize outcomes

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_aoi_toddlers_both_order %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_both_order %>%
  spread_draws(b_order_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_both_order %>%
  spread_draws(`b_condition_c:order_c`, sigma) %>%
  mean_hdi(.width = 0.95)
```

Visualize model coefficients

```{r}
bm_aoi_toddlers_both_order %>%
  spread_draws(b_condition_c,b_order_c,`b_condition_c:order_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient,y=b)) +
  stat_halfeye()+
  geom_hline(yintercept=0,linetype="dashed")+
  theme_cowplot()+
  scale_x_discrete(limits=c("b_condition_c:order_c","b_order_c","b_condition_c"),labels=c("Condition x Order","Order","Condition"))+
  ylab("Model Coefficient Estimate")+
  xlab("Model Predictor")+
  coord_flip()
ggsave(here(plot_path,"test_toddlers_model_coefficients_both_order.png"),bg="white",width=9,height=6)
```


Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_toddlers_both_order <- hypothesis(bm_aoi_toddlers_both_order, "order_c = 0", class="b")
h_aoi_toddlers_both_order
plot(h_aoi_toddlers_both_order)
# evidence in favor of condition being different from zero
1/h_aoi_toddlers_both_order$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_toddlers_both_order <-  update(bm_aoi_toddlers_both_order, formula = ~ .-order_c)
summary(null_aoi_toddlers_both_order)
brms::bayes_factor(bm_aoi_toddlers_both_order, null_aoi_toddlers_both_order)
```

#### Adults

```{r}
bm_aoi_adults_both_order <- brm(prop_exit ~ 1+condition_c*order_c+(1+condition_c*order_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_both_trials_order,age_cohort=="adults"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_adults_both_order)

saveRDS(bm_aoi_adults_both_order, file = here(RESULTS_FOLDER,"bm_aoi_adults_both_order.rds"))
```


```{r}
#get main coefficient estimate and HDI
bm_aoi_adults_both_order %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_adults_both_order %>%
  spread_draws(b_order_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_adults_both_order %>%
  spread_draws(`b_condition_c:order_c`, sigma) %>%
  mean_hdi(.width = 0.95)
```
Visualize model coefficients

```{r}
bm_aoi_adults_both_order %>%
  spread_draws(b_condition_c,b_order_c,`b_condition_c:order_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient,y=b)) +
  stat_halfeye()+
  geom_hline(yintercept=0,linetype="dashed")+
  theme_cowplot()+
  scale_x_discrete(limits=c("b_condition_c:order_c","b_order_c","b_condition_c"),labels=c("Condition x Order","Order","Condition"))+
  ylab("Model Coefficient Estimate")+
  xlab("Model Predictor")+
  coord_flip()
ggsave(here(plot_path,"test_adults_model_coefficients_both_order.png"),bg="white",width=9,height=6)
```


Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_adults_both_order <- hypothesis(bm_aoi_adults_both_order, "order_c = 0")
h_aoi_adults_both_order 
plot(h_aoi_adults_both_order)
# evidence in favor of condition being different from zero
1/h_aoi_adults_both_order$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_adults_both_order <-  update(bm_aoi_adults_both_order, formula = ~ .-order_c)
summary(null_aoi_adults_both_order)
brms::bayes_factor(bm_aoi_adults_both_order, null_aoi_adults_both_order)
```

## 2. Connections between familiarization and test

We will explore whether condition differences vary for participants who show higher rates of anticipation during the four familiarization trials. For example, we might group participants according to whether they did or did not show correct AL at the end of the familiarization phase, defined as overall longer looking at the correct AOI than the incorrect AOI on average in trials 3 and 4 of the familiarization phase.

### 2.a. Only anticipators on final familiarization trial

```{r}
#first, find the participants who anticipate correctly on the last trial
summarize_first_looks_fam_trials <- d_anticipatory_fam %>%
  group_by(age_cohort,participant_lab_id,lab_id,participant_id,condition,trial_num) %>%
  summarize(
    prop_correct_first_look = mean(first_look =="target_exit"),
    average_rt = mean(first_look_rt),
    average_rt_correct = mean(first_look_rt[first_look =="target_exit"])
  )
correct_first_looks_final_fam_trial <- summarize_first_looks_fam_trials %>%
  filter(!is.na(prop_correct_first_look)&trial_num==4) %>%
  ungroup() %>%
  select(age_cohort,lab_id, participant_id, participant_lab_id,prop_correct_first_look) %>%
  rename(correct_first_look_final_fam_trial=prop_correct_first_look)

#join in to test trial
summarize_participant_test_first_trial <- summarize_participant_test_first_trial %>%
  left_join(correct_first_looks_final_fam_trial)
summarize_participant_test_first_look_first_trial <- summarize_participant_test_first_look_first_trial %>%
  left_join(correct_first_looks_final_fam_trial)

# overall plot
#plot average proportion looking
overall_p_correct_final_fam_trial <- ggplot(filter(summarize_participant_test_first_trial,correct_first_look_final_fam_trial==1), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_beeswarm(alpha=0.2,cex=0.5)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,correct_first_look_final_fam_trial==1&condition=="ignorance"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,correct_first_look_final_fam_trial==1&condition=="knowledge"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,correct_first_look_final_fam_trial==1&condition=="ignorance"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,correct_first_look_final_fam_trial==1&condition=="knowledge"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  stat_summary(fun.data="mean_cl_boot",size=1.5,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p_correct_final_fam_trial
ggsave(here(plot_path,"overall_proportion_first_trial_target_exit_looking_correct_final_fam_first_look.png"),bg="white",width=9,height=6)
```

#### Summary Statistics

```{r}
summarize_test_aoi_correct_final_fam_trial <- summarize_participant_test_first_trial %>%
  filter(correct_first_look_final_fam_trial==1) %>%
  group_by(age_cohort,condition) %>%
  summarize(
    participant_num=sum(!is.na(prop_exit)),
    mean_target_looking=mean(prop_exit,na.rm=T),
    sd_target_looking=sd(prop_exit,na.rm=T),
    mean_target_looking_general = mean(prop_general, na.rm=T),
    sd_target_looking_general=sd(prop_general,na.rm=T),
  )

summarize_test_aoi_correct_final_fam_trial %>%
  knitr::kable()
```

#### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window.

##### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(0, 1)", lb=0,ub=1,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

bm_aoi_toddlers_correct_final_fam_trial <- brm(prop_exit ~ 1+condition_c*age_mo_c+(1+condition_c*age_mo_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_first_trial,age_cohort=="toddlers"&correct_first_look_final_fam_trial==1),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_toddlers_correct_final_fam_trial)

saveRDS(bm_aoi_toddlers_correct_final_fam_trial, file = here(RESULTS_FOLDER,"bm_aoi_toddlers_correct_final_fam_trial.rds"))
```

Summarize outcomes

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(b_age_mo_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(`b_condition_c:age_mo_c`, sigma) %>%
  mean_hdi(.width = 0.95)
```

##### Adults

```{r}
bm_aoi_adults_correct_final_fam_trial <- brm(prop_exit ~ 1+condition_c+(1+condition_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_first_trial,age_cohort=="adults"&correct_first_look_final_fam_trial==1),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_adults_correct_final_fam_trial)

saveRDS(bm_aoi_adults_correct_final_fam_trial, file = here(RESULTS_FOLDER,"bm_aoi_adults_correct_final_fam_trial.rds"))
```

```{r}
#get main coefficient estimate and HDI
bm_aoi_adults_correct_final_fam_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)
```

### 2.b. Only >50% looking to target during familiarization trials

#### Plot

```{r}
#join overall familiarization looking in to test trial
summarize_participant_test_first_trial <- summarize_participant_test_first_trial %>%
  left_join(summarize_participant_familiarization_overall)

# overall plot
#plot average proportion looking
overall_p_sufficient_fam_prop_looking <- ggplot(filter(summarize_participant_test_first_trial,fam_prop_exit>0.5), aes(x=condition, y=prop_exit,color=condition))+
  #geom_violin()+
  #geom_boxplot()+
  geom_beeswarm(alpha=0.2,cex=0.5)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,fam_prop_exit>0.5&condition=="ignorance"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_violin(data=filter(summarize_participant_test_first_trial,fam_prop_exit>0.5&condition=="knowledge"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,fam_prop_exit>0.5&condition=="ignorance"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  geom_half_boxplot(data=filter(summarize_participant_test_first_trial,fam_prop_exit>0.5&condition=="knowledge"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  stat_summary(fun.data="mean_cl_boot",size=1.5,color="black")+
  geom_hline(yintercept=0.5,linetype="dashed")+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  facet_wrap(~age_cohort)+
  theme(legend.position="none")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p_sufficient_fam_prop_looking
ggsave(here(plot_path,"overall_proportion_first_trial_target_exit_looking_sufficient_fam_prop_looking.png"),bg="white",width=9,height=6)
```

#### Summary Statistics

```{r}
summarize_test_aoi_sufficient_fam_prop_looking <- summarize_participant_test_first_trial %>%
  filter(fam_prop_exit>0.5) %>%
  group_by(age_cohort,condition) %>%
  summarize(
    participant_num=sum(!is.na(prop_exit)),
    mean_target_looking=mean(prop_exit,na.rm=T),
    sd_target_looking=sd(prop_exit,na.rm=T),
    mean_target_looking_general = mean(prop_general, na.rm=T),
    sd_target_looking_general=sd(prop_general,na.rm=T),
  )

summarize_test_aoi_sufficient_fam_prop_looking %>%
  knitr::kable()
```

### 2.c. Correlation between familiarization and test

#### Plot 

```{r}
correlation_plot_fam_test <- ggplot(summarize_participant_test_first_trial,aes(fam_prop_exit,prop_exit,color=condition))+
  geom_hline(yintercept=0.5,linetype="dashed")+
  geom_point(alpha=0.25)+
  geom_smooth(method="lm")+
  facet_wrap(~age_cohort)+
  theme_cowplot()+
  scale_color_brewer(palette="Set1")+
  scale_fill_brewer(palette="Set1")+
  xlab("Overall Proportion Target Looking during Familiarization")+
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
correlation_plot_fam_test
ggsave(here(plot_path,"correlation_plot_fam_test.png"),bg="white",width=9,height=6)

#correlation function
compute_correlation <- function(data){
  result <- cor.test(data$fam_prop_exit,data$prop_exit)
  #return the estimate, p-value,df, and test statistic of cor.test
  
  return(data.frame(
    correlation_estimate=result$estimate,
    correlation_df = result$parameter,
    correlation_p_value=result$p.value,
    correlation_statistic=result$statistic))
}
#correlation between familiarization and test
correlation_fam_test_overall <- summarize_participant_test_first_trial %>%
  select(age_cohort,fam_prop_exit,prop_exit) %>%
  group_by(age_cohort) %>%
  nest() %>%
  #use map to compute correlation
  summarize(correlation=map(data,compute_correlation)) %>%
  #extract the correlation values into tidy data frame
  unnest(correlation)

correlation_fam_test_overall %>%
  knitr::kable()

correlation_fam_test_by_age <- summarize_participant_test_first_trial %>%
  select(age_cohort,condition,fam_prop_exit,prop_exit) %>%
  group_by(age_cohort,condition) %>%
  nest() %>%
  #use map to compute correlation
  summarize(correlation=map(data,compute_correlation)) %>%
  #extract the correlation values into tidy data frame
  unnest(correlation)

correlation_fam_test_by_age %>%
  knitr::kable()

```


## 3. In analyses introducing model terms for certain measurement characteristics (e.g., types of eye-tracker manufacturers, screen dimensions), we will quantify potential variability between different in-lab data acquisition methods [cf., @manybabies2020quantifying]. If we have a sufficiently large sample of participants tested with online sources (e.g., contributions of at least 32 participants), we will conduct a separate analysis with a model term for online participants that estimates whether condition effects are different in this population. We will further report whether exclusion rates are different for this population.

### 3.1. Data collection type: in-lab vs. web-based

```{r}
readRDS(here(RESULTS_FOLDER,"summarize_participant_test_first_trial.rds"))
```

### Summary Statistics

```{r}
summarize_test_aoi_method <- summarize_participant_test_first_trial %>%
  group_by(age_cohort,lab_id,participant_lab_id,participant_id,condition_c, method_c) %>%
  summarize(
    n=n(),
    mean_subj_prop_exit=mean(prop_exit,na.rm=T)
  ) %>%
  group_by(age_cohort,condition_c, method_c) %>%
  summarize(
    participant_num=sum(!is.na(mean_subj_prop_exit)),
    mean_target_looking=mean(mean_subj_prop_exit,na.rm=T),
    sd_target_looking=sd(mean_subj_prop_exit,na.rm=T),
     t_test = list(broom::tidy(t.test(mean_subj_prop_exit, alternative = "two.sided", mu=0.5)))) %>%
  mutate(
    #95% CIs
    lower_ci_target_looking = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    upper_ci_target_looking = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    #mean_target_looking_general = mean(prop_general, na.rm=T),
   # sd_target_looking_general=sd(prop_general,na.rm=T),
    lower_ci_target_looking_general = mean_target_looking - qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    upper_ci_target_looking_general = mean_target_looking + qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking/sqrt(participant_num),
    p.value = purrr::map(t_test, ~select(.x, c('p.value', 'parameter','statistic')))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval=statistic,
    df=parameter
  )
  

summarize_test_aoi_method %>%
  knitr::kable()
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) and method (in-lab vs. web-based) on first-trial proportion target looking during the anticipatory window.

#### Toddlers

```{r}
#set the prior
priors <-c(
  set_prior("uniform(0, 1)", lb=0,ub=1,class = "Intercept"), #uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), #normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")) # lkj distribution for covariance matrix/Cholesky Factor?

bm_aoi_toddlers_method <- brm(prop_exit ~ 1+condition_c*method_c+(1+condition_c*method_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_first_trial,age_cohort=="toddlers"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_toddlers_method)
prior_summary(bm_aoi_toddlers_method)

saveRDS(bm_aoi_toddlers_method, file = here(RESULTS_FOLDER,"bm_aoi_toddlers_method.rds"))
```

Summarize outcomes

```{r}
#get_variables(bm_aoi_toddlers)
#get main coefficient estimate and HDI
bm_aoi_toddlers_method %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_method %>%
  spread_draws(b_method_c, sigma) %>%
  mean_hdi(.width = 0.95)

bm_aoi_toddlers_method %>%
  spread_draws(`b_condition_c:method_c`, sigma) %>%
  mean_hdi(.width = 0.95)
```

Visualize model coefficients

```{r}
bm_aoi_toddlers_method %>%
  spread_draws(b_condition_c,b_method_c,`b_condition_c:method_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient,y=b)) +
  stat_halfeye()+
  geom_hline(yintercept=0,linetype="dashed")+
  theme_cowplot()+
  scale_x_discrete(limits=c("b_condition_c:b_method_c","b_method_c","b_condition_c"),labels=c("Condition x Method","Method","Condition"))+
  ylab("Model Coefficient Estimate")+
  xlab("Model Predictor")+
  coord_flip()
ggsave(here(plot_path,"test_toddlers_model_coefficients_method.png"),bg="white",width=9,height=6)
```


Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_toddlers_method <- hypothesis(bm_aoi_toddlers_method, "condition_c = 0", class="b")
h_aoi_toddlers_method
plot(h_aoi_toddlers_method)
# evidence in favor of condition being different from zero
1/h_aoi_toddlers_method$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_toddlers_method <-  update(bm_aoi_toddlers_method, formula = ~ .-condition_c)
summary(null_aoi_toddlers_method)
brms::bayes_factor(bm_aoi_toddlers_method, null_aoi_toddlers_method)
```


#### Adults

```{r}
bm_aoi_adults_both <- brm(prop_exit ~ 1+condition_c+(1+condition_c|lab_id),
         family=gaussian,
         prior = priors,
         save_pars = save_pars(all = TRUE),
        filter(summarize_participant_test_both_trials,age_cohort=="adults"),
        warmup = 1000, 
        iter = 2000, 
        chains = 4, 
        cores = 4,
        seed = 123,
        sample_prior=TRUE)
summary(bm_aoi_adults_both)

saveRDS(bm_aoi_adults_both, file = here(RESULTS_FOLDER,"bm_aoi_adults_both.rds"))
```

```{r}
#get main coefficient estimate and HDI
bm_aoi_adults_both %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)
```

Hypothesis test/ compute Bayes Factor

```{r}
h_aoi_adults_both <- hypothesis(bm_aoi_adults_both, "condition_c = 0")
h_aoi_adults_both 
plot(h_aoi_adults_both)
# evidence in favor of condition being different from zero
1/h_aoi_adults_both$hypothesis$Evid.Ratio
```

Alternate Bayes factor approach

```{r}
null_aoi_adults_both <-  update(bm_aoi_adults_both, formula = ~ .-condition_c)
summary(null_aoi_adults_both)
brms::bayes_factor(bm_aoi_adults_both, null_aoi_adults_both)
```


### 3.2. Measurement characteristics (eye-tracker)

## 4. If we observe substantial looking (defined *post hoc* by evaluating scatter plot videos of gaze data) to the boxes as well as the tunnel exit AOIs, we will conduct an exploratory analysis using tighter AOIs around tunnel exits and boxes, asking whether box and tunnel looking vary separately by age or by condition. In particular, we expect that the difference in AL between the two conditions will be bigger for the tunnel exits than for the box (as looks to the correct box might indicate looks to the target, which is in the same box for both conditions, rather than action anticipation).

## 5. Looking patterns during mouse's change of location

### 5.1. a.	Introduce new AOIs during location change: 

i.	bear
ii.	mouse

### 5.1. b.	Infants and adults

### 5.1. c.	c.	Infants gaze shifts during location change as a function of AL