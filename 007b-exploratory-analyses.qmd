---
title: "Exploratory analyses"
format: html
---

```{r}
library(tidyverse)
library(here)
library(assertthat)
library(ggbeeswarm)
library(gghalves)
library(cowplot)
library(patchwork)
library(brms)
library(tidybayes)
library(knitr)
library(corrr)
library(ggpubr)
library(StanHeaders)
library(QuickJSR)
library(rstan)
# remotes::install_github("stan-dev/cmdstanr")
library(cmdstanr)

source(here("helper", "ensure_repo_structure.R"))
source(here("helper", "analysis_helper.R"))
plot_path <- here("plots")
paper_path <- here("paper")
model_fits_dir <- here(RESULTS_FOLDER, "bayes_model_fits")

load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_002B))
load(here(INTERMEDIATE_FOLDER, INTERMEDIATE_006))
```

# Load data

```{r}
# Load all .rds files
# List all RDS files in the results folder
rds_files <- list.files(RESULTS_FOLDER, pattern = "\\.rds$", full.names = TRUE)

# Load each RDS file as a separate variable in the global environment
for (file in rds_files) {
  rds_name <- tools::file_path_sans_ext(basename(file))
  assign(rds_name, readRDS(file))
}
```


```{r}
# set some general parameters for fitting Bayesian models
n_cores <- parallel::detectCores() - 1
options(mc.cores = n_cores)
rstan_options(auto_write = TRUE)

# Optimize Stan compilation
Sys.setenv(LOCAL_CPPFLAGS = "-O3")

# cmdstanr::install_cmdstan()
use_cmdstan <- TRUE

# set backend to use
# need to set control parameters simultaneously, because rstan does not allow for a step_size parameter
if (use_cmdstan) {
  cur_backend <- "cmdstanr"
  default_control_list <- list(adapt_delta = 0.99, step_size = .1, max_treedepth = 12)
} else {
  cur_backend <- "rstan"
  default_control_list <- list(adapt_delta = 0.99, max_treedepth = 12)
}
```

```{r}
# make partial version of brm with default args
brm_default <- partial(
  brm,
  save_pars = save_pars(all = TRUE),
  warmup = 1000,
  iter = 10000,
  chains = 4,
  backend = cur_backend,
  cores = n_cores,
  seed = 123,
  sample_prior = TRUE,
  control = default_control_list
)

priors_default <- c(
  set_prior("uniform(0, 1)", lb = 0, ub = 1, class = "Intercept"), # uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd"), # normal distribution for sd/ random effects
  set_prior("lkj(2)", class = "L")
) # lkj distribution for covariance matrix/Cholesky Factor?
```


Splitting the data into familiarization data and test data.

```{r}
d_anticipatory_fam <- data_preprocessed_post_exclusions %>%
  filter(condition %in% c("familiarization")) %>%
  filter(t_norm <= 120 & t_norm >= -3880) %>% # only pass data in anticipatory window
  group_by(age_cohort, age_mo, age_years_n, 
           participant_lab_id, lab_id, participant_id, 
           participant_trial_id, trial_num, condition) %>%
  reframe(
    lengths = rle(aoi)$lengths,
    values = rle(aoi)$values
  ) %>%
  group_by(age_cohort, age_mo, age_years_n, 
           participant_lab_id, lab_id, participant_id, 
           participant_trial_id, trial_num, condition) %>%
  nest() %>%
  mutate(data = lapply(data, get_first_look)) %>%
  unnest(cols = c(data)) %>%
  mutate(familiarization_trial_num_4 = trial_num - 4)


test_data <- data_preprocessed_post_exclusions %>%
  filter(condition %in% c("knowledge", "ignorance"))

summarize_participant_test_first_look_first_trial <- test_data %>%
  filter(t_norm <= 120 & t_norm >= -3880) %>% # only pass data in anticipatory window
  group_by(age_cohort, age_mo, age_years_n, 
           participant_lab_id, lab_id, participant_id, 
           participant_trial_id, trial_num, condition) %>%
  reframe(
    lengths = rle(aoi)$lengths,
    values = rle(aoi)$values
  ) %>%
  group_by(age_cohort, age_mo, age_years_n, 
           participant_lab_id, lab_id, participant_id, 
           participant_trial_id, trial_num, condition) %>%
  nest() %>%
  mutate(data = lapply(data, get_first_look)) %>%
  unnest(cols = c(data)) %>%
  filter(trial_num == 5) %>%
  group_by(age_cohort, participant_lab_id, lab_id, participant_id, condition) %>%
  summarize(
    N = n(),
    prop_correct_first_look = mean(first_look == "target_exit"),
    average_rt = mean(first_look_rt),
    average_rt_correct = mean(first_look_rt[first_look == "target_exit"])
  )
```

```{r}
summarize_participant <- data_preprocessed_post_exclusions %>%
  group_by(lab_id, age_cohort, condition, 
           participant_lab_id, participant_id, participant_trial_id, 
           trial_num, point_of_disambiguation, video_duration_ms) %>%
  filter(t_norm <= 120 & t_norm >= -3880) %>%
  mutate(
    aoi_diff = c(0, diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min = min(t_norm),
    t_max = max(t_norm),
    sum_target_exit = sum(aoi == "target_exit", na.rm = T),
    sum_distractor_exit = sum(aoi == "distractor_exit", na.rm = T),
    N_exit = sum_target_exit + sum_distractor_exit,
    absolute_looking = N_exit * 25
  )

rm(data_preprocessed_post_exclusions)
gc()
```


# Exploratory analyses

## 1. Spill-over:

Spill-over: we will analyze within-participants data from the second test trial that participants saw, using exploratory models to assess whether (1) findings are consistent when both trials are included (overall condition effect), (2) whether effects are magnified or diminished on the second trial (order main effect), and (3) whether there is evidence of “spillover” - dependency in anticipation on the second trial depending on what the first trial is (condition x order interaction effect).

## 1.a. Spill-over Analysis

### Summarize all test data

```{r}
# now summarize test data for each trial
summarize_participant_test_both_trials <- test_data %>%
  group_by(lab_id, age_cohort, age_mo, age_years_n, 
           participant_lab_id, participant_id, participant_trial_id, 
           trial_num, trial_file_name,
           bear_not_visible_ms, point_of_disambiguation, video_duration_ms, 
           condition, data_type
  ) %>%
  # filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  filter(t_norm <= 120 & t_norm >= -3880) %>%
  mutate(
    aoi_diff = c(0, diff(as.numeric(as.factor(aoi))))
  ) %>%
  summarize(
    t_min = min(t_norm),
    t_max = max(t_norm),
    sum_target_general = sum(aoi == "target_general", na.rm = T),
    sum_distractor_general = sum(aoi == "distractor_general", na.rm = T),
    prop_general = sum_target_general / (sum_target_general + sum_distractor_general),
    sum_target_exit = sum(aoi == "target_exit", na.rm = T),
    sum_distractor_exit = sum(aoi == "distractor_exit", na.rm = T),
    prop_exit = sum_target_exit / (sum_target_exit + sum_distractor_exit),
    N_general = sum_target_general + sum_distractor_general,
    N_exit = sum_target_exit + sum_distractor_exit
  ) %>%
  ungroup() %>%
  # center age, condition, and method
  mutate(
    age_mo_c = age_mo - mean(age_mo, na.rm = TRUE),
    condition_c = case_when(
      condition == "knowledge" ~ -0.5,
      condition == "ignorance" ~ 0.5
    ),
    method_c = case_when(
      data_type == "web-based" ~ -0.5,
      data_type == "in-lab" ~ 0.5
    )
  ) %>%
  mutate(
    test_trial_num = trial_num - 4
  )

saveRDS(summarize_participant_test_both_trials,
        file = here(RESULTS_FOLDER, "summarize_participant_test_both_trials.rds"))
```

### Overall Plots

Proportional looking measure on the target exit during the anticipatory window for both test trials.

```{r}
# plot average proportion looking
overall_p_test_both <- ggplot(summarize_participant_test_both_trials, 
                              aes(x = condition, y = prop_exit, color = condition)) +
  # geom_violin()+
  # geom_boxplot()+
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_both_trials, condition == "ignorance"), 
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_both_trials, condition == "knowledge"), 
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(age_cohort ~ test_trial_num, 
             labeller = labeller(
               test_trial_num = c("1" = "first trial", "2" = "second trial"),
               age_cohort = label_value  # Keeps original labels for age_cohort
             )) +
  theme(legend.position = "none") +
  # ggtitle("Test")+
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
  ylab("Proportion DLS")
overall_p_test_both
ggsave(here(plot_path, "overall_proportion_both_trials_target_exit_looking.png"), 
       bg = "white", width = 6, height = 6)
ggsave(here(paper_path, "Figure_PTL_bothtrials.png"), 
       bg = "white", width = 7, height = 7)
```

Alternative Plot

```{r}
# plot average proportion looking
overall_p_test_both_alternative <- ggplot(summarize_participant_test_both_trials, 
                              aes(x = condition, y = prop_exit, color = condition)) +
  geom_jitter(width=0.05,height=0.025,alpha=0.3,stroke=NA)+
  geom_half_violin(
    aes(fill = condition), side = "l", nudge = 0.2, width = 0.4, alpha = 0.2
  ) +
  stat_summary(fun.data = "mean_cl_boot", size = 0.6, position=position_nudge(x = .2, y = 0)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(age_cohort ~ test_trial_num, 
             labeller = labeller(
               test_trial_num = c("1" = "first trial", "2" = "second trial"),
               age_cohort = label_value  # Keeps original labels for age_cohort
             )) +
  theme(legend.position = "none") +
  # ggtitle("Test")+
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
  ylab("Proportion DLS")
overall_p_test_both_alternative
ggsave(here(plot_path, "overall_proportion_both_trials_target_exit_looking_alternative.png"), 
       bg = "white", width = 6, height = 6)
ggsave(here(paper_path, "Figure_PTL_bothtrials.png"), 
       bg = "white", width = 7, height = 7)
```


Plot the effect by age

```{r}
kid_prop_by_age_both <- ggplot(filter(summarize_participant_test_both_trials, 
                                      N_exit >= 5 & age_cohort == "toddlers"), 
                               aes(x = age_mo, y = prop_exit, color = condition)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "lm") +
  xlab("Age (in months)") +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, Both Trials)") +
  theme_cowplot() +
  facet_wrap(~test_trial_num) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1")
kid_prop_by_age_both
ggsave(here(plot_path, "kids_proportion_both_trials_target_exit_looking_by_age.png"), 
       bg = "white", width = 9, height = 6)
```

### Summary Statistics

```{r}
summarize_test_aoi_both <- summarize_participant_test_both_trials %>%
  group_by(age_cohort, condition, trial_num, test_trial_num) %>%
  summarize(
    participant_num = sum(!is.na(prop_exit)),
    mean_target_looking = mean(prop_exit, na.rm = T),
    sd_target_looking = sd(prop_exit, na.rm = T),
    t_test = list(broom::tidy(t.test(prop_exit, alternative = "two.sided", mu = 0.5)))
  ) %>%
  mutate(
    # 95% CIs
    lower_ci_target_looking = mean_target_looking - 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking = mean_target_looking + 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    # mean_target_looking_general = mean(prop_general, na.rm=T),
    # sd_target_looking_general=sd(prop_general,na.rm=T),
    lower_ci_target_looking_general = mean_target_looking - 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking_general = mean_target_looking + 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    p.value = purrr::map(t_test, ~ select(.x, c("p.value", "parameter", "statistic")))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval = statistic,
    df = parameter
  )


summarize_test_aoi_both %>%
  knitr::kable()

saveRDS(summarize_test_aoi_both,
        file = here(RESULTS_FOLDER, "summarize_test_aoi_both.rds"))
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on proportion target looking during the anticipatory window.

#### Toddlers

```{r}
bm_aoi_toddlers_both <- brm_default(
  prop_exit ~ 1 + condition_c + age_mo_c + condition_c * age_mo_c + 
    (1 + condition_c | participant_lab_id) + 
    (1 + condition_c + age_mo_c + condition_c * age_mo_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials, age_cohort == "toddlers") %>%
    select(prop_exit, condition_c, age_mo_c, participant_lab_id, lab_id)
)
summary(bm_aoi_toddlers_both)
prior_summary(bm_aoi_toddlers_both)

# Create directory if it doesn't exist
if (!dir.exists(model_fits_dir)) {
  dir.create(model_fits_dir, recursive = TRUE)
}

summary(bm_aoi_toddlers_both)

saveRDS(bm_aoi_toddlers_both, 
        file = here(model_fits_dir, "bm_aoi_toddlers_both.rds"))
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers_both)
# get main coefficient estimate and HDI
bm_aoi_toddlers_both_condition_effect <- bm_aoi_toddlers_both %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_condition_effect.rds"))

bm_aoi_toddlers_both_age_effect <- bm_aoi_toddlers_both %>%
  spread_draws(b_age_mo_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_age_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_age_effect.rds"))

bm_aoi_toddlers_both_condition_age_interaction <- bm_aoi_toddlers_both %>%
  spread_draws(`b_condition_c:age_mo_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_condition_age_interaction,
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_condition_age_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_both_null <- update(bm_aoi_toddlers_both, 
                                    formula = ~ . - condition_c,
                                    cores = n_cores)
summary(bm_aoi_toddlers_both_null)

saveRDS(bm_aoi_toddlers_both_null, 
        file = here(model_fits_dir, "bm_fam_aoi_toddlers_null.rds"))

test_comparison_aoi_toddlers_both <- brms::bayes_factor(bm_aoi_toddlers_both, 
                                                        bm_aoi_toddlers_both_null)

saveRDS(test_comparison_aoi_toddlers_both, 
        file = here(RESULTS_FOLDER, "test_comparison_aoi_toddlers_both.rds"))
```

Alternative bayes factor computation (due to challenges with bridge sampling)

```{r}
h_bm_aoi_toddlers_both <- hypothesis(bm_aoi_toddlers_both, "condition_c = 0", class = "b")
h_bm_aoi_toddlers_both
plot(h_bm_aoi_toddlers_both)
# evidence in favor of condition being different from zero
1 / h_bm_aoi_toddlers_both$hypothesis$Evid.Ratio
```


Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_both)
rm(bm_aoi_toddlers_both_null)
gc()
```

#### Adults

```{r}
bm_aoi_adults_both <- brm_default(
  prop_exit ~ 1 + condition_c + 
    (1 + condition_c | lab_id) + 
    (1 + condition_c | participant_lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials, age_cohort == "adults")
)
summary(bm_aoi_adults_both)

saveRDS(bm_aoi_adults_both, 
        file = here(model_fits_dir, "bm_aoi_adults_both.rds"))
```

```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_both_condition_effect <- bm_aoi_adults_both %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_both_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_both_condition_effect.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_both_null <- update(bm_aoi_adults_both, 
                                  formula = ~ . - condition_c,
                                  cores = n_cores)
summary(bm_aoi_adults_both_null)

saveRDS(bm_aoi_adults_both_null, 
        file = here(model_fits_dir, "bm_fam_aoi_adults_null.rds"))

test_comparison_aoi_adults_both <- brms::bayes_factor(bm_aoi_adults_both, 
                                                      bm_aoi_adults_both_null)

saveRDS(test_comparison_aoi_adults_both, 
        file = here(RESULTS_FOLDER, "test_comparison_aoi_adults_both.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_both)
rm(bm_aoi_adults_both_null)
gc()
```

## 1.b. whether effects are magnified or diminished on the second trial (order main effect)

```{r}
# create test_trial number variable
summarize_participant_test_both_trials <- summarize_participant_test_both_trials %>%
  ungroup() %>%
  arrange(participant_lab_id, trial_num, test_trial_num) %>%
  group_by(participant_lab_id) %>%
  mutate(conditions = paste0(condition, collapse = "_")) %>%
  ungroup() %>%
  mutate(test_trial = case_when(
    trial_num == 5 ~ 1,
    trial_num == 6 ~ 2,
    TRUE ~ NA
  ))
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) and trial number on proportion target looking during the anticipatory window.

#### Toddlers

```{r}
bm_aoi_toddlers_both_order <- brm_default(
  prop_exit ~ 1 + condition_c + test_trial_num + condition_c * test_trial_num + 
    (1 + condition_c + test_trial_num + condition_c * test_trial_num | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_both_order)
prior_summary(bm_aoi_toddlers_both_order)

saveRDS(bm_aoi_toddlers_both_order, 
        file = here(model_fits_dir, "bm_aoi_toddlers_both_order.rds"))
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI
bm_aoi_toddlers_both_order_condition_effect <- bm_aoi_toddlers_both_order %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_order_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_order_condition_effect.rds"))

bm_aoi_toddlers_both_order_trial_num_effect <- bm_aoi_toddlers_both_order %>%
  spread_draws(b_test_trial_num, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_order_trial_num_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_order_trial_num_effect.rds"))

bm_aoi_toddlers_both_order_condition_trial_num_interaction <- bm_aoi_toddlers_both_order %>%
  spread_draws(`b_condition_c:test_trial_num`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_both_order_condition_trial_num_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_both_order_condition_trial_num_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_both_order_null <- update(bm_aoi_toddlers_both_order, 
                                          formula = ~ . - test_trial_num,
                                          cores = n_cores)
summary(bm_aoi_toddlers_both_order_null)

saveRDS(bm_aoi_toddlers_both_order_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_both_order_null.rds"))

test_comparison_aoi_toddlers_both_order <- brms::bayes_factor(bm_aoi_toddlers_both_order, 
                                                              bm_aoi_toddlers_both_order_null)

saveRDS(test_comparison_aoi_toddlers_both_order, 
        file = here(RESULTS_FOLDER, "test_comparison_aoi_toddlers_both_order.rds"))
```

Compute Bayes Factor (bridge sampling approach) - Condition*Test Trial Number Interaction Effect

```{r}
bm_aoi_toddlers_both_order_interaction_null <- update(bm_aoi_toddlers_both_order, 
                                                      formula = ~ . - condition_c:test_trial_num,
                                                      cores = n_cores)
summary(bm_aoi_toddlers_both_order_interaction_null)

saveRDS(bm_aoi_toddlers_both_order_interaction_null, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_aoi_toddlers_both_order_interaction_null.rds"))

test_m_comparison_PTL_toddlers_both_order_interaction <- brms::bayes_factor(bm_aoi_toddlers_both_order, 
                                                                            bm_aoi_toddlers_both_order_interaction_null)

saveRDS(test_m_comparison_PTL_toddlers_both_order_interaction, 
        file = here(RESULTS_FOLDER, "test_m_comparison_PTL_toddlers_both_order_interaction.rds"))
```
Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_both_order)
rm(bm_aoi_toddlers_both_order_null)
rm(bm_aoi_toddlers_both_order_interaction_null)
gc()
```

#### Adults

```{r}
bm_aoi_adults_both_order <- brm_default(
  prop_exit ~ 1 + condition_c + test_trial_num + condition_c * test_trial_num + 
    (1 + condition_c + test_trial_num + condition_c * test_trial_num | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials, age_cohort == "adults")
)
summary(bm_aoi_adults_both_order)

saveRDS(bm_aoi_adults_both_order, 
        file = here(model_fits_dir, "bm_aoi_adults_both_order.rds"))
```


```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_both_order_condition_effect <- bm_aoi_adults_both_order %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_both_order_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_both_order_condition_effect.rds"))

bm_aoi_adults_both_order_trial_num_effect <- bm_aoi_adults_both_order %>%
  spread_draws(b_test_trial_num, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_both_order_trial_num_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_both_order_trial_num_effect.rds"))

bm_aoi_adults_both_order_condition_trial_num_interaction <- bm_aoi_adults_both_order %>%
  spread_draws(`b_condition_c:test_trial_num`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_both_order_condition_trial_num_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_both_order_condition_trial_num_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_both_order_null <- update(bm_aoi_adults_both_order, 
                                        formula = ~ . - test_trial_num,
                                        cores = n_cores)
summary(bm_aoi_adults_both_order_null)

saveRDS(bm_aoi_adults_both_order_null, 
        file = here(model_fits_dir, "bm_aoi_adults_both_order_null.rds"))

test_comparison_aoi_adults_both_order <- brms::bayes_factor(bm_aoi_adults_both_order, 
                                                            bm_aoi_adults_both_order_null)

saveRDS(test_comparison_aoi_adults_both_order, 
        file = here(RESULTS_FOLDER, "test_comparison_aoi_adults_both_order.rds"))
```
Compute Bayes Factor (bridge sampling approach) - Condition*Test Trial Number Interaction Effect

```{r}
bm_aoi_adults_both_order_interaction_null <- update(bm_aoi_adults_both_order, 
                                                    formula = ~ . - condition_c:test_trial_num,
                                                    cores = n_cores)
summary(bm_aoi_adults_both_order_interaction_null)

saveRDS(bm_aoi_adults_both_order_interaction_null, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_aoi_adults_both_order_interaction_null.rds"))

test_m_comparison_PTL_adults_both_order_interaction <- brms::bayes_factor(bm_aoi_adults_both_order, 
                                                                          bm_aoi_adults_both_order_interaction_null)

saveRDS(test_m_comparison_PTL_adults_both_order_interaction, 
        file = here(RESULTS_FOLDER, "test_m_comparison_PTL_adults_both_order_interaction.rds"))
```
Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_both_order)
rm(bm_aoi_adults_both_order_null)
gc()
```

### 1.c. whether there is evidence of “spillover” - dependency in anticipation on the second trial depending on what the first trial is (condition x order interaction effect)

```{r}
# create variable for first and second trial prop exit
summarize_participant_test_second_trial <- summarize_participant_test_both_trials %>%
  filter(test_trial_num == 2) %>%
  rename(second_trial_prop_exit = prop_exit)

summarize_participant_test_first_test_trial <- summarize_participant_test_both_trials %>%
  filter(test_trial_num == 1) %>%
  select(age_cohort, lab_id, participant_id, participant_lab_id, prop_exit) %>%
  rename(first_trial_prop_exit = prop_exit) %>%
  mutate(
    first_trial_prop_exit_c = first_trial_prop_exit - mean(first_trial_prop_exit,na.rm=T)
  )

summarize_participant_test_second_trial <- summarize_participant_test_second_trial %>% 
  left_join(summarize_participant_test_first_test_trial) 
```

#### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) and first-test trial anticipatory looking on second-trial proportion target looking during the anticipatory window for only those participants who anticipated correctly during the last familiarization trial (trial 4, first look to target).

##### Toddlers

```{r}
bm_aoi_toddlers_second_trial <- brm_default(
  second_trial_prop_exit ~ 1 + condition_c * first_trial_prop_exit_c +
    (1 + condition_c * first_trial_prop_exit_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_second_trial, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_second_trial)

saveRDS(bm_aoi_toddlers_second_trial, 
        file = here(model_fits_dir, "bm_aoi_toddlers_second_trial.rds"))
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI for condition effect
bm_aoi_toddlers_second_trial_condition_effect <- bm_aoi_toddlers_second_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_second_trial_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_second_trial_condition_effect.rds"))

# get main coefficient estimate and HDI for correct first look final fam trial effect
bm_aoi_toddlers_second_trial_first_trial_prop_exit_effect <- bm_aoi_toddlers_second_trial %>%
  spread_draws(b_first_trial_prop_exit_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_second_trial_first_trial_prop_exit_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_second_trial_first_trial_prop_exit_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_toddlers_second_trial_condition_first_trial_prop_exit_effect_interaction <- bm_aoi_toddlers_second_trial %>%
  spread_draws(`b_condition_c:first_trial_prop_exit_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_second_trial_condition_first_trial_prop_exit_effect_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_second_trial_condition_first_trial_prop_exit_effect_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_second_trial_null <- update(bm_aoi_toddlers_second_trial, 
                                            formula = ~ . - condition_c * first_trial_prop_exit_c,
                                            cores = n_cores)
summary(bm_aoi_toddlers_second_trial_null)

saveRDS(bm_aoi_toddlers_second_trial_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_second_trial_null.rds"))

test_m_comparison_aoi_toddlers_second_trial <- brms::bayes_factor(bm_aoi_toddlers_second_trial, 
                                                                  bm_aoi_toddlers_second_trial_null)

saveRDS(test_m_comparison_aoi_toddlers_second_trial, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_second_trial.rds"))
```

Bayes factor for condition effect

```{r}
bm_aoi_toddlers_second_trial_condition_null <- update(bm_aoi_toddlers_second_trial, 
                                            formula = ~ . - condition_c,
                                            cores = n_cores)
summary(bm_aoi_toddlers_second_trial_condition_null)

saveRDS(bm_aoi_toddlers_second_trial_condition_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_second_trial_condition_null.rds"))

test_m_comparison_aoi_toddlers_second_trial_condition <- brms::bayes_factor(bm_aoi_toddlers_second_trial, 
                                                                  bm_aoi_toddlers_second_trial_condition_null)

saveRDS(test_m_comparison_aoi_toddlers_second_trial_condition, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_second_trial_condition.rds"))
```


##### Adults

```{r}
bm_aoi_adults_second_trial <- brm_default(
  second_trial_prop_exit ~ 1 + condition_c * first_trial_prop_exit_c +
    (1 + condition_c * first_trial_prop_exit_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_second_trial, age_cohort == "adults")
)
summary(bm_aoi_adults_second_trial)

saveRDS(bm_aoi_adults_second_trial, 
        file = here(model_fits_dir, "bm_aoi_adults_second_trial.rds"))
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_adults)
# get main coefficient estimate and HDI for condition effect
bm_aoi_adults_second_trial_condition_effect <- bm_aoi_adults_second_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_second_trial_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_second_trial_condition_effect.rds"))

# get main coefficient estimate and HDI for correct first look final fam trial effect
bm_aoi_adults_second_trial_first_trial_prop_exit_effect <- bm_aoi_adults_second_trial %>%
  spread_draws(b_first_trial_prop_exit_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_second_trial_first_trial_prop_exit_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_second_trial_first_trial_prop_exit_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_adults_second_trial_condition_first_trial_prop_exit_effect_interaction <- bm_aoi_adults_second_trial %>%
  spread_draws(`b_condition_c:first_trial_prop_exit_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_second_trial_condition_first_trial_prop_exit_effect_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_second_trial_condition_first_trial_prop_exit_effect_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_second_trial_null <- update(bm_aoi_adults_second_trial, 
                                          formula = ~ . - condition_c * first_trial_prop_exit_c,
                                          cores = n_cores)
summary(bm_aoi_adults_second_trial_null)

saveRDS(bm_aoi_adults_second_trial_null, 
        file = here(model_fits_dir, "bm_aoi_adults_second_trial_null.rds"))

test_m_comparison_aoi_adults_second_trial <- brms::bayes_factor(bm_aoi_adults_second_trial, 
                                                                bm_aoi_adults_second_trial_null)

saveRDS(test_m_comparison_aoi_adults_second_trial, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_second_trial.rds"))
```

Bayes factor for condition effect

```{r}
bm_aoi_adults_second_trial_condition_null <- update(bm_aoi_adults_second_trial, 
                                          formula = ~ . - condition_c,
                                          cores = n_cores)
summary(bm_aoi_adults_second_trial_condition_null)

saveRDS(bm_aoi_adults_second_trial_condition_null, 
        file = here(model_fits_dir, "bm_aoi_adults_second_trial_condition_null.rds"))

test_m_comparison_aoi_adults_second_trial_condition <- brms::bayes_factor(bm_aoi_adults_second_trial, 
                                                                bm_aoi_adults_second_trial_condition_null)

saveRDS(test_m_comparison_aoi_adults_second_trial_condition, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_second_trial_condition.rds"))
```

## 2. Connections between familiarization and test

We will explore whether condition differences vary for participants who show higher rates of anticipation during the four familiarization trials. For example, we might group participants according to whether they did or did not show correct AL at the end of the familiarization phase, defined as overall longer looking at the correct AOI than the incorrect AOI on average in trials 3 and 4 of the familiarization phase.

### 2.a. Only anticipators on final familiarization trial

```{r}
# first, find the participants who anticipate correctly on the last trial

summarize_first_looks_fam_trials <- d_anticipatory_fam %>%
  group_by(age_cohort, participant_lab_id, lab_id, participant_id, condition, trial_num) %>%
  summarize(
    prop_correct_first_look = mean(first_look == "target_exit"),
    average_rt = mean(first_look_rt),
    average_rt_correct = mean(first_look_rt[first_look == "target_exit"])
  )

correct_first_looks_final_fam_trial <- summarize_first_looks_fam_trials %>%
  filter(!is.na(prop_correct_first_look) & trial_num == 4) %>%
  ungroup() %>%
  select(age_cohort, lab_id, participant_id, participant_lab_id, prop_correct_first_look) %>%
  rename(correct_first_look_final_fam_trial = prop_correct_first_look)

# join in to test trial
summarize_participant_test_first_trial <- summarize_participant_test_first_trial %>%
  left_join(correct_first_looks_final_fam_trial)
summarize_participant_test_first_trial <- summarize_participant_test_first_trial %>%
  mutate(correct_first_look_final_fam_trial_c = case_when(
    correct_first_look_final_fam_trial == 1 ~ 0.5,
    correct_first_look_final_fam_trial == 0 ~ -0.5,
    TRUE ~ NA
  ))

# join in to test trial
summarize_participant_test_first_look_first_trial <- summarize_participant_test_first_look_first_trial %>%
  left_join(correct_first_looks_final_fam_trial)

# overall plot
# plot average proportion looking
overall_p_correct_final_fam_trial <- ggplot(filter(summarize_participant_test_first_trial, correct_first_look_final_fam_trial == 1),
                                            aes(x = condition, y = prop_exit, color = condition)) +
  # geom_violin()+
  # geom_boxplot()+
  geom_beeswarm(alpha = 0.2, cex = 0.5) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial, correct_first_look_final_fam_trial == 1 & condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial, correct_first_look_final_fam_trial == 1 & condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(~age_cohort) +
  theme(legend.position = "none") +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p_correct_final_fam_trial
ggsave(here(plot_path, "overall_proportion_first_trial_target_exit_looking_correct_final_fam_first_look.png"),
       bg = "white", width = 9, height = 6)
```

#### Summary Statistics

```{r}
summarize_test_aoi_correct_final_fam_trial <- summarize_participant_test_first_trial %>%
  filter(correct_first_look_final_fam_trial == 1) %>%
  group_by(age_cohort, condition) %>%
  summarize(
    participant_num = sum(!is.na(prop_exit)),
    mean_target_looking = mean(prop_exit, na.rm = T),
    sd_target_looking = sd(prop_exit, na.rm = T),
    mean_target_looking_general = mean(prop_general, na.rm = T),
    sd_target_looking_general = sd(prop_general, na.rm = T),
  )

summarize_test_aoi_correct_final_fam_trial %>%
  knitr::kable()
```

#### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window for only those participants who anticipated correctly during the last familiarization trial (trial 4, first look to target).

##### Toddlers

```{r}
bm_aoi_toddlers_correct_final_fam_trial <- brm_default(
  prop_exit ~ 1 + condition_c + correct_first_look_final_fam_trial_c + condition_c * correct_first_look_final_fam_trial_c +
    (1 + condition_c + correct_first_look_final_fam_trial_c + condition_c * correct_first_look_final_fam_trial_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_correct_final_fam_trial)

saveRDS(bm_aoi_toddlers_correct_final_fam_trial, 
        file = here(model_fits_dir, "bm_aoi_toddlers_correct_final_fam_trial.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_toddlers_correct_final_fam_trial_tidy_summary <- as_tibble(summary(bm_aoi_toddlers_correct_final_fam_trial)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_toddlers_correct_final_fam_trial_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_toddlers_correct_final_fam_trial_tidy_summary_model_summary.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI for condition effect
bm_aoi_toddlers_correct_final_fam_trial_condition_effect <- bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_correct_final_fam_trial_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_correct_final_fam_trial_condition_effect.rds"))

# get main coefficient estimate and HDI for correct first look final fam trial effect
bm_aoi_toddlers_correct_final_fam_trial_correct_first_look_final_fam_trial_effect <- bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(b_correct_first_look_final_fam_trial_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_correct_final_fam_trial_correct_first_look_final_fam_trial_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_correct_final_fam_trial_correct_first_look_final_fam_trial_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_toddlers_correct_final_fam_trial_condition_correct_first_look_final_fam_trial_interaction <- bm_aoi_toddlers_correct_final_fam_trial %>%
  spread_draws(`b_condition_c:correct_first_look_final_fam_trial_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_correct_final_fam_trial_condition_correct_first_look_final_fam_trial_interaction_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_correct_final_fam_trial_condition_correct_first_look_final_fam_trial_interaction_effect.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_correct_final_fam_trial_null <- update(bm_aoi_toddlers_correct_final_fam_trial, 
                                                       formula = ~ . - condition_c * correct_first_look_final_fam_trial_c,
                                                       cores = n_cores)
summary(bm_aoi_toddlers_correct_final_fam_trial_null)

saveRDS(bm_aoi_toddlers_correct_final_fam_trial_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_correct_final_fam_trial_null.rds"))

test_m_comparison_aoi_toddlers_correct_final_fam_trial <- brms::bayes_factor(bm_aoi_toddlers_correct_final_fam_trial, bm_aoi_toddlers_correct_final_fam_trial_null)

saveRDS(test_m_comparison_aoi_toddlers_correct_final_fam_trial, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_correct_final_fam_trial.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_correct_final_fam_trial)
rm(bm_aoi_toddlers_correct_final_fam_trial_null)
gc()
```

##### Adults

```{r}
bm_aoi_adults_correct_final_fam_trial <- brm_default(
  prop_exit ~ 1 + condition_c + + correct_first_look_final_fam_trial_c + condition_c * correct_first_look_final_fam_trial_c +
    (1 + condition_c + correct_first_look_final_fam_trial_c + condition_c * correct_first_look_final_fam_trial_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "adults")
)
summary(bm_aoi_adults_correct_final_fam_trial)

saveRDS(bm_aoi_adults_correct_final_fam_trial, 
        file = here(model_fits_dir, "bm_aoi_adults_correct_final_fam_trial.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_adults_correct_final_fam_trial_tidy_summary <- as_tibble(summary(bm_aoi_adults_correct_final_fam_trial)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_adults_correct_final_fam_trial_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_adults_correct_final_fam_trial_tidy_summary_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_correct_final_fam_trial_condition_effect <- bm_aoi_adults_correct_final_fam_trial %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_correct_final_fam_trial_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_correct_final_fam_trial_condition_effect.rds"))

# get main coefficient estimate and HDI for correct first look final fam trial effect
bm_aoi_adults_correct_final_fam_trial_correct_first_look_final_fam_trial_effect <- bm_aoi_adults_correct_final_fam_trial %>%
  spread_draws(b_correct_first_look_final_fam_trial_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_correct_final_fam_trial_correct_first_look_final_fam_trial_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_correct_final_fam_trial_correct_first_look_final_fam_trial_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_adults_correct_final_fam_trial_condition_correct_first_look_final_fam_trial_interaction <- bm_aoi_adults_correct_final_fam_trial %>%
  spread_draws(`b_condition_c:correct_first_look_final_fam_trial_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_correct_final_fam_trial_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_correct_final_fam_trial_condition_correct_first_look_final_fam_trial_interaction_effect.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_correct_final_fam_trial_null <- update(bm_aoi_adults_correct_final_fam_trial, 
                                                     formula = ~ . - condition_c * correct_first_look_final_fam_trial_c,
                                                     cores = n_cores)
summary(bm_aoi_adults_correct_final_fam_trial_null)

saveRDS(bm_aoi_adults_correct_final_fam_trial_null, 
        file = here(model_fits_dir, "bm_aoi_adults_correct_final_fam_trial_null.rds"))

test_m_comparison_aoi_adults_correct_final_fam_trial <- brms::bayes_factor(bm_aoi_adults_correct_final_fam_trial, bm_aoi_adults_correct_final_fam_trial_null)

saveRDS(test_m_comparison_aoi_adults_correct_final_fam_trial, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_correct_final_fam_trial.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_correct_final_fam_trial)
rm(bm_aoi_adults_correct_final_fam_trial_null)
gc()
```

### 2.b. Only >50% looking to target during familiarization trials

#### 2.b.a. Above >50% looking in each of the last two familiarization trials before test (trials 3 and 4)

##### Plot

```{r}
successful_fam <- summarize_participant_familiarization %>%
  filter(trial_num %in% c(3, 4)) %>%
  select(lab_id, age_cohort, condition, participant_id, trial_num, prop_exit) %>%
  mutate(above_0.5 = prop_exit > 0.5) %>%
  group_by(lab_id, age_cohort, participant_id) %>%
  summarise(
    successful_fam_anticipation_c = if (all(above_0.5 %in% TRUE)) 0.5 else -0.5,
    .groups = "drop"
  )

# join overall familiarization looking in to test trial
summarize_participant_test_first_trial_fam3and4 <- summarize_participant_test_first_trial %>%
  left_join(successful_fam)

# overall plot
# plot average proportion looking
overall_p_sufficient_fam_prop_looking_fam3and4 <- ggplot(filter(summarize_participant_test_first_trial_fam3and4, successful_fam_anticipation_c == 0.5), 
                                                aes(x = condition, y = prop_exit, color = condition)) +
  # geom_violin()+
  # geom_boxplot()+
  geom_jitter(width=0.05,height=0.025,alpha=0.3,stroke=NA)+
  geom_half_violin(
    aes(fill = condition), side = "l", nudge = 0.2, width = 0.4, alpha = 0.2
  ) +
  stat_summary(fun.data = "mean_cl_boot", size = 0.6, position=position_nudge(x = .2, y = 0)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(~age_cohort) +
  theme(legend.position = "none") +
  ylab("Proportion DLS\n(Anticipatory Window, First Trial)")
overall_p_sufficient_fam_prop_looking_fam3and4
ggsave(here(plot_path, "overall_proportion_first_trial_target_exit_looking_sufficient_fam_prop_looking_fam3and4.png"), 
       bg = "white", width = 9, height = 6)
```

##### Summary Statistics

```{r}
summarize_test_aoi_sufficient_fam_prop_looking_fam3and4 <- summarize_participant_test_first_trial_fam3and4 %>%
  filter(successful_fam_anticipation_c == 0.5) %>%
  group_by(age_cohort, condition) %>%
  summarize(
    participant_num = sum(!is.na(prop_exit)),
    mean_target_looking = mean(prop_exit, na.rm = T),
    sd_target_looking = sd(prop_exit, na.rm = T),
    mean_target_looking_general = mean(prop_general, na.rm = T),
    sd_target_looking_general = sd(prop_general, na.rm = T),
  )

summarize_test_aoi_sufficient_fam_prop_looking_fam3and4 %>%
  knitr::kable()
```

##### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window for only those participants who fixated the target more than half of the time during all familiarization trial.

###### Toddlers

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4 <- brm_default(
  prop_exit ~ 1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c +
    (1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_fam3and4, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4,
        file = here(model_fits_dir, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_tidy_summary <- as_tibble(summary(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_tidy_summary_model_summary.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_effect.rds"))

# get main coefficient estimate and HDI for successful fam anticipation effect
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(b_successful_fam_anticipation_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_successful_fam_anticipation_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(`b_condition_c:successful_fam_anticipation_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_condition_successful_fam_anticipation_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null <- update(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4, 
                                                           formula = ~ . - condition_c * successful_fam_anticipation_c,
                                                           cores = n_cores)
summary(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null.rds"))

test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking_3and4 <-
  brms::bayes_factor(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4, bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null)

saveRDS(test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking_3and4, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking_3and4.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4)
rm(bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_null)
gc()
```

###### Adults

```{r}
bm_aoi_adults_sufficient_fam_prop_looking_3and4 <- brm_default(
  prop_exit ~ 1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c +
    (1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_fam3and4, age_cohort == "adults")
)
summary(bm_aoi_adults_sufficient_fam_prop_looking_3and4)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4, 
        file = here(model_fits_dir, "bm_aoi_adults_sufficient_fam_prop_looking_3and4.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_adults_sufficient_fam_prop_looking_3and4_tidy_summary <- as_tibble(summary(bm_aoi_adults_sufficient_fam_prop_looking_3and4)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_3and4_tidy_summary_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_effect <- bm_aoi_adults_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_effect.rds"))


# get main coefficient estimate and HDI for successful fam anticipation effect
bm_aoi_adults_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect <- bm_aoi_adults_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(b_successful_fam_anticipation_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_3and4_successful_fam_anticipation_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_successful_fam_anticipation_effect <- bm_aoi_adults_sufficient_fam_prop_looking_3and4 %>%
  spread_draws(`b_condition_c:successful_fam_anticipation_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_3and4_condition_successful_fam_anticipation_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_sufficient_fam_prop_looking_3and4_null <- update(bm_aoi_adults_sufficient_fam_prop_looking_3and4, 
                                                         formula = ~ . - condition_c * successful_fam_anticipation_c,
                                                         cores = n_cores)
summary(bm_aoi_adults_sufficient_fam_prop_looking_3and4_null)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_3and4_null, 
        file = here(model_fits_dir, "bm_aoi_adults_sufficient_fam_prop_looking_3and4_null.rds"))

test_m_comparison_aoi_adults_sufficient_fam_prop_looking_3and4 <- brms::bayes_factor(bm_aoi_adults_sufficient_fam_prop_looking_3and4, bm_aoi_adults_sufficient_fam_prop_looking_3and4_null)

saveRDS(test_m_comparison_aoi_adults_sufficient_fam_prop_looking_3and4,
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_sufficient_fam_prop_looking_3and4.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_sufficient_fam_prop_looking_3and4)
rm(bm_aoi_adults_sufficient_fam_prop_looking_3and4_null)
gc()
```

```{r}
# Creating results table
table_names_fam_test <- c("bm_aoi_adults_correct_final_fam_trial_tidy_summary", "bm_aoi_toddlers_correct_final_fam_trial_tidy_summary", "bm_aoi_adults_sufficient_fam_prop_looking_3and4_tidy_summary", "bm_aoi_toddlers_sufficient_fam_prop_looking_3and4_tidy_summary")

# Create a function to extract age cohort and test phase from the table names
extract_metadata <- function(table_names_fam_test) {
  parts <- strsplit(table_names_fam_test, "_")[[1]]
  list(
    measure = parts[4], # e.g., "test"
    age_cohort = parts[3]  # e.g., "adults"
  )
}

# Combine all tables into one
combined_brm_results_fam_test_3and4 <- table_names_fam_test %>%
  map_df(~ {
    metadata <- extract_metadata(.x)
    get(.x) %>% 
      mutate(
        measure = metadata$measure,
        age_cohort = metadata$age_cohort,
        model = paste(measure, age_cohort, sep = " ")
      )
  }) %>%
  select(model, everything()) %>% # Reorder columns 
  select(-measure, -age_cohort) %>% 
  mutate(term = term %>%
    str_replace_all("condition_c", "Condition") %>%
    str_replace_all("successful_fam_anticipation_c", "Successful Fam Anticipation") %>% 
    str_replace_all("correct_first_look_final_fam_trial_c", "Correct First Look Final Fam") %>%
    str_replace_all("familiarization_trial_num_4", "Trial Number"),
    model = model %>% 
    str_replace_all("adults sufficient", "adults sufficient familiarization") %>%
    str_replace_all("toddlers sufficient", "toddlers sufficient familiarization") %>%
    str_replace_all("toddlers correct", "toddlers correct first look") %>% 
    str_replace_all("adults correct", "adults correct first look"))


# View the combined table
print(combined_brm_results_fam_test_3and4)

saveRDS(combined_brm_results_fam_test_3and4,
  file = here(RESULTS_FOLDER, "combined_brm_results_fam_test_3and4.rds")
)
```

#### 2.b.b. Above >50% looking across all four familiarization trials

##### Plot

```{r}
# join overall familiarization looking in to test trial
summarize_participant_test_first_trial_all_fam_trials <- summarize_participant_test_first_trial %>%
  left_join(summarize_participant_familiarization_overall) %>%
  mutate(successful_fam_anticipation_c = case_when(
    fam_prop_exit > 0.5 ~ 0.5,
    fam_prop_exit <= 0.5 ~ -0.5,
    TRUE ~ NA
  ))

# overall plot
# plot average proportion looking
overall_p_sufficient_fam_prop_looking_all_fam_trials <- ggplot(filter(summarize_participant_test_first_trial_all_fam_trials, fam_prop_exit > 0.5), 
                                                aes(x = condition, y = prop_exit, color = condition)) +
  # geom_violin()+
  # geom_boxplot()+
  geom_beeswarm(alpha = 0.2, cex = 0.5) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_all_fam_trials, fam_prop_exit > 0.5 & condition == "ignorance"), 
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_all_fam_trials, fam_prop_exit > 0.5 & condition == "knowledge"), 
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(~age_cohort) +
  theme(legend.position = "none") +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p_sufficient_fam_prop_looking_all_fam_trials
ggsave(here(plot_path, "overall_proportion_first_trial_target_exit_looking_sufficient_fam_prop_looking_all_fam_trials.png"), 
       bg = "white", width = 9, height = 6)
```

##### Summary Statistics

```{r}
summarize_test_aoi_sufficient_fam_prop_looking_all_fam_trials <- summarize_participant_test_first_trial_all_fam_trials %>%
  filter(fam_prop_exit > 0.5) %>%
  group_by(age_cohort, condition) %>%
  summarize(
    participant_num = sum(!is.na(prop_exit)),
    mean_target_looking = mean(prop_exit, na.rm = T),
    sd_target_looking = sd(prop_exit, na.rm = T),
    mean_target_looking_general = mean(prop_general, na.rm = T),
    sd_target_looking_general = sd(prop_general, na.rm = T),
  )

summarize_test_aoi_sufficient_fam_prop_looking_all_fam_trials %>%
  knitr::kable()
```

##### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) on first-trial proportion target looking during the anticipatory window for only those participants who fixated the target more than half of the time during all familiarization trial.

###### Toddlers

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking <- brm_default(
  prop_exit ~ 1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c +
    (1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_all_fam_trials, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_sufficient_fam_prop_looking)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking,
        file = here(model_fits_dir, "bm_aoi_toddlers_sufficient_fam_prop_looking.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking_tidy_summary <- as_tibble(summary(bm_aoi_toddlers_sufficient_fam_prop_looking)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_tidy_summary_model_summary.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI
bm_aoi_toddlers_sufficient_fam_prop_looking_condition_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_condition_effect.rds"))

# get main coefficient estimate and HDI for successful fam anticipation effect
bm_aoi_toddlers_sufficient_fam_prop_looking_successful_fam_anticipation_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking %>%
  spread_draws(b_successful_fam_anticipation_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_successful_fam_anticipation_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_successful_fam_anticipation_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_toddlers_sufficient_fam_prop_looking_condition_successful_fam_anticipation_effect <- bm_aoi_toddlers_sufficient_fam_prop_looking %>%
  spread_draws(`b_condition_c:successful_fam_anticipation_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_sufficient_fam_prop_looking_condition_successful_fam_anticipation_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_sufficient_fam_prop_looking_null <- update(bm_aoi_toddlers_sufficient_fam_prop_looking, 
                                                           formula = ~ . - condition_c * successful_fam_anticipation_c,
                                                           cores = n_cores)
summary(bm_aoi_toddlers_sufficient_fam_prop_looking_null)

saveRDS(bm_aoi_toddlers_sufficient_fam_prop_looking_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_sufficient_fam_prop_looking_null.rds"))

test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking <-
  brms::bayes_factor(bm_aoi_toddlers_sufficient_fam_prop_looking, bm_aoi_toddlers_sufficient_fam_prop_looking_null)

saveRDS(test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_sufficient_fam_prop_looking.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_sufficient_fam_prop_looking)
rm(bm_aoi_toddlers_sufficient_fam_prop_looking_null)
gc()
```

###### Adults

```{r}
bm_aoi_adults_sufficient_fam_prop_looking <- brm_default(
  prop_exit ~ 1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c +
    (1 + condition_c + successful_fam_anticipation_c + condition_c * successful_fam_anticipation_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_all_fam_trials, age_cohort == "adults")
)
summary(bm_aoi_adults_sufficient_fam_prop_looking)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking, 
        file = here(model_fits_dir, "bm_aoi_adults_sufficient_fam_prop_looking.rds"))
```

Organize table in a tidy format

```{r}
bm_aoi_adults_sufficient_fam_prop_looking_tidy_summary <- as_tibble(summary(bm_aoi_adults_sufficient_fam_prop_looking)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_tidy_summary_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_sufficient_fam_prop_looking_condition_effect <- bm_aoi_adults_sufficient_fam_prop_looking %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_condition_effect.rds"))


# get main coefficient estimate and HDI for successful fam anticipation effect
bm_aoi_adults_sufficient_fam_prop_looking_successful_fam_anticipation_effect <- bm_aoi_adults_sufficient_fam_prop_looking %>%
  spread_draws(b_successful_fam_anticipation_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_successful_fam_anticipation_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_successful_fam_anticipation_effect.rds"))

# get main coefficient estimate and HDI for interaction
bm_aoi_adults_sufficient_fam_prop_looking_condition_successful_fam_anticipation_effect <- bm_aoi_adults_sufficient_fam_prop_looking %>%
  spread_draws(`b_condition_c:successful_fam_anticipation_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_sufficient_fam_prop_looking_condition_successful_fam_anticipation_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_sufficient_fam_prop_looking_null <- update(bm_aoi_adults_sufficient_fam_prop_looking, 
                                                         formula = ~ . - condition_c * successful_fam_anticipation_c,
                                                         cores = n_cores)
summary(bm_aoi_adults_sufficient_fam_prop_looking_null)

saveRDS(bm_aoi_adults_sufficient_fam_prop_looking_null, 
        file = here(model_fits_dir, "bm_aoi_adults_sufficient_fam_prop_looking_null.rds"))

test_m_comparison_aoi_adults_sufficient_fam_prop_looking <- brms::bayes_factor(bm_aoi_adults_sufficient_fam_prop_looking, bm_aoi_adults_sufficient_fam_prop_looking_null)

saveRDS(test_m_comparison_aoi_adults_sufficient_fam_prop_looking,
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_sufficient_fam_prop_looking.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_sufficient_fam_prop_looking)
rm(bm_aoi_adults_sufficient_fam_prop_looking_null)
gc()
```

```{r}
# Creating results table
table_names_fam_test <- c("bm_aoi_adults_sufficient_fam_prop_looking_tidy_summary", "bm_aoi_toddlers_sufficient_fam_prop_looking_tidy_summary", "bm_aoi_adults_correct_final_fam_trial_tidy_summary", "bm_aoi_toddlers_correct_final_fam_trial_tidy_summary")

# Create a function to extract age cohort and test phase from the table names
extract_metadata <- function(table_names_fam_test) {
  parts <- strsplit(table_names_fam_test, "_")[[1]]
  list(
    measure = parts[4], # e.g., "test"
    age_cohort = parts[3]  # e.g., "adults"
  )
}

# Combine all tables into one
combined_brm_results_fam_test <- table_names_fam_test %>%
  map_df(~ {
    metadata <- extract_metadata(.x)
    get(.x) %>% 
      mutate(
        measure = metadata$measure,
        age_cohort = metadata$age_cohort,
        model = paste(measure, age_cohort, sep = " ")
      )
  }) %>%
  select(model, everything()) %>% # Reorder columns 
  select(-measure, -age_cohort) %>% 
  mutate(term = term %>%
    str_replace_all("condition_c", "Condition") %>%
    str_replace_all("successful_fam_anticipation_c", "Successful Fam Anticipation") %>% 
    str_replace_all("correct_first_look_final_fam_trial_c", "Correct First Look Final Fam") %>%
    str_replace_all("familiarization_trial_num_4", "Trial Number"),
    model = model %>% 
    str_replace_all("adults sufficient", "adults sufficient familiarization") %>%
    str_replace_all("toddlers sufficient", "toddlers sufficient familiarization") %>%
    str_replace_all("toddlers correct", "toddlers correct first look") %>% 
    str_replace_all("adults correct", "adults correct first look"))


# View the combined table
print(combined_brm_results_fam_test)

saveRDS(combined_brm_results_fam_test,
  file = here(RESULTS_FOLDER, "combined_brm_results_fam_test.rds")
)
```

### 2.c. Correlation between familiarization and test

#### Plot 

```{r}
correlation_plot_fam_test <- ggplot(summarize_participant_test_first_trial,
                                    aes(fam_prop_exit, prop_exit, color = condition)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  geom_point(alpha = 0.25) +
  geom_smooth(method = "lm") +
  facet_wrap(~age_cohort) +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Overall Proportion DLS during Familiarization") +
  ylab("Proportion DLS during First Test Trial")
correlation_plot_fam_test
ggsave(here(plot_path, "correlation_plot_fam_test.png"), 
       bg = "white", width = 9, height = 6)

# correlation function
compute_correlation <- function(data) {
  result <- cor.test(data$fam_prop_exit, data$prop_exit)
  # return the estimate, p-value,df, and test statistic of cor.test
  
  return(data.frame(
    correlation_estimate = result$estimate,
    correlation_df = result$parameter,
    correlation_p_value = result$p.value,
    correlation_statistic = result$statistic
  ))
}
# correlation between familiarization and test
correlation_fam_test_overall <- summarize_participant_test_first_trial %>%
  select(age_cohort, fam_prop_exit, prop_exit) %>%
  group_by(age_cohort) %>%
  nest() %>%
  # use map to compute correlation
  summarize(correlation = map(data, compute_correlation)) %>%
  # extract the correlation values into tidy data frame
  unnest(correlation)

correlation_fam_test_overall %>%
  knitr::kable()

correlation_fam_test_by_age <- summarize_participant_test_first_trial %>%
  select(age_cohort, condition, fam_prop_exit, prop_exit) %>%
  group_by(age_cohort, condition) %>%
  nest() %>%
  # use map to compute correlation
  summarize(correlation = map(data, compute_correlation)) %>%
  # extract the correlation values into tidy data frame
  unnest(correlation)

correlation_fam_test_by_age %>%
  knitr::kable()

saveRDS(correlation_fam_test_by_age, 
        file = here(RESULTS_FOLDER, "correlation_fam_test_by_age.rds"))
```

Is there an interaction between condition and the proportion familiarization looking effect for toddlers?

```{r}
correlation_interaction_fam_test_toddlers <- lm(
  prop_exit ~ fam_prop_exit * condition_c,
  data = filter(summarize_participant_test_first_trial, age_cohort == "toddlers")
)
summary(correlation_interaction_fam_test_toddlers)

saveRDS(correlation_interaction_fam_test_toddlers, 
        file = here(RESULTS_FOLDER, "correlation_interaction_fam_test_toddlers.rds"))
```

## 3. If we have a sufficiently large sample of participants tested with online sources (e.g., contributions of at least 32 participants), we will conduct a separate analysis with a model term for online participants that estimates whether condition effects are different in this population. We will further report whether exclusion rates are different for this population.

### Data collection type: in-lab vs. web-based

#### Summary Statistics

```{r}
## TODO this breaks because the grouping variables data_type, method_c are missing
## The ordering of the summarize_participant_* declarations is messed up, so I give up for now
## AT: this works for me
summarize_test_aoi_method <- summarize_participant_test_first_trial %>%
  group_by(age_cohort, lab_id, 
           participant_lab_id, participant_id, 
           condition, condition_c, data_type, method_c) %>%
  summarize(
    n = n(),
    mean_subj_prop_exit = mean(prop_exit, na.rm = T)
  ) %>%
  group_by(age_cohort, condition, condition_c, data_type, method_c) %>%
  summarize(
    participant_num = sum(!is.na(mean_subj_prop_exit)),
    mean_target_looking = mean(mean_subj_prop_exit, na.rm = T),
    sd_target_looking = sd(mean_subj_prop_exit, na.rm = T),
    t_test = list(broom::tidy(t.test(mean_subj_prop_exit, alternative = "two.sided", mu = 0.5)))
  ) %>%
  mutate(
    # 95% CIs
    lower_ci_target_looking = mean_target_looking - 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking = mean_target_looking +
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    # mean_target_looking_general = mean(prop_general, na.rm=T),
    # sd_target_looking_general=sd(prop_general,na.rm=T),
    lower_ci_target_looking_general = mean_target_looking - 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking_general = mean_target_looking + 
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    p.value = purrr::map(t_test, ~ select(.x, c("p.value", "parameter", "statistic")))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval = statistic,
    df = parameter
  )


summarize_test_aoi_method %>%
  knitr::kable()
```

### Main Model

Fitting the main Bayesian hierarchical model testing the effect of condition (ignorance vs. knowledge) and method (in-lab vs. web-based) on first-trial proportion target looking during the anticipatory window.

#### Toddlers

```{r}
bm_aoi_toddlers_method <- brm_default(
  prop_exit ~ 1 + condition_c + method_c + condition_c * method_c + 
    (1 + condition_c + method_c + condition_c * method_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "toddlers")
)
summary(bm_aoi_toddlers_method)
prior_summary(bm_aoi_toddlers_method)

saveRDS(bm_aoi_toddlers_method, 
        file = here(model_fits_dir, "bm_aoi_toddlers_method.rds"))
```

Summarize outcomes

```{r}
# get_variables(bm_aoi_toddlers)
# get main coefficient estimate and HDI
bm_aoi_toddlers_method_condition_effect <- bm_aoi_toddlers_method %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_method_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_method_condition_effect.rds"))

bm_aoi_toddlers_method_method_effect <- bm_aoi_toddlers_method %>%
  spread_draws(b_method_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_method_method_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_method_method_effect.rds"))

bm_aoi_toddlers_method_condition_method_interaction <- bm_aoi_toddlers_method %>%
  spread_draws(`b_condition_c:method_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_toddlers_method_condition_method_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_toddlers_method_condition_method_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_toddlers_method_null <- update(bm_aoi_toddlers_method, 
                                      formula = ~ . - condition_c:method_c,
                                      cores = n_cores)
summary(bm_aoi_toddlers_method_null)

saveRDS(bm_aoi_toddlers_method_null, 
        file = here(model_fits_dir, "bm_aoi_toddlers_method_null.rds"))

test_m_comparison_aoi_toddlers_method <- brms::bayes_factor(bm_aoi_toddlers_method, bm_aoi_toddlers_method_null)

saveRDS(test_m_comparison_aoi_toddlers_method, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_toddlers_method.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_toddlers_method)
rm(bm_aoi_toddlers_method_null)
gc()
```

#### Adults

```{r}
bm_aoi_adults_method <- brm_default(
  prop_exit ~ 1 + condition_c * method_c + 
    (1 + condition_c * method_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "adults")
)
summary(bm_aoi_adults_method)

saveRDS(bm_aoi_adults_method, 
        file = here(model_fits_dir, "bm_aoi_adults_method.rds"))
```
Summarize outcomes

```{r}
# get main coefficient estimate and HDI
bm_aoi_adults_method_condition_effect <- bm_aoi_adults_method %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_method_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_method_condition_effect.rds"))

bm_aoi_adults_method_method_effect <- bm_aoi_adults_method %>%
  spread_draws(b_method_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_method_method_effect, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_method_method_effect.rds"))

bm_aoi_adults_method_condition_method_interaction <- bm_aoi_adults_method %>%
  spread_draws(`b_condition_c:method_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_aoi_adults_method_condition_method_interaction, 
        file = here(RESULTS_FOLDER, "bm_aoi_adults_method_condition_method_interaction.rds"))
```

Compute the Bayes factor using bridge sampling

```{r}
bm_aoi_adults_method_null <- update(bm_aoi_adults_method, 
                                    formula = ~ . - condition_c:method_c,
                                    cores = n_cores)
summary(bm_aoi_adults_method_null)

saveRDS(bm_aoi_adults_method_null, 
        file = here(model_fits_dir, "bm_aoi_adults_method_null.rds"))

test_m_comparison_aoi_adults_method <- brms::bayes_factor(bm_aoi_adults_method, bm_aoi_adults_method_null)

saveRDS(test_m_comparison_aoi_adults_method, 
        file = here(RESULTS_FOLDER, "test_m_comparison_aoi_adults_method.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_aoi_adults_method)
rm(bm_aoi_adults_method_null)
gc()
```

## 4. If we observe substantial looking (defined *post hoc* by evaluating scatter plot videos of gaze data) to the boxes as well as the tunnel exit AOIs, we will conduct an exploratory analysis using tighter AOIs around tunnel exits and boxes, asking whether box and tunnel looking vary separately by age or by condition. In particular, we expect that the difference in AL between the two conditions will be bigger for the tunnel exits than for the box (as looks to the correct box might indicate looks to the target, which is in the same box for both conditions, rather than action anticipation).


```{r}
# AOIs target_box and target_exit - plotting Proportional target looking to box

overall_p_test_box <- ggplot(summarize_participant_test_first_trial, 
                             aes(x = condition, y = prop_box, color = condition)) +
  # geom_violin()+
  # geom_boxplot()+
  geom_beeswarm(alpha = 0.2, cex = 0.5) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial, condition == "ignorance"), 
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial, condition == "knowledge"), 
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(~age_cohort) +
  theme(legend.position = "none") +
  ggtitle("Test") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
  ylab("Proportion Looking to Box\n(Anticipatory Window, First Trial)")
overall_p_test_box

ggsave(here(plot_path, "overall_p_test_box.png"),
       bg = "white", width = 14, height = 9)
# ggsave(here(paper_path,"FigureX.png"),bg="white",width=14, height=9)
```

Plot the effect by age

```{r}
kid_prop_by_age_box <- ggplot(filter(summarize_participant_test_first_trial, N_exit >= 5 & age_cohort == "toddlers"), 
                              aes(x = age_mo, y = prop_box, color = condition)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "lm") +
  xlab("Age (in months)") +
  ylab("Proportion Looking to Box\n(Anticipatory Window, First Trial)") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1")
kid_prop_by_age_box
ggsave(here(plot_path, "kids_proportion_first_trial_target_box_looking_by_age.png"), 
       bg = "white", width = 9, height = 6)
```

Difference in PTL between conditions for boxes smaller than for exits?
```{r}
# something doesn't work in loading all Results RDSs, loading it manually for now here
summarize_participant_test_first_trial <- readRDS(file = here(RESULTS_FOLDER, "summarize_participant_test_first_trial.rds"))

diff_box_exit <- summarize_participant_test_first_trial %>%
  group_by(age_cohort, lab_id, participant_lab_id, participant_id, condition) %>%
  summarize(
    n = n(),
    mean_subj_prop_exit = mean(prop_exit, na.rm = T),
    mean_subj_prop_box = mean(prop_box, na.rm = T)
  ) %>%
  group_by(age_cohort, condition) %>%
  summarize(
    # participant_num=sum(!is.na(mean_subj_prop_exit)),
    mean_exit_looking = mean(mean_subj_prop_exit, na.rm = T),
    mean_box_looking = mean(mean_subj_prop_box, na.rm = T)
  ) %>%
  pivot_wider(names_from = condition, values_from = c(mean_exit_looking, mean_box_looking)) %>%
  mutate(
    diff_exit = mean_exit_looking_knowledge - mean_exit_looking_ignorance,
    diff_box = mean_box_looking_knowledge - mean_box_looking_ignorance
  )
```
Adults: difference between conditions for boxes larger than for exits
Toddlers: difference between conditions for boxes slightly smaller than for exits

### Main Model

#### Toddlers

```{r}
bm_box_toddlers <- brm_default(
  prop_box ~ 1 + condition_c + age_mo_c + condition_c * age_mo_c +
    (1 + condition_c + age_mo_c + condition_c * age_mo_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "toddlers")
)
summary(bm_box_toddlers)
# prior_summary(bm_aoi_toddlers)

saveRDS(bm_box_toddlers,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_toddlers.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_box_toddlers)
# get main coefficient estimate and HDI
bm_box_toddlers_condition_effect <- bm_box_toddlers %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_toddlers_condition_effect,
  file = here(RESULTS_FOLDER, "bm_box_toddlers_condition_effect.rds")
)

bm_box_toddlers_age_effect <- bm_box_toddlers %>%
  spread_draws(b_age_mo_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_toddlers_age_effect,
  file = here(RESULTS_FOLDER, "bm_box_toddlers_age_effect.rds")
)

bm_box_toddlers_condition_age_interaction <- bm_box_toddlers %>%
  spread_draws(`b_condition_c:age_mo_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_toddlers_condition_age_interaction,
  file = here(RESULTS_FOLDER, "bm_box_toddlers_condition_age_interaction.rds")
)
```

Visualize model coefficients

```{r}
bm_box_toddlers %>%
  spread_draws(b_condition_c, b_age_mo_c, `b_condition_c:age_mo_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient, y = b)) +
  stat_halfeye() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  theme_cowplot() +
  scale_x_discrete(
    limits = c("b_condition_c:age_mo_c", "b_age_mo_c", "b_condition_c"),
    labels = c("Condition x Age", "Age", "Condition")
  ) +
  ylab("Model Coefficient Estimate") +
  xlab("Model Predictor") +
  coord_flip()
ggsave(here(plot_path, "test_toddlers_box_model_coefficients.png"),
  bg = "white", width = 9, height = 6
)
```

Compute Bayes Factor (bridge sampling approach) - Condition Effect

```{r}
bm_box_toddlers_condition_null <- update(bm_box_toddlers, 
                                         formula = ~ . - condition_c,
                                         cores = n_cores)
summary(bm_box_toddlers_condition_null)

saveRDS(bm_box_toddlers_condition_null,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_toddlers_condition_null.rds")
)

test_box_m_comparison_PTL_toddlers <- brms::bayes_factor(
  bm_box_toddlers, bm_box_toddlers_condition_null
)

saveRDS(test_box_m_comparison_PTL_toddlers,
  file = here(RESULTS_FOLDER, "test_box_m_comparison_PTL_toddlers.rds")
)
```

Compute Bayes Factor (bridge sampling approach) - Condition*Age Interaction Effect

```{r}
bm_box_toddlers_interaction_null <- update(bm_box_toddlers, 
                                           formula = ~ . - condition_c * age_mo_c,
                                           cores = n_cores)
summary(bm_box_toddlers_interaction_null)

saveRDS(bm_box_toddlers_interaction_null,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_toddlers_interaction_null.rds")
)

test_box_m_comparison_PTL_toddlers_interaction <- brms::bayes_factor(
  bm_box_toddlers, bm_box_toddlers_interaction_null
)

saveRDS(test_box_m_comparison_PTL_toddlers_interaction,
  file = here(RESULTS_FOLDER, "test_box_m_comparison_PTL_toddlers_interaction.rds")
)
```

#### Adults

```{r}
bm_box_adults <- brm_default(
  prop_box ~ 1 + condition_c + age_mo_c + condition_c * age_mo_c +
    (1 + condition_c + age_mo_c + condition_c * age_mo_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial, age_cohort == "adults")
)
summary(bm_box_adults)
# prior_summary(bm_aoi_adults)

saveRDS(bm_box_adults,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_adults.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_box_adults)
# get main coefficient estimate and HDI
bm_box_adults_condition_effect <- bm_box_adults %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_adults_condition_effect,
  file = here(RESULTS_FOLDER, "bm_box_adults_condition_effect.rds")
)

bm_box_adults_age_effect <- bm_box_adults %>%
  spread_draws(b_age_mo_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_adults_age_effect,
  file = here(RESULTS_FOLDER, "bm_box_adults_age_effect.rds")
)

bm_box_adults_condition_age_interaction <- bm_box_adults %>%
  spread_draws(`b_condition_c:age_mo_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_box_adults_condition_age_interaction,
  file = here(RESULTS_FOLDER, "bm_box_adults_condition_age_interaction.rds")
)
```

Visualize model coefficients

```{r}
bm_box_adults %>%
  spread_draws(b_condition_c, b_age_mo_c, `b_condition_c:age_mo_c`, sigma) %>%
  pivot_longer(cols = starts_with("b_"), names_to = "coefficient", values_to = "b") %>%
  ggplot(aes(x = coefficient, y = b)) +
  stat_halfeye() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  theme_cowplot() +
  scale_x_discrete(
    limits = c("b_condition_c:age_mo_c", "b_age_mo_c", "b_condition_c"),
    labels = c("Condition x Age", "Age", "Condition")
  ) +
  ylab("Model Coefficient Estimate") +
  xlab("Model Predictor") +
  coord_flip()
ggsave(here(plot_path, "test_adults_box_model_coefficients.png"),
  bg = "white", width = 9, height = 6
)
```

Compute Bayes Factor (bridge sampling approach) - Condition Effect

```{r}
bm_box_adults_condition_null <- update(bm_box_adults, 
                                         formula = ~ . - condition_c,
                                         cores = n_cores)
summary(bm_box_adults_condition_null)

saveRDS(bm_box_adults_condition_null,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_adults_condition_null.rds")
)

test_box_m_comparison_PTL_adults <- brms::bayes_factor(
  bm_box_adults, bm_box_adults_condition_null
)

saveRDS(test_box_m_comparison_PTL_adults,
  file = here(RESULTS_FOLDER, "test_box_m_comparison_PTL_adults.rds")
)
```

Compute Bayes Factor (bridge sampling approach) - Condition*Age Interaction Effect

```{r}
bm_box_adults_interaction_null <- update(bm_box_adults, 
                                           formula = ~ . - condition_c * age_mo_c,
                                           cores = n_cores)
summary(bm_box_adults_interaction_null)

saveRDS(bm_box_adults_interaction_null,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_box_adults_interaction_null.rds")
)

test_box_m_comparison_PTL_adults_interaction <- brms::bayes_factor(
  bm_box_adults, bm_box_adults_interaction_null
)

saveRDS(test_box_m_comparison_PTL_adults_interaction,
  file = here(RESULTS_FOLDER, "test_box_m_comparison_PTL_adults_interaction.rds")
)
```

## 5. Looking patterns during mouse's change of location

Introduce new AOIs during location change: bear and mouse
Rough dimensions of new AOIs (include all movements during TOI + double-check using the heatmap-videos):

Time frame of interest (TOI; from “Box A reopens and mouse jumps out” to “Box B closes with mouse inside”)
IG: 20:52 - 25:46
KNOW: 24:63 - 29:00


### 5.1. Compare looking patterns of toddlers and adults

Hypothesis 1: adults shift more than toddlers

Create a variable shifts_num that counts the number of times the participants shift their gaze between bear and mouse. Also compute the times participants fixate the mouse or the bear during location change.

ignorance t>=20520 & t<=25460
knowledge t>=24630 & t<=29000

Function for computing shifts and looking times to bear and mouse during location change of the mouse

Summarizing a few key decisions: 
- We compute shifts whenever the AOI changes from mouse to bear and vice versa, ignoring NAs altogether in defining shifts 
- For looking time computation, we compute all samples landing on mouse or bear and multiply by 25 ms (sampling rate of 40).

```{r}
# refactored code
# computes shifts and fixation times during location change
# (specified by time intervals for each condition)
d_location_change <- test_data %>%
  mutate(window_start = ifelse(condition == "ignorance", 20520, 24630),
         window_end = ifelse(condition == "ignorance", 25460, 29000)) %>%
  filter(t_zeroed >= window_start,
         t_zeroed <= window_end,
         aoi_bearmouse_special %in% c("bear", "mouse")) %>%
  arrange(participant_lab_id, condition, t_zeroed) |> 
  group_by(participant_lab_id, condition, lab_id, age_cohort, age_mo) %>%
  mutate(
    shift = (aoi_bearmouse_special != lag(aoi_bearmouse_special)) & !is.na(lag(aoi_bearmouse_special))
  ) %>%
  summarise(
    num_shifts = sum(shift, na.rm = TRUE),
    total_fixation_bear = sum(aoi_bearmouse_special == "bear", na.rm = TRUE) * 25,
    total_fixation_mouse = sum(aoi_bearmouse_special == "mouse", na.rm = TRUE) * 25,
    .groups = "drop"
  ) %>%
  mutate(age_cohort_c = case_when(
    age_cohort == "toddlers" ~ -0.5,
    age_cohort == "adults" ~ 0.5
  ))
```

```{r}
summarize_overall_test_shifts <- d_location_change %>%
  group_by(age_cohort, condition) %>%
  summarize(
    N = sum(!is.na(num_shifts)),
    average_shifts = mean(num_shifts, na.rm = T),
    average_looking_mouse = mean(total_fixation_mouse),
    average_looking_bear = mean(total_fixation_bear)
  )

saveRDS(summarize_overall_test_shifts, 
        file = here(RESULTS_FOLDER, "summarize_overall_test_shifts.rds"))

overall_shifts_location_change <- ggplot(d_location_change, 
                                         aes(age_cohort, num_shifts, color = age_cohort)) +
  geom_point(position = position_jitter(seed = 2, width = 0.4)) +
  geom_violin(alpha = 0.5) +
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Number of shifts between mouse and bear")

overall_shifts_location_change <- ggplot(d_location_change, 
                                         aes(age_cohort, num_shifts, color = age_cohort)) +
  geom_quasirandom(method = "pseudorandom", alpha = 0.2, width=0.2) +
  # geom_beeswarm(alpha=0.2,cex=0.5)+
  geom_half_violin(data = filter(d_location_change, age_cohort == "toddlers"), 
                   aes(fill = age_cohort), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(d_location_change, age_cohort == "adults"), 
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black") +
  theme_cowplot() +
  theme_set(theme_cowplot(font_size = 24)) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  scale_y_continuous(breaks = seq(0, 11, 1)) +
  # facet_wrap(~age_cohort)+
  theme(legend.position = "none") +
  xlab("") +
  ylab("Number of shifts between mouse and bear")

overall_shifts_location_change
ggsave(here(plot_path, "overall_shifts_location_change.png"), 
       bg = "white", width = 9, height = 9)
ggsave(here(paper_path, "Figure6.png"), 
       bg = "white", width = 14, height = 9)
```


```{r}
overall_shifts_location_change_by_condition <- ggplot(d_location_change, 
                                                      aes(condition, num_shifts, color = condition)) +
  geom_quasirandom(method = "pseudorandom", alpha = 0.2,width=0.2) +
  # geom_beeswarm(alpha=0.2,cex=0.5)+
  geom_half_violin(data = filter(d_location_change, age_cohort == "toddlers"), 
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(d_location_change, age_cohort == "adults"), 
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black") +
  # theme_cowplot()+
  theme_set(theme_cowplot(font_size = 24)) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  scale_y_continuous(breaks = seq(0, 11, 1)) +
  facet_wrap(~age_cohort) +
  theme(legend.position = "none") +
  xlab("") +
  ylab("Number of shifts between mouse and bear")

overall_shifts_location_change_by_condition
ggsave(here(plot_path, "overall_shifts_location_change_by_condition.png"), 
       bg = "white", width = 9, height = 9)
ggsave(here(paper_path, "Figure6b.png"), 
       bg = "white", width = 14, height = 9)
```

```{r}
d_location_change <- d_location_change %>%
  mutate(condition_c = case_when(
    condition == "knowledge" ~ -0.5,
    condition == "ignorance" ~ 0.5
  ))

bm_test_shifts_age_cohort <- brm_default(
  num_shifts ~ 1 + condition_c + age_cohort_c + condition_c * age_cohort_c +
    (1 + condition_c | participant_lab_id) + 
    (1 + condition_c + age_cohort_c + condition_c * age_cohort_c | lab_id),
  family = poisson(),
  prior = priors_default,
  data = d_location_change
)
summary(bm_test_shifts_age_cohort)
prior_summary(bm_test_shifts_age_cohort)

saveRDS(bm_test_shifts_age_cohort, 
        file = here(model_fits_dir, "bm_test_shifts_age_cohort.rds"))
```

Organize table in a tidy format

```{r}
bm_test_shifts_age_cohort_tidy_summary <- as_tibble(summary(bm_test_shifts_age_cohort)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_test_shifts_age_cohort_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_test_shifts_age_cohort_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI
bm_test_shifts_age_cohort_age_cohort_effect <- bm_test_shifts_age_cohort %>%
  spread_draws(b_age_cohort_c) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_shifts_age_cohort_age_cohort_effect, 
        file = here(RESULTS_FOLDER, "bm_test_shifts_age_cohort_age_cohort_effect.rds"))

bm_test_shifts_age_cohort_condition_effect <- bm_test_shifts_age_cohort %>%
  spread_draws(b_condition_c) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_shifts_age_cohort_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_test_shifts_age_cohort_condition_effect.rds"))

bm_test_shifts_age_cohort_age_cohort_condition_interaction <- bm_test_shifts_age_cohort %>%
  # need to use backticks here to extract the interaction term
  spread_draws(`b_condition_c:age_cohort_c`) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_shifts_age_cohort_age_cohort_condition_interaction, 
        file = here(RESULTS_FOLDER, "bm_test_shifts_age_cohort_age_cohort_condition_interaction.rds"))
```

Compute Bayes Factor using bridge sampling

```{r}
bm_test_shifts_age_cohort_null <- update(bm_test_shifts_age_cohort, 
                                         formula = ~ . - condition_c:age_cohort_c,
                                         cores = n_cores)
summary(bm_test_shifts_age_cohort_null)

saveRDS(bm_test_shifts_age_cohort_null, 
        file = here(model_fits_dir, "bm_test_shifts_age_cohort_null.rds"))

test_m_comparison_shifts_age_cohort <- brms::bayes_factor(bm_test_shifts_age_cohort, 
                                                          bm_test_shifts_age_cohort_null)

saveRDS(test_m_comparison_shifts_age_cohort, 
        file = here(RESULTS_FOLDER, "test_m_comparison_shifts_age_cohort.rds"))
```

Bayes factor for condition effect

```{r}
bm_test_shifts_age_cohort_condition_null <- update(bm_test_shifts_age_cohort, 
                                         formula = ~ . - condition_c,
                                         cores = n_cores)
summary(bm_test_shifts_age_cohort_condition_null)

saveRDS(bm_test_shifts_age_cohort_condition_null, 
        file = here(model_fits_dir, "bm_test_shifts_age_cohort_condition_null.rds"))

test_m_comparison_shifts_age_cohort_condition <- brms::bayes_factor(bm_test_shifts_age_cohort, 
                                                          bm_test_shifts_age_cohort_condition_null)

saveRDS(test_m_comparison_shifts_age_cohort_condition, 
        file = here(RESULTS_FOLDER, "test_m_comparison_shifts_age_cohort_condition.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_shifts_age_cohort)
rm(bm_test_shifts_age_cohort_null)
gc()
```

#### Toddlers

```{r}

bm_test_shifts_toddlers <- brm_default(
  num_shifts ~ 1 + condition_c +
    (1 + condition_c | participant_lab_id) + 
    (1 + condition_c | lab_id),
  family = poisson(),
  prior = priors_default,
  data = filter(d_location_change, age_cohort == "toddlers")
)
summary(bm_test_shifts_toddlers)
prior_summary(bm_test_shifts_toddlers)

saveRDS(bm_test_shifts_toddlers, 
        file = here(model_fits_dir, "bm_test_shifts_toddlers.rds"))
```

Organize table in a tidy format

```{r}
bm_test_shifts_toddlers_tidy_summary <- as_tibble(summary(bm_test_shifts_toddlers)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_test_shifts_toddlers_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_test_shifts_toddlers_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI

bm_test_shifts_toddlers_condition_effect <- bm_test_shifts_toddlers %>%
  spread_draws(b_condition_c) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_shifts_toddlers_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_test_shifts_toddlers_condition_effect.rds"))
```

Compute Bayes Factor using bridge sampling

```{r}
bm_test_shifts_toddlers_null <- update(bm_test_shifts_toddlers, 
                                         formula = ~ . - condition_c,
                                         cores = n_cores)
summary(bm_test_shifts_toddlers_null)

saveRDS(bm_test_shifts_toddlers_null, 
        file = here(model_fits_dir, "bm_test_shifts_toddlers_null.rds"))

test_m_comparison_shifts_toddlers <- brms::bayes_factor(bm_test_shifts_toddlers, 
                                                          bm_test_shifts_toddlers_null)

saveRDS(test_m_comparison_shifts_toddlers, 
        file = here(RESULTS_FOLDER, "test_m_comparison_shifts_toddlers.rds"))
```

#### Adults

```{r}

bm_test_shifts_adults <- brm_default(
  num_shifts ~ 1 + condition_c +
    (1 + condition_c | participant_lab_id) + 
    (1 + condition_c | lab_id),
  family = poisson(),
  prior = priors_default,
  data = filter(d_location_change, age_cohort == "adults")
)
summary(bm_test_shifts_adults)
prior_summary(bm_test_shifts_adults)

saveRDS(bm_test_shifts_adults, 
        file = here(model_fits_dir, "bm_test_shifts_adults.rds"))
```

Organize table in a tidy format

```{r}
bm_test_shifts_adults_tidy_summary <- as_tibble(summary(bm_test_shifts_adults)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_test_shifts_adults_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_test_shifts_adults_model_summary.rds")
)
```

```{r}
# get main coefficient estimate and HDI

bm_test_shifts_adults_condition_effect <- bm_test_shifts_adults %>%
  spread_draws(b_condition_c) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_shifts_adults_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_test_shifts_adults_condition_effect.rds"))
```

Compute Bayes Factor using bridge sampling

```{r}
bm_test_shifts_adults_null <- update(bm_test_shifts_adults, 
                                         formula = ~ . - condition_c,
                                         cores = n_cores)
summary(bm_test_shifts_adults_null)

saveRDS(bm_test_shifts_adults_null, 
        file = here(model_fits_dir, "bm_test_shifts_adults_null.rds"))

test_m_comparison_shifts_adults <- brms::bayes_factor(bm_test_shifts_adults, 
                                                          bm_test_shifts_adults_null)

saveRDS(test_m_comparison_shifts_adults, 
        file = here(RESULTS_FOLDER, "test_m_comparison_shifts_adults.rds"))
```

#### Creating results tables for Bayesian mixed effects models of shifts during location change of mouse

```{r}
table_names_shifts <- c("bm_test_shifts_age_cohort_tidy_summary", "bm_test_shifts_toddlers_tidy_summary", "bm_test_shifts_adults_tidy_summary")

# Create a function to extract age cohort and test phase from the table names
extract_metadata_fam <- function(table_names_shifts) {
  parts <- strsplit(table_names_shifts, "_")[[1]]
  list(
    measure = parts[3], # e.g., "test"
    age_cohort = parts[4]  # e.g., "adults"
  )
}

# Combine all tables into one
combined_brm_results_shifts <- table_names_shifts %>%
  map_df(~ {
    metadata <- extract_metadata_fam(.x)
    get(.x) %>% 
      mutate(
        measure = metadata$measure,
        age_cohort = metadata$age_cohort,
        model = paste(measure, age_cohort, sep = " ")
      )
  }) %>%
  select(model, everything()) %>% # Reorder columns 
  select(-measure, -age_cohort) %>% 
  mutate(term = term %>%
    str_replace_all("condition_c", "Condition") %>%
    str_replace_all("age_cohort_c", "Age Cohort"))


# View the combined table
print(combined_brm_results_shifts)

saveRDS(combined_brm_results_shifts,
  file = here(RESULTS_FOLDER, "combined_brm_results_shifts.rds")
)
```

### 5.2. Anticipatory looking as a function of the number of gaze shifts during location change of the mouse

Hypothesis 3: “High-Shifters” (during A to B transfer) have stronger looking bias in KNOW

MSS Could this possibly be a correlation or a model that includes shift_num as fixed effect?
```{r}
# merge AL of test phase with looking behavior during location change
d_location_change <- d_location_change %>% 
  mutate(diff_mouse_bear = total_fixation_mouse - total_fixation_bear)

summarize_participant_test_both_trials_lc <- summarize_participant_test_both_trials %>% 
  left_join(d_location_change)

# plotting AL and number of shifts during location change of mouse

AL_shifts <- ggplot(summarize_participant_test_both_trials_lc, 
                    aes(num_shifts, prop_exit, color = condition)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(condition ~ age_cohort) +
  # scale_color_manual(values=c("#B16440", "#ECB808"))+
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  scale_fill_brewer(palette = "Set1") +
  scale_x_continuous(breaks = seq(0, 11, 1)) +
  scale_y_continuous(breaks = seq(0, 1, 0.25)) +
  theme_set(theme_cowplot(font_size = 24)) +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  xlab("Number of shifts during location change of mouse") +
  ylab("Proportion DLS during test trials")

AL_shifts

ggsave(here(plot_path, "AL_shifts.png"),
       bg = "white", width = 9, height = 9)
ggsave(here(paper_path, "Figure7.png"),
       bg = "white", width = 14, height = 9)
```

#### Toddlers
```{r}
bm_test_toddlers_shifts_al <- brm_default(
  prop_exit ~ 1 + condition_c + num_shifts + condition_c * num_shifts + 
    (1 + condition_c + num_shifts + condition_c * num_shifts | participant_lab_id) + 
    (1 + condition_c + num_shifts + condition_c * num_shifts | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials_lc, age_cohort == "toddlers")
)
summary(bm_test_toddlers_shifts_al)
prior_summary(bm_test_toddlers_shifts_al)

saveRDS(bm_test_toddlers_shifts_al, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_test_toddlers_shifts_al.rds"))
```

```{r}
# get main coefficient estimate and HDI
bm_test_toddlers_shifts_al_condition_effect <- bm_test_toddlers_shifts_al %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_shifts_al_condition_effect, 
        file = here(RESULTS_FOLDER, "bm_test_toddlers_shifts_al_condition_effect.rds"))

bm_test_toddlers_shifts_al_num_shifts_effect <- bm_test_toddlers_shifts_al %>%
  spread_draws(b_num_shifts, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_shifts_al_num_shifts_effect, 
        file = here(RESULTS_FOLDER, "bm_test_toddlers_shifts_al_num_shifts_effect.rds"))

bm_test_toddlers_shifts_al_condition_num_shifts_interaction <- bm_test_toddlers_shifts_al %>%
  spread_draws(`b_condition_c:num_shifts`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_shifts_al_condition_num_shifts_interaction, 
        file = here(RESULTS_FOLDER, "bm_test_toddlers_shifts_al_condition_num_shifts_interaction.rds"))
```

Bridge sampling Bayes factor approach

```{r}
bm_test_toddlers_shifts_al_null <- update(bm_test_toddlers_shifts_al, 
                                          formula = ~ . - condition_c:num_shifts,
                                          cores = n_cores)
summary(bm_test_toddlers_shifts_al_null)

saveRDS(bm_test_toddlers_shifts_al_null, 
        file = here(model_fits_dir, "bm_test_toddlers_shifts_al_null.rds"))

test_m_comparison_toddlers_shifts_al <- brms::bayes_factor(bm_test_toddlers_shifts_al, 
                                                           bm_test_toddlers_shifts_al_null)
# Warning: logml could not be estimated within maxiter, rerunning with adjusted starting value.
# Estimate might be more variable than usual.

saveRDS(test_m_comparison_toddlers_shifts_al, 
        file = here(RESULTS_FOLDER, "test_m_comparison_toddlers_shifts_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_toddlers_shifts_al)
rm(bm_test_toddlers_shifts_al_null)
gc()
```

#### Adults

```{r}
bm_test_adults_shifts_al <- brm_default(
  prop_exit ~ 1 + condition_c + num_shifts + condition_c * num_shifts + 
    (1 + condition_c + num_shifts + condition_c * num_shifts | participant_lab_id) + 
    (1 + condition_c + num_shifts + condition_c * num_shifts | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials_lc, age_cohort == "adults")
)
summary(bm_test_adults_shifts_al)
prior_summary(bm_test_adults_shifts_al)

saveRDS(bm_test_adults_shifts_al,
        file = here(model_fits_dir, "bm_test_adults_shifts_al.rds"))
```

```{r}
# get main coefficient estimate and HDI
bm_test_adults_shifts_al_condition_effect <- bm_test_adults_shifts_al %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_shifts_al_condition_effect,
        file = here(RESULTS_FOLDER, "bm_test_adults_shifts_al_condition_effect.rds"))

bm_test_adults_shifts_al_num_shifts_effect <- bm_test_adults_shifts_al %>%
  spread_draws(b_num_shifts, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_shifts_al_num_shifts_effect,
        file = here(RESULTS_FOLDER, "bm_test_adults_shifts_al_num_shifts_effect.rds"))

bm_test_adults_shifts_al_condition_num_shits_interaction <- bm_test_adults_shifts_al %>%
  spread_draws(`b_condition_c:num_shifts`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_shifts_al_condition_num_shits_interaction,
        file = here(RESULTS_FOLDER, "bm_test_adults_shifts_al_condition_num_shits_interaction.rds"))
```

Compute Bayes factor using bridge sampling

```{r}
bm_test_adults_shifts_al_null <- update(bm_test_adults_shifts_al, 
                                        formula = ~ . - condition_c:num_shifts,
                                        cores = n_cores)
summary(bm_test_adults_shifts_al_null)

saveRDS(bm_test_adults_shifts_al_null,
        file = here(model_fits_dir, "bm_test_adults_shifts_al_null.rds"))

test_m_comparison_adults_shifts_al <- brms::bayes_factor(bm_test_adults_shifts_al, 
                                                         bm_test_adults_shifts_al_null)
# Warning: Infinite value in iterative scheme, returning NA. (for 10000 iterations)
# Try rerunning with more samples.
saveRDS(test_m_comparison_adults_shifts_al,
        file = here(RESULTS_FOLDER, "test_m_comparison_adults_shifts_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_adults_shifts_al)
rm(bm_test_adults_shifts_al_null)
gc()
```

### 5.3. Anticipatory looking as a function of fixation times of bear and mouse during location change of the mouse
Hypothesis 2:  “Bear-trackers” have stronger looking bias in KNOW

MSS What is a bear-tracker? Is that a participant whose fixation times for the bear are longer than for the mouse? Compute difference score for looking times to bear vs mouse and run model for knowledge condition with diff score as fixed-effect?

```{r}
# Plotting looking times difference in looking time to mouse and bear for each age cohort and each condition
looking_time_location_change_diff_mouse_bear <- ggplot(d_location_change,
                                                       aes(condition, diff_mouse_bear, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(d_location_change, condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(d_location_change, condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~age_cohort) +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Difference in looking time between mouse and bear")

looking_time_location_change_diff_mouse_bear

ggsave(here(plot_path, "looking_time_location_change_diff_mouse_bear.png"),
       bg = "white", width = 9, height = 9)

# Plotting looking to mouse and bear for each age cohort and each condition
d_location_change_long <- d_location_change %>% pivot_longer(
  cols = c("total_fixation_mouse", "total_fixation_bear"),
  names_to = "target",
  names_prefix = "total_fixation_",
  values_to = "looking_time",
  values_drop_na = TRUE
)

looking_time_location_change_bear_mouse <- ggplot(d_location_change_long,
                                                  aes(target, looking_time, color = target)) +
  geom_point(position = position_jitter(seed = 2, width = 0.4)) +
  geom_violin(alpha = 0.5) +
  # geom_half_violin(data=filter(d_location_change_long,condition=="ignorance"),aes(fill=condition),side="l",nudge=0.3,width=0.4,alpha=0.2)+
  # geom_half_violin(data=filter(d_location_change_long,condition=="knowledge"),aes(fill=condition),side="r",nudge=0.3,width=0.4,alpha=0.2)+
  # geom_half_boxplot(data=filter(d_location_change_long,condition=="ignorance"),side="l",nudge=0.15,width=0.4,errorbar.draw=F)+
  # geom_half_boxplot(data=filter(d_location_change_long,condition=="knowledge"),side="r",nudge=0.15,width=0.4,errorbar.draw=F)+
  stat_summary(fun.data = "mean_cl_boot", size = 1.5, color = "black") +
  facet_wrap(condition ~ age_cohort) +
  theme_cowplot() +
  scale_color_manual(values = c("#B16440", "#ECB808")) +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Looking times during location change of mouse (in ms)")

looking_time_location_change_bear_mouse

ggsave(here(plot_path, "looking_time_location_change_bear_mouse.png"),
       bg = "white", width = 9, height = 9)
```

```{r}
# plotting AL and difference in looking time during location change of mouse

AL_diff_mouse_bear <- ggplot(summarize_participant_test_both_trials_lc,
                             aes(diff_mouse_bear, prop_exit, color = condition)) +
  geom_point(size = 3, alpha = 0.5) +
  geom_smooth(method = "lm") +
  facet_wrap(condition ~ age_cohort) +
  theme_set(theme_cowplot(font_size = 24)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Difference in looking time to mouse and bear\nduring location change of mouse (in ms)") +
  ylab("AL in test trials")

AL_diff_mouse_bear

ggsave(here(plot_path, "AL_diff_mouse_bear.png"),
       bg = "white", width = 14, height = 9)
ggsave(here(paper_path, "Figure8.png"),
       bg = "white", width = 14, height = 9)
```

#### Toddlers
```{r}
bm_test_toddlers_diff_mouse_bear_al <- brm_default(
  prop_exit ~ 1 + condition_c + diff_mouse_bear + condition_c * diff_mouse_bear + 
    (1 + condition_c * diff_mouse_bear | lab_id) +
    (1 + condition_c + diff_mouse_bear + condition_c * diff_mouse_bear | participant_lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials_lc, age_cohort == "toddlers")
)
# Warning: There were 36000 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 12.
# See https://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded
# Warning: Examine the pairs() plot to diagnose sampling problems
summary(bm_test_toddlers_diff_mouse_bear_al)
prior_summary(bm_test_toddlers_diff_mouse_bear_al)

saveRDS(bm_test_toddlers_diff_mouse_bear_al,
        file = here(model_fits_dir, "bm_test_toddlers_diff_mouse_bear_al.rds"))
```

```{r}
# get main coefficient estimate and HDI
bm_test_toddlers_diff_mouse_bear_al_condition_effect <- bm_test_toddlers_diff_mouse_bear_al %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_diff_mouse_bear_al_condition_effect,
        file = here(RESULTS_FOLDER, "bm_test_toddlers_diff_mouse_bear_al_condition_effect.rds"))

bm_test_toddlers_diff_mouse_bear_al_diff_effect <- bm_test_toddlers_diff_mouse_bear_al %>%
  spread_draws(b_diff_mouse_bear, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_diff_mouse_bear_al_diff_effect,
        file = here(RESULTS_FOLDER, "bm_test_toddlers_diff_mouse_bear_al_diff_effect.rds"))

bm_test_toddlers_diff_mouse_bear_al_condition_diff_interaction <- bm_test_toddlers_diff_mouse_bear_al %>%
  spread_draws(`b_condition_c:diff_mouse_bear`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_toddlers_diff_mouse_bear_al_condition_diff_interaction,
        file = here(RESULTS_FOLDER, "bm_test_toddlers_diff_mouse_bear_al_condition_diff_interaction.rds"))
```

Bridge sampling Bayes factor approach

```{r}
bm_test_toddlers_diff_mouse_bear_al_null <- update(bm_test_toddlers_diff_mouse_bear_al, 
                                                   formula = ~ . - condition_c:diff_mouse_bear, 
                                                   cores = n_cores)
summary(bm_test_toddlers_diff_mouse_bear_al_null)

saveRDS(bm_test_toddlers_diff_mouse_bear_al_null,
        file = here(model_fits_dir, "bm_test_toddlers_diff_mouse_bear_al_null.rds"))

test_m_comparison_toddlers_diff_mouse_bear_al <- brms::bayes_factor(bm_test_toddlers_diff_mouse_bear_al, 
                                                                    bm_test_toddlers_diff_mouse_bear_al_null)

saveRDS(test_m_comparison_toddlers_diff_mouse_bear_al,
        file = here(RESULTS_FOLDER, "test_m_comparison_toddlers_diff_mouse_bear_al.rds"))

# bm_test_adults_diff_mouse_bear_al <- readRDS(file = here(model_fits_dir, "bm_test_adults_diff_mouse_bear_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_toddlers_diff_mouse_bear_al)
rm(bm_test_toddlers_diff_mouse_bear_al_null)
gc()
```

#### Adults

```{r}
bm_test_adults_diff_mouse_bear_al <- brm_default(
  prop_exit ~ 1 + condition_c + diff_mouse_bear + condition_c * diff_mouse_bear +
    (1 + condition_c * diff_mouse_bear | lab_id) +
    (1 + condition_c + diff_mouse_bear + condition_c * diff_mouse_bear | participant_lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_both_trials_lc, age_cohort == "adults")
)
summary(bm_test_adults_diff_mouse_bear_al)
prior_summary(bm_test_adults_diff_mouse_bear_al)

saveRDS(bm_test_adults_diff_mouse_bear_al,
        file = here(model_fits_dir, "bm_test_adults_diff_mouse_bear_al.rds"))
```

```{r}
# get main coefficient estimate and HDI
bm_test_adults_diff_mouse_bear_al_condition_effect <- bm_test_adults_diff_mouse_bear_al %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_diff_mouse_bear_al_condition_effect,
        file = here(RESULTS_FOLDER, "bm_test_adults_diff_mouse_bear_al_condition_effect.rds"))

bm_test_adults_diff_mouse_bear_al_diff_effect <- bm_test_adults_diff_mouse_bear_al %>%
  spread_draws(b_diff_mouse_bear, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_diff_mouse_bear_al_diff_effect,
        file = here(RESULTS_FOLDER, "bm_test_adults_diff_mouse_bear_al_diff_effect.rds"))

bm_test_adults_diff_mouse_bear_al_condition_diff_interaction <- bm_test_adults_diff_mouse_bear_al %>%
  spread_draws(`b_condition_c:diff_mouse_bear`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_test_adults_diff_mouse_bear_al_condition_diff_interaction,
        file = here(RESULTS_FOLDER, "bm_test_adults_diff_mouse_bear_al_condition_diff_interaction.rds"))
```

Alternate Bayes factor approach

```{r}
# Warning: 36000 of 36000 (100.0%) transitions hit the maximum treedepth limit of 12.
# See https://mc-stan.org/misc/warnings for details.
bm_test_adults_diff_mouse_bear_al_null <- update(bm_test_adults_diff_mouse_bear_al, 
                                                 formula = ~ . - condition_c:diff_mouse_bear,
                                                 cores = n_cores)
summary(bm_test_adults_diff_mouse_bear_al_null)

saveRDS(bm_test_adults_diff_mouse_bear_al_null,
        file = here(model_fits_dir, "bm_test_adults_diff_mouse_bear_al_null.rds"))

# Warning: logml could not be estimated within maxiter, rerunning with adjusted starting value. Estimate might be more variable than usual.Iteration: 1
test_m_comparison_adults_diff_mouse_bear_al <- brms::bayes_factor(bm_test_adults_diff_mouse_bear_al, 
                                                                  bm_test_adults_diff_mouse_bear_al_null)

saveRDS(test_m_comparison_adults_diff_mouse_bear_al,
        file = here(RESULTS_FOLDER, "test_m_comparison_adults_diff_mouse_bear_al.rds"))
```


Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_adults_diff_mouse_bear_al)
rm(bm_test_adults_diff_mouse_bear_al_null)
gc()
```

### 5.4. Distraction
Hypothesis 4:  More looking at the bear in KNOW vs. IG → speaks in favor of distraction; similarly, more looking at the mouse during change in ign compared to know cond

AT: My first interpretation is that this is a condition * bear_or_mouse interaction on bear_or_mouse_LT, to determine whether distraction is happening overall; this has been implemented below. 
Is the intent to test specifically whether distraction is causing better/worse test performance? This would I think be equivalent to the previous model (condition * diff_bear_mouse).

```{r}
d_distraction <- d_location_change |> 
  pivot_longer(cols = starts_with("total_fixation_"),
               names_to = "aoi_animal",
               names_prefix = "total_fixation_",
               values_to = "total_fixation") |> 
  mutate(condition_c = case_when(
    condition == "knowledge" ~ -0.5,
    condition == "ignorance" ~ 0.5
  ),
  animal_c = case_when(
    aoi_animal == "bear" ~ 0.5,
    aoi_animal == "mouse" ~ -0.5
  ),
  age_mo_c = scale(age_mo, scale = FALSE))
```

#### Toddlers

```{r}
bm_distraction_toddlers <- brm_default(
  total_fixation ~ 1 + condition_c + animal_c + condition_c * animal_c +
    (1 + condition_c + animal_c + condition_c * animal_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(d_distraction, age_cohort == "toddlers")
)
summary(bm_distraction_toddlers)
# prior_summary(bm_distraction_toddlers)

saveRDS(bm_distraction_toddlers,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_distraction_toddlers.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_distraction_toddlers)
# get main coefficient estimate and HDI
bm_distraction_toddlers_condition_effect <- bm_distraction_toddlers %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_toddlers_condition_effect,
  file = here(RESULTS_FOLDER, "bm_distraction_toddlers_condition_effect.rds")
)

bm_distraction_toddlers_animal_effect <- bm_distraction_toddlers %>%
  spread_draws(b_animal_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_toddlers_animal_effect,
  file = here(RESULTS_FOLDER, "bm_distraction_toddlers_animal_effect.rds")
)

bm_distraction_toddlers_condition_animal_interaction <- bm_distraction_toddlers %>%
  spread_draws(`b_condition_c:animal_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_toddlers_condition_animal_interaction,
  file = here(RESULTS_FOLDER, "bm_distraction_toddlers_condition_animal_interaction.rds")
)
```

Compute Bayes Factor
```{r}
bm_distraction_toddlers_null <- update(bm_distraction_toddlers, 
                                       formula = ~ . - condition_c:animal_c,
                                       cores = n_cores)
summary(bm_distraction_toddlers_null)

saveRDS(bm_distraction_toddlers_null,
        file = here(model_fits_dir, "bm_distraction_toddlers_null.rds"))

test_m_comparison_toddlers_distraction <- brms::bayes_factor(bm_distraction_toddlers, 
                                                             bm_distraction_toddlers_null)

saveRDS(test_m_comparison_toddlers_distraction,
        file = here(RESULTS_FOLDER, "test_m_comparison_toddlers_distraction.rds"))
```

#### Adults

```{r}
bm_distraction_adults <- brm_default(
  total_fixation ~ 1 + condition_c + animal_c + condition_c * animal_c +
    (1 + condition_c + animal_c + condition_c * animal_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(d_distraction, age_cohort == "adults")
)
summary(bm_distraction_adults)
# prior_summary(bm_distraction_adults)

saveRDS(bm_distraction_adults,
  file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_distraction_adults.rds")
)
```

Summarize outcomes

```{r}
# get_variables(bm_distraction_adults)
# get main coefficient estimate and HDI
bm_distraction_adults_condition_effect <- bm_distraction_adults %>%
  spread_draws(b_condition_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_adults_condition_effect,
  file = here(RESULTS_FOLDER, "bm_distraction_adults_condition_effect.rds")
)

bm_distraction_adults_animal_effect <- bm_distraction_adults %>%
  spread_draws(b_animal_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_adults_animal_effect,
  file = here(RESULTS_FOLDER, "bm_distraction_adults_animal_effect.rds")
)

bm_distraction_adults_condition_animal_interaction <- bm_distraction_adults %>%
  spread_draws(`b_condition_c:animal_c`, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_distraction_adults_condition_animal_interaction,
  file = here(RESULTS_FOLDER, "bm_distraction_adults_condition_animal_interaction.rds")
)
```

Compute Bayes Factor
```{r}
bm_distraction_adults_null <- update(bm_distraction_adults, 
                                       formula = ~ . - condition_c:animal_c,
                                       cores = n_cores)
summary(bm_distraction_adults_null)

saveRDS(bm_distraction_adults_null,
        file = here(model_fits_dir, "bm_distraction_adults_null.rds"))

test_m_comparison_adults_distraction <- brms::bayes_factor(bm_distraction_adults, 
                                                             bm_distraction_adults_null)

saveRDS(test_m_comparison_adults_distraction,
        file = here(RESULTS_FOLDER, "test_m_comparison_adults_distraction.rds"))
```


## 6. “Fatigue”-effect: new dependent variable “overall amount of AL (irrespective of target or distractor)”
Do Toddlers and Adults differ in overall amount of AL over trials?

```{r}
Looking_all_trials <- ggplot(summarize_participant,
                             aes(as.factor(trial_num), absolute_looking)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "1"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "2"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "3"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "4"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "5"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant, trial_num == "6"),
                   aes(fill = age_cohort), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  facet_wrap(~age_cohort) +
  theme_set(theme_cowplot(font_size = 24)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  xlab("Trial number") +
  ylab("Absolute looking times to target and distractor (in ms)")

Looking_all_trials

ggsave(here(plot_path, "Looking_all_trials.png"),
       bg = "white", width = 14, height = 9)
# ggsave(here(paper_path,"FigureX.png"),bg="white",width=14, height=9)
```

```{r}
summarize_participant <- summarize_participant %>%
  mutate(age_cohort_c = case_when(
    age_cohort == "toddlers" ~ -0.5,
    age_cohort == "adults" ~ 0.5
  ), 
  trial_num_fct = as.factor(trial_num))

# AT: this model took ~15min to run on my M1 laptop
bm_al_cohort <- brm_default(
  absolute_looking ~ 1 + trial_num_fct + age_cohort_c + trial_num_fct * age_cohort_c + 
    (1 + trial_num_fct + age_cohort_c + trial_num_fct * age_cohort_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = summarize_participant
)
summary(bm_al_cohort)
# prior_summary(bm_al_cohort)

saveRDS(bm_al_cohort, 
        file = here(model_fits_dir, "bm_al_cohort.rds"))
```

AT: The estimates here are basically 0 for all predictors. This was not due to failure to converge so I'm inclined to believe that there is effectively no systematic variation in total looking overall. (I didn't bother running the null model and BF to check cuz it was gonna eat up all of my memory oops.)

Summarize outcomes

```{r}
# get main coefficient estimate and HDI
bm_al_cohort_effect <- bm_al_cohort %>%
  spread_draws(b_age_cohort_c, sigma) %>%
  mean_hdi(.width = 0.95)

# cache
saveRDS(bm_al_cohort_effect,
  file = here(RESULTS_FOLDER, "bm_al_cohort_effect.rds")
)
```

Compute Bayes Factor
```{r}
bm_al_cohort_null <- update(bm_al_cohort, 
                            formula = ~ . - age_cohort_c - trial_num_fct:age_cohort_c,
                            cores = n_cores)
summary(bm_al_cohort_null)

saveRDS(bm_al_cohort_null,
        file = here(model_fits_dir, "bm_al_cohort_null.rds"))

test_m_comparison_al_cohort <- brms::bayes_factor(bm_al_cohort, 
                                                  bm_al_cohort_null)

saveRDS(test_m_comparison_al_cohort,
        file = here(RESULTS_FOLDER, "test_m_comparison_al_cohort.rds"))
```

```{r}
rm(bm_al_cohort)
rm(bm_al_cohort_null)
gc()
```


## 7. Analyze sub-intervals of anticipatory period: 1st half vs. 2nd half
run confirmatory analyses per time window

```{r}
# filter to first trials
test_data_first_trial <- test_data %>%
  # filter to first trial only
  filter(trial_num == 5)

summarize_participant_test_first_trial_half <- test_data_first_trial %>%
  group_by(
    lab_id, age_cohort, age_mo, age_years_n, participant_lab_id, participant_id, participant_trial_id, trial_file_name,
    bear_not_visible_ms, point_of_disambiguation, video_duration_ms, condition, data_type, trial_num
  ) %>%
  # filter to relevant anticipatory window
  # based on current format, t_norm == 0 is the point of disambiguation
  # so we want the 4000 ms leading up, minus 120 ms of saccade/ planning time
  # check this!!!
  filter(t_norm <= 120 & t_norm >= -3880) %>%
  mutate(
    aoi_diff = c(0, diff(as.numeric(as.factor(aoi))))
  ) %>%
  mutate(analysis_window = case_when(
    t_norm >= -3880 & t_norm <= -1880 ~ 1,
    t_norm > -1880 & t_norm <= 120 ~ 2
  )) %>%
  group_by(lab_id, age_cohort, participant_lab_id, condition, age_mo, analysis_window, data_type) %>%
  summarize(
    t_min = min(t_norm),
    t_max = max(t_norm),
    sum_target_general = sum(aoi == "target_general", na.rm = T),
    sum_distractor_general = sum(aoi == "distractor_general", na.rm = T),
    prop_general = sum_target_general / (sum_target_general + sum_distractor_general),
    sum_target_exit = sum(aoi == "target_exit", na.rm = T),
    sum_target_box = sum(aoi == "target_box", na.rm = T),
    sum_distractor_exit = sum(aoi == "distractor_exit", na.rm = T),
    sum_distractor_box = sum(aoi == "distractor_box", na.rm = T),
    prop_exit = sum_target_exit / (sum_target_exit + sum_distractor_exit),
    prop_box = sum_target_box / (sum_target_box + sum_distractor_box),
    N_general = sum_target_general + sum_distractor_general,
    N_exit = sum_target_exit + sum_distractor_exit,
    N_box = sum_target_box + sum_distractor_box
  ) %>%
  ungroup() %>%
  # center age, condition, and method
  mutate(
    age_mo_c = age_mo - mean(age_mo, na.rm = TRUE),
    condition_c = case_when(
      condition == "knowledge" ~ -0.5,
      condition == "ignorance" ~ 0.5
    ),
    method_c = case_when( # MSS: why do we have two variables for method/data_type?
      data_type == "web-based" ~ -0.5,
      data_type == "in-lab" ~ 0.5
    )
  )

test_first_trial_half <- ggplot(summarize_participant_test_first_trial_half,
                                aes(as.factor(analysis_window), prop_exit, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_half, analysis_window == "1"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_half, analysis_window == "2"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  facet_wrap(condition ~ age_cohort) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  xlab("Analysis window") +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")

test_first_trial_half

ggsave(here(plot_path, "test_first_trial_half.png"),
       bg = "white", width = 9, height = 9)
```

## 8. AOI “box”
compare looks to target box between KNOW and IG: difference in “reality bias” between conditions (also informs hypothesis above about interactive context (No.9)

## 9. Latency of first look to target AOI (longer latency as indicator of uncertainty)
Hypothesis: Longer latency  in KNOW vs. IG

```{r}
# compute N and mean per age_cohort and group
summarize_overall_test_first_look_latency_correct <- summarize_participant_test_first_look %>%
  group_by(age_cohort, condition) %>%
  summarize(
    N = sum(!is.na(average_rt_correct)),
    average_target_rt = mean(average_rt_correct, na.rm = T)
  )

saveRDS(summarize_overall_test_first_look_latency_correct,
        file = here(RESULTS_FOLDER, "summarize_overall_test_first_look_latency_correct.rds"))

latency_first_look_target_AOI <- ggplot(summarize_participant_test_first_look,
                                        aes(condition, average_rt_correct, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_look, condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_look, condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  theme_set(theme_cowplot(font_size = 24)) +
  facet_wrap(~age_cohort) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Latency of First Look to Target Exit (in ms)")

latency_first_look_target_AOI

ggsave(here(plot_path, "latency_first_look_target_AOI.png"),
       bg = "white", width = 9, height = 9)
```


## 10. Absolute looking scores

Compute absolute looking scores to target and distractor

```{r}
summarize_participant_test_first_trial_absolute <- summarize_participant_test_first_trial %>%
  group_by(participant_lab_id, condition) %>%
  mutate(
    absolute_target_looking = sum_target_exit * 40,
    absolute_distractor_looking = sum_distractor_exit * 40,
    diff_target_distractor_looking = absolute_target_looking - absolute_distractor_looking
  )

summarize_overall_test_first_trial_absolute <- summarize_participant_test_first_trial_absolute %>%
  group_by(age_cohort, condition) %>%
  summarise(
    n = length(unique(participant_lab_id)),
    average_absolute_target_looking = mean(absolute_target_looking),
    average_absolute_distractor_looking = mean(absolute_distractor_looking),
    average_diff_target_distractor_looking = mean(diff_target_distractor_looking)
  )

test_first_trial_absolute_target_looking <- ggplot(summarize_participant_test_first_trial_absolute,
                                                   aes(condition, absolute_target_looking, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  theme_set(theme_cowplot(font_size = 24)) +
  facet_wrap(~age_cohort) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Looking Time to Target Exit (in ms)")

test_first_trial_absolute_target_looking
ggsave(here(plot_path, "test_first_trial_absolute_target_looking.png"),
       bg = "white", width = 9, height = 9)

test_first_trial_absolute_distractor_looking <- ggplot(summarize_participant_test_first_trial_absolute,
                                                       aes(condition, absolute_distractor_looking, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  theme_set(theme_cowplot(font_size = 24)) +
  facet_wrap(~age_cohort) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Looking Time to Distractor Exit (in ms)")

test_first_trial_absolute_distractor_looking
ggsave(here(plot_path, "test_first_trial_absolute_distractor_looking.png"),
       bg = "white", width = 9, height = 9)

test_first_trial_diff_target_distractor_looking <- ggplot(summarize_participant_test_first_trial_absolute,
                                                          aes(condition, diff_target_distractor_looking, color = condition)) +
  geom_beeswarm(alpha = 0.2, cex = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "ignorance"),
                   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2) +
  geom_half_violin(data = filter(summarize_participant_test_first_trial_absolute, condition == "knowledge"),
                   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  geom_hline(yintercept = 0, linetype = "dashed") +
  theme_set(theme_cowplot(font_size = 24)) +
  facet_wrap(~age_cohort) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  theme(legend.position = "none") +
  ylab("Difference in Looking Time to\nTarget and Distractor Exit (in ms)")

test_first_trial_diff_target_distractor_looking
ggsave(here(plot_path, "test_first_trial_diff_target_distractor_looking.png"),
       bg = "white", width = 9, height = 9)
```

## 11. The yo-yo effect: Location of bear during last trial and location of target in following trial

### 11.a. Test phase: Last fam trial and first test trial

```{r}
# get info on whether location of bear during last familiarization trial is identical to final location of the mouse in first test trial

fam_final_location_bear <- summarize_participant_familiarization %>%
  filter(trial_num == 4) %>% 
  ungroup() %>% 
  select(lab_id, participant_lab_id, participant_id, age_cohort, media_name)

test_first_trial_final_location_mouse <- summarize_participant_test_first_trial %>% 
  select(lab_id, participant_lab_id, participant_id, age_cohort, condition, trial_file_name) %>% 
  left_join(fam_final_location_bear)

test_first_trial_final_location_mouse$media_name <- gsub("FAM_([A-Z]{2})", "\\1", test_first_trial_final_location_mouse$media_name)

test_first_trial_final_location_mouse$trial_file_name <- gsub(".*_([A-Z]{2})(?:_new)?\\.mp4", "\\1", test_first_trial_final_location_mouse$trial_file_name)

test_first_trial_final_location_mouse$location <- ifelse(
  substr(test_first_trial_final_location_mouse$trial_file_name, 2, 2) == substr(test_first_trial_final_location_mouse$media_name, 2, 2),
  "different",
  "same"
)

location_bear_mouse_fam_test <- test_first_trial_final_location_mouse %>% 
  select(lab_id, participant_lab_id, participant_id, age_cohort, condition, location)
```

```{r}
# merge with test data

summarize_participant_test_first_trial <- summarize_participant_test_first_trial %>% 
  left_join(location_bear_mouse_fam_test)

summarize_participant_test_first_trial_wo_NA_location <- summarize_participant_test_first_trial %>% 
  filter(summarize_participant_test_first_trial$location != "NA")

# MSS: Here, we might only want to look at fam_prop_exit of the last fam trial? Currently, we are looking at mean fam_prop_exit of all four familiarization trials.
correlation_plot_fam_test <- ggplot(summarize_participant_test_first_trial_wo_NA_location,
                                    aes(fam_prop_exit, prop_exit, color = condition)) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  geom_point(alpha = 0.25) +
  geom_smooth(method = "lm") +
  facet_wrap(location~age_cohort) +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Overall Proportion Target Looking during Familiarization") +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
correlation_plot_fam_test

# plot average proportion looking by location of target on previous trial
overall_p_test_location <- ggplot(
  summarize_participant_test_first_trial_wo_NA_location,
  aes(x = condition, y = prop_exit, color = condition)
) +
  # geom_violin()+
  # geom_boxplot()+
  geom_beeswarm(alpha = 0.2, cex = 0.5) +
  geom_half_violin(
    aes(fill = condition),
    side = "r", # Right side for the violin plot
    position = position_nudge(x = 0.3), # Nudge to avoid overlap with points
    width = 0.4,
    alpha = 0.2
  ) +
 # geom_half_violin(
 #   data = filter(summarize_participant_test_first_trial, condition == "ignorance"),
 #   aes(fill = condition), side = "l", nudge = 0.3, width = 0.4, alpha = 0.2
#  ) +
 # geom_half_violin(
 #   data = filter(summarize_participant_test_first_trial, condition == "knowledge"),
 #   aes(fill = condition), side = "r", nudge = 0.3, width = 0.4, alpha = 0.2
#  ) +
  stat_summary(fun.data = "mean_cl_boot", size = 1, color = "black") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  theme_cowplot() +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  facet_wrap(~location + age_cohort) +
  theme(legend.position = "none") +
  ggtitle("Test") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
  ylab("Proportion Looking to Exit\n(Anticipatory Window, First Trial)")
overall_p_test_location
ggsave(here(plot_path, "test_overall_proportion_target_exit_looking_by_location.png"),
  bg = "white", width = 9, height = 6
)
 ```

```{r}
# Summary statistics by location and t-test against chance

summarize_test_aoi_location_chance <- summarize_participant_test_first_trial_wo_NA_location %>%
  group_by(age_cohort, lab_id, participant_lab_id, participant_id, condition, location) %>%
  summarize(
    n = n(),
    mean_subj_prop_exit = mean(prop_exit, na.rm = T)
  ) %>%
  group_by(age_cohort, condition, location) %>%
  summarize(
    participant_num = sum(!is.na(mean_subj_prop_exit)),
    mean_target_looking = mean(mean_subj_prop_exit, na.rm = T),
    sd_target_looking = sd(mean_subj_prop_exit, na.rm = T),
    t_test = list(broom::tidy(t.test(mean_subj_prop_exit, alternative = "two.sided", mu = 0.5)))
  ) %>%
  mutate(
    # 95% CIs
    lower_ci_target_looking = mean_target_looking -
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking = mean_target_looking +
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    # mean_target_looking_general = mean(prop_general, na.rm=T),
    # sd_target_looking_general=sd(prop_general,na.rm=T),
    lower_ci_target_looking_general = mean_target_looking -
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    upper_ci_target_looking_general = mean_target_looking +
      qt(1 - (0.05 / 2), participant_num - 1) * sd_target_looking / sqrt(participant_num),
    p.value = purrr::map(t_test, ~ select(.x, c("p.value", "parameter", "statistic")))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval = statistic,
    df = parameter
  )

summarize_test_aoi_location_chance %>%
  knitr::kable()

# t-test comparing location for each age_cohort and condition

summarize_test_aoi_location <- summarize_participant_test_first_trial_wo_NA_location %>%
  group_by(age_cohort, lab_id, participant_lab_id, participant_id, condition, location) %>%
  summarize(
    n = n(),
    mean_subj_prop_exit = mean(prop_exit, na.rm = TRUE)
  ) %>%
  group_by(age_cohort, condition) %>%
  summarize(
    participant_num = sum(!is.na(mean_subj_prop_exit)),
    mean_same_location = mean(mean_subj_prop_exit[location == "same"], na.rm = TRUE),
    mean_diff_location = mean(mean_subj_prop_exit[location == "different"], na.rm = TRUE),
    sd_same_location = sd(mean_subj_prop_exit[location == "same"], na.rm = TRUE),
    sd_diff_location = sd(mean_subj_prop_exit[location == "different"], na.rm = TRUE),
    t_test = list(
      broom::tidy(t.test(
        mean_subj_prop_exit[location == "same"],
        mean_subj_prop_exit[location == "different"],
        alternative = "two.sided",
        paired = FALSE
      ))
    )
  ) %>%
  mutate(
    lower_ci_same = mean_same_location - qt(1 - (0.05 / 2), participant_num - 1) *
      sd_same_location / sqrt(participant_num),
    upper_ci_same = mean_same_location + qt(1 - (0.05 / 2), participant_num - 1) *
      sd_same_location / sqrt(participant_num),
    lower_ci_diff = mean_diff_location - qt(1 - (0.05 / 2), participant_num - 1) *
      sd_diff_location / sqrt(participant_num),
    upper_ci_diff = mean_diff_location + qt(1 - (0.05 / 2), participant_num - 1) *
      sd_diff_location / sqrt(participant_num),
    p.value = purrr::map(t_test, ~ select(.x, c("p.value", "parameter", "statistic")))
  ) %>%
  select(-t_test) %>%
  unnest(p.value) %>%
  rename(
    tval = statistic,
    df = parameter
  )

summarize_test_aoi_location %>%
  knitr::kable()

# center location for Bayesian models

summarize_participant_test_first_trial_wo_NA_location <- summarize_participant_test_first_trial_wo_NA_location %>%
  mutate(
    location_c = case_when(
      location == "same" ~ -0.5,
      location == "different" ~ 0.5)
    )
```

#### Toddlers
```{r}
bm_test_toddlers_location_al <- brm_default(
  prop_exit ~ 1 + condition_c * location_c +
    (1 + condition_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_wo_NA_location, age_cohort == "toddlers")
)

summary(bm_test_toddlers_location_al)
bm_test_toddlers_location_al_summary <- summary(bm_test_toddlers_location_al)

prior_summary(bm_test_toddlers_location_al)

saveRDS(bm_test_toddlers_location_al, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_test_toddlers_location_al.rds"))

pp_check(bm_test_toddlers_location_al)
```

Organize table in a tidy format

```{r}
bm_test_toddlers_location_al_tidy_summary <- as_tibble(summary(bm_test_toddlers_location_al)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_test_toddlers_location_al_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_test_toddlers_location_al_model_summary.rds")
)
```

Bridge sampling Bayes factor approach

```{r}
bm_test_toddlers_location_al_null <- update(bm_test_toddlers_location_al, 
                                          formula = ~ . - condition_c:location_c,
                                          cores = n_cores)
summary(bm_test_toddlers_location_al_null)

saveRDS(bm_test_toddlers_location_al_null, 
        file = here(model_fits_dir, "bm_test_toddlers_location_al_null.rds"))

test_m_comparison_toddlers_location_al <- brms::bayes_factor(bm_test_toddlers_location_al, 
                                                           bm_test_toddlers_location_al_null)

saveRDS(test_m_comparison_toddlers_location_al, 
        file = here(RESULTS_FOLDER, "test_m_comparison_toddlers_location_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_toddlers_location_al)
rm(bm_test_toddlers_location_al_null)
gc()
```

#### Adults
```{r}
bm_test_adults_location_al <- brm_default(
  prop_exit ~ 1 + condition_c * location_c +
    (1 + condition_c | lab_id),
  family = gaussian,
  prior = priors_default,
  data = filter(summarize_participant_test_first_trial_wo_NA_location, age_cohort == "adults")
)
summary(bm_test_adults_location_al)
prior_summary(bm_test_adults_location_al)

saveRDS(bm_test_adults_location_al, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_test_adults_location_al.rds"))

pp_check(bm_test_adults_location_al)

```

Organize table in a tidy format

```{r}
bm_test_adults_location_al_tidy_summary <- as_tibble(summary(bm_test_adults_location_al)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_test_adults_location_al_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_test_adults_location_al_model_summary.rds")
)
```

Bridge sampling Bayes factor approach

```{r}
bm_test_adults_location_al_null <- update(bm_test_adults_location_al, 
                                          formula = ~ . - condition_c:location_c,
                                          cores = n_cores)
summary(bm_test_adults_location_al_null)

saveRDS(bm_test_adults_location_al_null, 
        file = here(model_fits_dir, "bm_test_adults_location_al_null.rds"))

test_m_comparison_adults_location_al <- brms::bayes_factor(bm_test_adults_location_al, 
                                                           bm_test_adults_location_al_null)

saveRDS(test_m_comparison_adults_location_al, 
        file = here(RESULTS_FOLDER, "test_m_comparison_adults_location_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_test_adults_location_al)
rm(bm_test_adults_location_al_null)
gc()
```

### 11.b. Familiarization phase: Influence of previous trial

```{r}
# creating variable prev_location (same/different target location as previous trial):

summarize_participant_familiarization <- summarize_participant_familiarization %>% 
  mutate(
    prev_location = case_when(
      trial_num == "1" ~ NA,
      trial_num == "2" ~ "different",
      trial_num == "3" ~ "same",
      trial_num == "4" ~ "different"),
     prev_location_c = case_when(
      prev_location == "same" ~ -0.5,
      prev_location == "different" ~ 0.5),
     prop_exit_adj = prop_exit - 0.5, # adjusting for chance
    familiarization_trial_num_4 = familiarization_trial_num - 4,
    familiarization_trial_num_c = familiarization_trial_num - 2.5)

```

#### Toddlers
```{r}

priors <- c(
  set_prior("uniform(-0.5, 0.5)", lb = -0.5, ub = 0.5, class = "Intercept"), # uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd") # normal distribution for sd/ random effects
)

bm_fam_toddlers_location_al <- brm(
  prop_exit_adj ~ 1 + prev_location_c * familiarization_trial_num_c +
    (1 | participant_id) + (1 | lab_id),
  family = gaussian,
  prior = priors,
  save_pars = save_pars(all = TRUE),
  filter(summarize_participant_familiarization, age_cohort == "toddlers" & trial_num != "1"),
  warmup = 1000,
  iter = 10000,
  chains = 4,
  cores = 4,
  seed = 123,
  sample_prior = TRUE,
  control = list(adapt_delta = 0.99, stepsize = .1, max_treedepth = 12)
)

summary(bm_fam_toddlers_location_al)
prior_summary(bm_fam_toddlers_location_al)

saveRDS(bm_fam_toddlers_location_al, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_test_toddlers_location_al.rds"))
```

Organize table in a tidy format

```{r}
bm_fam_toddlers_location_al_tidy_summary <- as_tibble(summary(bm_fam_toddlers_location_al)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_fam_toddlers_location_al_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_fam_toddlers_location_al_model_summary.rds")
)
```

Bridge sampling Bayes factor approach

```{r}
bm_fam_toddlers_location_al_null <- update(bm_fam_toddlers_location_al, 
                                          formula = ~ . - prev_location_c:familiarization_trial_num_c,
                                          cores = n_cores)
summary(bm_fam_toddlers_location_al_null)

saveRDS(bm_fam_toddlers_location_al_null, 
        file = here(model_fits_dir, "bm_fam_toddlers_location_al_null.rds"))

fam_m_comparison_toddlers_location_al <- brms::bayes_factor(bm_fam_toddlers_location_al, 
                                                           bm_fam_toddlers_location_al_null)

saveRDS(fam_m_comparison_toddlers_location_al, 
        file = here(RESULTS_FOLDER, "fam_m_comparison_toddlers_location_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_fam_toddlers_location_al)
rm(bm_fam_toddlers_location_al_null)
gc()
```

#### Adults
```{r}

priors <- c(
  set_prior("uniform(-0.5, 0.5)", lb = -0.5, ub = 0.5, class = "Intercept"), # uniform distribution for intercept
  set_prior("normal(0, .1)", class = "b"), # normal distribution for fixed-effect coefficients
  set_prior("normal(0, .05)", class = "sd") # normal distribution for sd/ random effects
)

bm_fam_adults_location_al <- brm(
  prop_exit_adj ~ 1 + prev_location_c * familiarization_trial_num_c +
    (1 | participant_id) + (1 | lab_id),
  family = gaussian,
  prior = priors,
  save_pars = save_pars(all = TRUE),
  filter(summarize_participant_familiarization, age_cohort == "adults" & trial_num != "1"),
  warmup = 1000,
  iter = 10000,
  chains = 4,
  cores = 4,
  seed = 123,
  sample_prior = TRUE,
  control = list(adapt_delta = 0.99, stepsize = .1, max_treedepth = 12)
)

summary(bm_fam_adults_location_al)
prior_summary(bm_fam_adults_location_al)

saveRDS(bm_fam_adults_location_al, 
        file = here(RESULTS_FOLDER, "bayes_model_fits", "bm_test_adults_location_al.rds"))
```

Organize table in a tidy format

```{r}
bm_fam_adults_location_al_tidy_summary <- as_tibble(summary(bm_fam_adults_location_al)$fixed,rownames=NA) %>% 
  rownames_to_column("term") %>% 
  rename(
    estimate = Estimate,
    est_error = Est.Error,
    lower_ci = `l-95% CI`,
    upper_ci = `u-95% CI`,
    rhat=Rhat
  ) %>%
  select(term,estimate,est_error,lower_ci,upper_ci,rhat)

saveRDS(bm_fam_adults_location_al_tidy_summary,
  file = here(RESULTS_FOLDER, "bm_fam_adults_location_al_model_summary.rds")
)
```

Bridge sampling Bayes factor approach

```{r}
bm_fam_adults_location_al_null <- update(bm_fam_adults_location_al, 
                                          formula = ~ . - prev_location_c:familiarization_trial_num_c,
                                          cores = n_cores)
summary(bm_fam_adults_location_al_null)

saveRDS(bm_fam_adults_location_al_null, 
        file = here(model_fits_dir, "bm_fam_adults_location_al_null.rds"))

fam_m_comparison_adults_location_al <- brms::bayes_factor(bm_fam_adults_location_al, 
                                                           bm_fam_adults_location_al_null)

saveRDS(fam_m_comparison_adults_location_al, 
        file = here(RESULTS_FOLDER, "fam_m_comparison_adults_location_al.rds"))
```

Remove the Bayes models from the environment (because the model objects are quite large).

```{r}
# remove Bayes model fits
rm(bm_fam_adults_location_al)
rm(bm_fam_adults_location_al_null)
gc()
```

```{r}
# Assume all tables are already loaded into your environment and follow this naming pattern
table_names <- c("bm_test_adults_location_al_tidy_summary", "bm_test_toddlers_location_al_tidy_summary", "bm_fam_adults_location_al_tidy_summary", "bm_fam_toddlers_location_al_tidy_summary")

# Create a function to extract age cohort and test phase from the table names
extract_metadata <- function(table_name) {
  parts <- strsplit(table_name, "_")[[1]]
  list(
    phase = parts[2], # e.g., "test"
    age_cohort = parts[3]  # e.g., "adults"
  )
}

# Combine all tables into one
combined_brm_results_location <- table_names %>%
  map_df(~ {
    metadata <- extract_metadata(.x)
    get(.x) %>% 
      mutate(
        phase = metadata$phase,
        age_cohort = metadata$age_cohort,
        model = paste(phase, age_cohort, sep = " ")
      )
  }) %>%
  select(model, everything()) %>% # Reorder columns 
  select(-phase, -age_cohort) %>% 
  mutate(term = term %>%
    str_replace_all("condition_c", "Condition") %>%
    str_replace_all("prev_location_c", "Location") %>% 
    str_replace_all("location_c", "Location") %>%
    str_replace_all("familiarization_trial_num_c", "Trial Number"))


# View the combined table
print(combined_brm_results_location)

saveRDS(combined_brm_results_location,
  file = here(RESULTS_FOLDER, "combined_brm_results_location.rds")
)
```
